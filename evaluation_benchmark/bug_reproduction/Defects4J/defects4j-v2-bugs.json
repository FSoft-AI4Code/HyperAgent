[
  {
    "project": "Chart",
    "bugId": 1,
    "changedFiles": {
      "org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java": {
        "modified": [
          [
            1797
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests",
        "methodName": "test2947660",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.AbstractCategoryItemRendererTests.test2947660(AbstractCategoryItemRendererTests.java:409)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 2,
    "changedFiles": {
      "org/jfree/data/general/DatasetUtilities.java": {
        "modified": [
          [
            755
          ],
          [
            1242
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.general.junit.DatasetUtilitiesTests",
        "methodName": "testBug2849731_2",
        "stackTrace": [
          "org.jfree.data.general.junit.DatasetUtilitiesTests.testBug2849731_2(DatasetUtilitiesTests.java:1276)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.general.junit.DatasetUtilitiesTests",
        "methodName": "testBug2849731_3",
        "stackTrace": [
          "org.jfree.data.general.junit.DatasetUtilitiesTests.testBug2849731_3(DatasetUtilitiesTests.java:1299)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 3,
    "changedFiles": {
      "org/jfree/data/time/TimeSeries.java": {
        "modified": [
          [
            1057
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.time.junit.TimeSeriesTests",
        "methodName": "testCreateCopy3",
        "stackTrace": [
          "org.jfree.data.time.junit.TimeSeriesTests.testCreateCopy3(TimeSeriesTests.java:607)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<101.0> but was:<102.0>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 4,
    "changedFiles": {
      "org/jfree/chart/plot/XYPlot.java": {
        "modified": [
          [
            4493
          ],
          [
            4501
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.axis.junit.LogAxisTests",
        "methodName": "testXYAutoRange1",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.axis.junit.LogAxisTests.testXYAutoRange1(LogAxisTests.java:260)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.axis.junit.LogAxisTests",
        "methodName": "testXYAutoRange2",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.axis.junit.LogAxisTests.testXYAutoRange2(LogAxisTests.java:288)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.axis.junit.NumberAxisTests",
        "methodName": "testXYAutoRange1",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.axis.junit.NumberAxisTests.testXYAutoRange1(NumberAxisTests.java:354)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.axis.junit.NumberAxisTests",
        "methodName": "testXYAutoRange2",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.axis.junit.NumberAxisTests.testXYAutoRange2(NumberAxisTests.java:382)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.axis.junit.ValueAxisTests",
        "methodName": "testAxisMargins",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.axis.junit.ValueAxisTests.testAxisMargins(ValueAxisTests.java:234)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.JFreeChartTests",
        "methodName": "testSerialization4",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createTimeSeriesChart(ChartFactory.java:1893)",
          "org.jfree.chart.junit.JFreeChartTests.testSerialization4(JFreeChartTests.java:448)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.ScatterPlotTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.junit.ScatterPlotTests.createChart(ScatterPlotTests.java:181)",
          "org.jfree.chart.junit.ScatterPlotTests.setUp(ScatterPlotTests.java:98)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.ScatterPlotTests",
        "methodName": "testSetSeriesToolTipGenerator",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.junit.ScatterPlotTests.createChart(ScatterPlotTests.java:181)",
          "org.jfree.chart.junit.ScatterPlotTests.setUp(ScatterPlotTests.java:98)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.ScatterPlotTests",
        "methodName": "testReplaceDataset",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createScatterPlot(ChartFactory.java:1490)",
          "org.jfree.chart.junit.ScatterPlotTests.createChart(ScatterPlotTests.java:181)",
          "org.jfree.chart.junit.ScatterPlotTests.setUp(ScatterPlotTests.java:98)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.TimeSeriesChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createTimeSeriesChart(ChartFactory.java:1893)",
          "org.jfree.chart.junit.TimeSeriesChartTests.createChart(TimeSeriesChartTests.java:176)",
          "org.jfree.chart.junit.TimeSeriesChartTests.setUp(TimeSeriesChartTests.java:95)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.TimeSeriesChartTests",
        "methodName": "testSetSeriesToolTipGenerator",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createTimeSeriesChart(ChartFactory.java:1893)",
          "org.jfree.chart.junit.TimeSeriesChartTests.createChart(TimeSeriesChartTests.java:176)",
          "org.jfree.chart.junit.TimeSeriesChartTests.setUp(TimeSeriesChartTests.java:95)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.TimeSeriesChartTests",
        "methodName": "testReplaceDataset",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createTimeSeriesChart(ChartFactory.java:1893)",
          "org.jfree.chart.junit.TimeSeriesChartTests.createChart(TimeSeriesChartTests.java:176)",
          "org.jfree.chart.junit.TimeSeriesChartTests.setUp(TimeSeriesChartTests.java:95)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYAreaChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYAreaChart(ChartFactory.java:1619)",
          "org.jfree.chart.junit.XYAreaChartTests.createChart(XYAreaChartTests.java:178)",
          "org.jfree.chart.junit.XYAreaChartTests.setUp(XYAreaChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYAreaChartTests",
        "methodName": "testSetSeriesToolTipGenerator",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYAreaChart(ChartFactory.java:1619)",
          "org.jfree.chart.junit.XYAreaChartTests.createChart(XYAreaChartTests.java:178)",
          "org.jfree.chart.junit.XYAreaChartTests.setUp(XYAreaChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYAreaChartTests",
        "methodName": "testReplaceDataset",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYAreaChart(ChartFactory.java:1619)",
          "org.jfree.chart.junit.XYAreaChartTests.createChart(XYAreaChartTests.java:178)",
          "org.jfree.chart.junit.XYAreaChartTests.setUp(XYAreaChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYStepAreaChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYStepAreaChart(ChartFactory.java:1848)",
          "org.jfree.chart.junit.XYStepAreaChartTests.createChart(XYStepAreaChartTests.java:177)",
          "org.jfree.chart.junit.XYStepAreaChartTests.setUp(XYStepAreaChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYStepAreaChartTests",
        "methodName": "testSetSeriesToolTipGenerator",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYStepAreaChart(ChartFactory.java:1848)",
          "org.jfree.chart.junit.XYStepAreaChartTests.createChart(XYStepAreaChartTests.java:177)",
          "org.jfree.chart.junit.XYStepAreaChartTests.setUp(XYStepAreaChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYStepAreaChartTests",
        "methodName": "testReplaceDataset",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYStepAreaChart(ChartFactory.java:1848)",
          "org.jfree.chart.junit.XYStepAreaChartTests.createChart(XYStepAreaChartTests.java:177)",
          "org.jfree.chart.junit.XYStepAreaChartTests.setUp(XYStepAreaChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYStepChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYStepChart(ChartFactory.java:1792)",
          "org.jfree.chart.junit.XYStepChartTests.createChart(XYStepChartTests.java:177)",
          "org.jfree.chart.junit.XYStepChartTests.setUp(XYStepChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYStepChartTests",
        "methodName": "testSetSeriesToolTipGenerator",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYStepChart(ChartFactory.java:1792)",
          "org.jfree.chart.junit.XYStepChartTests.createChart(XYStepChartTests.java:177)",
          "org.jfree.chart.junit.XYStepChartTests.setUp(XYStepChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.XYStepChartTests",
        "methodName": "testReplaceDataset",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.DateAxis.autoAdjustRange(DateAxis.java:1286)",
          "org.jfree.chart.axis.DateAxis.configure(DateAxis.java:719)",
          "org.jfree.chart.axis.Axis.setPlot(Axis.java:1044)",
          "org.jfree.chart.plot.XYPlot.<init>(XYPlot.java:660)",
          "org.jfree.chart.ChartFactory.createXYStepChart(ChartFactory.java:1792)",
          "org.jfree.chart.junit.XYStepChartTests.createChart(XYStepChartTests.java:177)",
          "org.jfree.chart.junit.XYStepChartTests.setUp(XYStepChartTests.java:96)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.XYPlotTests",
        "methodName": "testDrawRangeGridlines",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.getDataRange(XYPlot.java:4493)",
          "org.jfree.chart.axis.NumberAxis.autoAdjustRange(NumberAxis.java:434)",
          "org.jfree.chart.axis.NumberAxis.configure(NumberAxis.java:417)",
          "org.jfree.chart.plot.XYPlot.configureDomainAxes(XYPlot.java:972)",
          "org.jfree.chart.plot.XYPlot.setRenderer(XYPlot.java:1644)",
          "org.jfree.chart.plot.XYPlot.setRenderer(XYPlot.java:1620)",
          "org.jfree.chart.plot.XYPlot.setRenderer(XYPlot.java:1607)",
          "org.jfree.chart.plot.junit.XYPlotTests.testDrawRangeGridlines(XYPlotTests.java:1056)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 5,
    "changedFiles": {
      "org/jfree/data/xy/XYSeries.java": {
        "modified": [
          [
            544
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.xy.junit.XYSeriesTests",
        "methodName": "testBug1955483",
        "stackTrace": [
          "java.util.ArrayList.rangeCheckForAdd(ArrayList.java:667)",
          "java.util.ArrayList.add(ArrayList.java:479)",
          "org.jfree.data.xy.XYSeries.addOrUpdate(XYSeries.java:564)",
          "org.jfree.data.xy.XYSeries.addOrUpdate(XYSeries.java:527)",
          "org.jfree.data.xy.junit.XYSeriesTests.testBug1955483(XYSeriesTests.java:479)"
        ],
        "error": "java.lang.IndexOutOfBoundsException",
        "message": "Index: -1, Size: 1"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 6,
    "changedFiles": {
      "org/jfree/chart/util/ShapeList.java": {
        "modified": [
          [
            111
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.util.junit.ShapeListTests",
        "methodName": "testSerialization",
        "stackTrace": [
          "org.jfree.chart.util.junit.ShapeListTests.testSerialization(ShapeListTests.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<org.jfree.chart.util.ShapeList@b190e392> but was:<org.jfree.chart.util.ShapeList@b1170841>"
      },
      {
        "className": "org.jfree.chart.util.junit.ShapeListTests",
        "methodName": "testEquals",
        "stackTrace": [
          "org.jfree.chart.util.junit.ShapeListTests.testEquals(ShapeListTests.java:95)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 7,
    "changedFiles": {
      "org/jfree/data/time/TimePeriodValues.java": {
        "modified": [
          [
            300
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.time.junit.TimePeriodValuesTests",
        "methodName": "testGetMaxMiddleIndex",
        "stackTrace": [
          "org.jfree.data.time.junit.TimePeriodValuesTests.testGetMaxMiddleIndex(TimePeriodValuesTests.java:377)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<3>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 8,
    "changedFiles": {
      "org/jfree/data/time/Week.java": {
        "modified": [
          [
            175
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.time.junit.WeekTests",
        "methodName": "testConstructor",
        "stackTrace": [
          "org.jfree.data.time.junit.WeekTests.testConstructor(WeekTests.java:530)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<35> but was:<34>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 9,
    "changedFiles": {
      "org/jfree/data/time/TimeSeries.java": {
        "modified": [
          [
            944
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.time.junit.TimeSeriesTests",
        "methodName": "testBug1864222",
        "stackTrace": [
          "org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:883)",
          "org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:953)",
          "org.jfree.data.time.junit.TimeSeriesTests.testBug1864222(TimeSeriesTests.java:829)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Requires start <= end."
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 10,
    "changedFiles": {
      "org/jfree/chart/imagemap/StandardToolTipTagFragmentGenerator.java": {
        "modified": [
          [
            65
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.imagemap.junit.StandardToolTipTagFragmentGeneratorTests",
        "methodName": "testGenerateURLFragment",
        "stackTrace": [
          "org.jfree.chart.imagemap.junit.StandardToolTipTagFragmentGeneratorTests.testGenerateURLFragment(StandardToolTipTagFragmentGeneratorTests.java:80)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:< title=\"Series [&quot;A&quot;], 100.0\" alt=\"\"> but was:< title=\"Series [\"A\"], 100.0\" alt=\"\">"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 11,
    "changedFiles": {
      "org/jfree/chart/util/ShapeUtilities.java": {
        "modified": [
          [
            275
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.util.junit.ShapeUtilitiesTests",
        "methodName": "testEqualGeneralPaths",
        "stackTrace": [
          "org.jfree.chart.util.junit.ShapeUtilitiesTests.testEqualGeneralPaths(ShapeUtilitiesTests.java:212)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 12,
    "changedFiles": {
      "org/jfree/chart/plot/MultiplePiePlot.java": {
        "modified": [
          [
            145
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.plot.junit.MultiplePiePlotTests",
        "methodName": "testConstructor",
        "stackTrace": [
          "org.jfree.chart.plot.junit.MultiplePiePlotTests.testConstructor(MultiplePiePlotTests.java:112)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 13,
    "changedFiles": {
      "org/jfree/chart/block/BorderArrangement.java": {
        "modified": [
          [
            455
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.block.junit.BorderArrangementTests",
        "methodName": "testSizingWithWidthConstraint",
        "stackTrace": [
          "org.jfree.data.Range.<init>(Range.java:87)",
          "org.jfree.chart.block.BorderArrangement.arrangeFF(BorderArrangement.java:454)",
          "org.jfree.chart.block.BorderArrangement.arrange(BorderArrangement.java:152)",
          "org.jfree.chart.block.BorderArrangement.arrangeFN(BorderArrangement.java:323)",
          "org.jfree.chart.block.BorderArrangement.arrange(BorderArrangement.java:149)",
          "org.jfree.chart.block.BlockContainer.arrange(BlockContainer.java:182)",
          "org.jfree.chart.block.junit.BorderArrangementTests.testSizingWithWidthConstraint(BorderArrangementTests.java:560)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Range(double, double): require lower (0.0) <= upper (-2.3000000000000007)."
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 14,
    "changedFiles": {
      "org/jfree/chart/plot/CategoryPlot.java": {
        "modified": [
          [
            2166
          ],
          [
            2448
          ]
        ]
      },
      "org/jfree/chart/plot/XYPlot.java": {
        "modified": [
          [
            2293
          ],
          [
            2529
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "testRemoveRangeMarker",
        "stackTrace": [
          "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(CategoryPlot.java:2448)",
          "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(CategoryPlot.java:2415)",
          "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(CategoryPlot.java:2396)",
          "org.jfree.chart.plot.CategoryPlot.removeRangeMarker(CategoryPlot.java:2378)",
          "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveRangeMarker(CategoryPlotTests.java:780)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "testRemoveDomainMarker",
        "stackTrace": [
          "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(CategoryPlot.java:2166)",
          "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(CategoryPlot.java:2139)",
          "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(CategoryPlot.java:2122)",
          "org.jfree.chart.plot.CategoryPlot.removeDomainMarker(CategoryPlot.java:2106)",
          "org.jfree.chart.plot.junit.CategoryPlotTests.testRemoveDomainMarker(CategoryPlotTests.java:771)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.XYPlotTests",
        "methodName": "testRemoveRangeMarker",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.removeRangeMarker(XYPlot.java:2529)",
          "org.jfree.chart.plot.XYPlot.removeRangeMarker(XYPlot.java:2498)",
          "org.jfree.chart.plot.XYPlot.removeRangeMarker(XYPlot.java:2481)",
          "org.jfree.chart.plot.XYPlot.removeRangeMarker(XYPlot.java:2465)",
          "org.jfree.chart.plot.junit.XYPlotTests.testRemoveRangeMarker(XYPlotTests.java:1037)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.XYPlotTests",
        "methodName": "testRemoveDomainMarker",
        "stackTrace": [
          "org.jfree.chart.plot.XYPlot.removeDomainMarker(XYPlot.java:2293)",
          "org.jfree.chart.plot.XYPlot.removeDomainMarker(XYPlot.java:2265)",
          "org.jfree.chart.plot.XYPlot.removeDomainMarker(XYPlot.java:2248)",
          "org.jfree.chart.plot.XYPlot.removeDomainMarker(XYPlot.java:2232)",
          "org.jfree.chart.plot.junit.XYPlotTests.testRemoveDomainMarker(XYPlotTests.java:1028)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 15,
    "changedFiles": {
      "org/jfree/chart/plot/PiePlot.java": {
        "modified": [
          [
            1378
          ],
          [
            2051
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.plot.junit.PiePlot3DTests",
        "methodName": "testDrawWithNullDataset",
        "stackTrace": [
          "org.jfree.chart.plot.junit.PiePlot3DTests.testDrawWithNullDataset(PiePlot3DTests.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 16,
    "changedFiles": {
      "org/jfree/data/category/DefaultIntervalCategoryDataset.java": {
        "modified": [
          [
            207
          ],
          [
            338
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testGetCategoryIndex",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex(DefaultIntervalCategoryDataset.java:574)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testGetCategoryIndex(DefaultIntervalCategoryDatasetTests.java:415)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testSetCategoryKeys",
        "stackTrace": [
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testSetCategoryKeys(DefaultIntervalCategoryDatasetTests.java:444)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testGetSeriesIndex",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex(DefaultIntervalCategoryDataset.java:242)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testGetSeriesIndex(DefaultIntervalCategoryDatasetTests.java:375)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testGetRowCount",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount(DefaultIntervalCategoryDataset.java:690)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testGetRowCount(DefaultIntervalCategoryDatasetTests.java:490)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testGetRowIndex",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex(DefaultIntervalCategoryDataset.java:242)",
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getRowIndex(DefaultIntervalCategoryDataset.java:641)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testGetRowIndex(DefaultIntervalCategoryDatasetTests.java:386)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testGetColumnCount",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount(DefaultIntervalCategoryDataset.java:690)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testGetColumnCount(DefaultIntervalCategoryDatasetTests.java:479)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testGetColumnIndex",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex(DefaultIntervalCategoryDataset.java:574)",
          "org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex(DefaultIntervalCategoryDataset.java:628)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testGetColumnIndex(DefaultIntervalCategoryDatasetTests.java:426)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests",
        "methodName": "testCloning2",
        "stackTrace": [
          "org.jfree.data.category.DefaultIntervalCategoryDataset.clone(DefaultIntervalCategoryDataset.java:748)",
          "org.jfree.data.category.junit.DefaultIntervalCategoryDatasetTests.testCloning2(DefaultIntervalCategoryDatasetTests.java:265)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 17,
    "changedFiles": {
      "org/jfree/data/time/TimeSeries.java": {
        "modified": [
          [
            857
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.time.junit.TimeSeriesTests",
        "methodName": "testBug1832432",
        "stackTrace": [
          "org.jfree.data.time.TimeSeries.createCopy(TimeSeries.java:880)",
          "org.jfree.data.time.TimeSeries.clone(TimeSeries.java:857)",
          "org.jfree.data.time.junit.TimeSeriesTests.testBug1832432(TimeSeriesTests.java:619)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Requires start <= end."
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 18,
    "changedFiles": {
      "org/jfree/data/DefaultKeyedValues.java": {
        "modified": [
          [
            318
          ],
          [
            335
          ]
        ]
      },
      "org/jfree/data/DefaultKeyedValues2D.java": {
        "modified": [
          [
            455
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.category.junit.DefaultCategoryDatasetTests",
        "methodName": "testBug1835955",
        "stackTrace": [
          "java.util.ArrayList.rangeCheck(ArrayList.java:659)",
          "java.util.ArrayList.set(ArrayList.java:450)",
          "org.jfree.data.DefaultKeyedValues.setValue(DefaultKeyedValues.java:234)",
          "org.jfree.data.DefaultKeyedValues2D.setValue(DefaultKeyedValues2D.java:337)",
          "org.jfree.data.DefaultKeyedValues2D.addValue(DefaultKeyedValues2D.java:303)",
          "org.jfree.data.category.DefaultCategoryDataset.addValue(DefaultCategoryDataset.java:218)",
          "org.jfree.data.category.DefaultCategoryDataset.addValue(DefaultCategoryDataset.java:233)",
          "org.jfree.data.category.junit.DefaultCategoryDatasetTests.testBug1835955(DefaultCategoryDatasetTests.java:350)"
        ],
        "error": "java.lang.IndexOutOfBoundsException",
        "message": "Index: 0, Size: 0"
      },
      {
        "className": "org.jfree.data.junit.DefaultKeyedValues2DTests",
        "methodName": "testRemoveColumnByKey",
        "stackTrace": [
          "java.util.ArrayList.rangeCheck(ArrayList.java:659)",
          "java.util.ArrayList.set(ArrayList.java:450)",
          "org.jfree.data.DefaultKeyedValues.setValue(DefaultKeyedValues.java:234)",
          "org.jfree.data.DefaultKeyedValues2D.setValue(DefaultKeyedValues2D.java:337)",
          "org.jfree.data.DefaultKeyedValues2D.addValue(DefaultKeyedValues2D.java:303)",
          "org.jfree.data.junit.DefaultKeyedValues2DTests.testRemoveColumnByKey(DefaultKeyedValues2DTests.java:354)"
        ],
        "error": "java.lang.IndexOutOfBoundsException",
        "message": "Index: 0, Size: 0"
      },
      {
        "className": "org.jfree.data.junit.DefaultKeyedValuesTests",
        "methodName": "testRemoveValue",
        "stackTrace": [
          "org.jfree.data.junit.DefaultKeyedValuesTests.testRemoveValue(DefaultKeyedValuesTests.java:372)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.data.junit.DefaultKeyedValuesTests",
        "methodName": "testGetIndex2",
        "stackTrace": [
          "org.jfree.data.junit.DefaultKeyedValuesTests.testGetIndex2(DefaultKeyedValuesTests.java:244)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1> but was:<0>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 19,
    "changedFiles": {
      "org/jfree/chart/plot/CategoryPlot.java": {
        "modified": [
          [
            698
          ],
          [
            973
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "testGetRangeAxisIndex",
        "stackTrace": [
          "org.jfree.chart.plot.junit.CategoryPlotTests.testGetRangeAxisIndex(CategoryPlotTests.java:761)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "testGetDomainAxisIndex",
        "stackTrace": [
          "org.jfree.chart.plot.junit.CategoryPlotTests.testGetDomainAxisIndex(CategoryPlotTests.java:737)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 20,
    "changedFiles": {
      "org/jfree/chart/plot/ValueMarker.java": {
        "modified": [
          [
            95
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.plot.junit.ValueMarkerTests",
        "methodName": "test1808376",
        "stackTrace": [
          "org.jfree.chart.plot.junit.ValueMarkerTests.test1808376(ValueMarkerTests.java:297)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<java.awt.Color[r=0,g=0,b=255]> but was:<java.awt.Color[r=255,g=0,b=0]>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 21,
    "changedFiles": {
      "org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java": {
        "modified": [
          [
            157
          ],
          [
            188
          ],
          [
            741
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests",
        "methodName": "testGetRangeBounds",
        "stackTrace": [
          "org.jfree.data.statistics.junit.DefaultBoxAndWhiskerCategoryDatasetTests.testGetRangeBounds(DefaultBoxAndWhiskerCategoryDatasetTests.java:292)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Range[8.5,9.6]> but was:<Range[8.6,9.6]>"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 22,
    "changedFiles": {
      "org/jfree/data/KeyedObjects2D.java": {
        "modified": [
          [
            231
          ],
          [
            318
          ],
          [
            345
          ],
          [
            378
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.data.junit.KeyedObjects2DTests",
        "methodName": "testRemoveColumnByKey",
        "stackTrace": [
          "org.jfree.data.KeyedObjects.removeValue(KeyedObjects.java:268)",
          "org.jfree.data.KeyedObjects2D.removeColumn(KeyedObjects2D.java:378)",
          "org.jfree.data.junit.KeyedObjects2DTests.testRemoveColumnByKey(KeyedObjects2DTests.java:391)"
        ],
        "error": "org.jfree.data.UnknownKeyException",
        "message": "The key (C2) is not recognised."
      },
      {
        "className": "org.jfree.data.junit.KeyedObjects2DTests",
        "methodName": "testRemoveValue",
        "stackTrace": [
          "org.jfree.data.junit.KeyedObjects2DTests.testRemoveValue(KeyedObjects2DTests.java:425)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<2>"
      },
      {
        "className": "org.jfree.data.junit.KeyedObjects2DTests",
        "methodName": "testGetValueByKey",
        "stackTrace": [
          "org.jfree.data.KeyedObjects.getObject(KeyedObjects.java:171)",
          "org.jfree.data.KeyedObjects2D.getObject(KeyedObjects2D.java:233)",
          "org.jfree.data.junit.KeyedObjects2DTests.testGetValueByKey(KeyedObjects2DTests.java:211)"
        ],
        "error": "org.jfree.data.UnknownKeyException",
        "message": "The key (C2) is not recognised."
      },
      {
        "className": "org.jfree.data.junit.KeyedObjects2DTests",
        "methodName": "testRemoveColumnByIndex",
        "stackTrace": [
          "org.jfree.data.KeyedObjects.removeValue(KeyedObjects.java:268)",
          "org.jfree.data.KeyedObjects2D.removeColumn(KeyedObjects2D.java:378)",
          "org.jfree.data.KeyedObjects2D.removeColumn(KeyedObjects2D.java:357)",
          "org.jfree.data.junit.KeyedObjects2DTests.testRemoveColumnByIndex(KeyedObjects2DTests.java:327)"
        ],
        "error": "org.jfree.data.UnknownKeyException",
        "message": "The key (C1) is not recognised."
      },
      {
        "className": "org.jfree.data.junit.KeyedObjects2DTests",
        "methodName": "testSetObject",
        "stackTrace": [
          "org.jfree.data.KeyedObjects.getObject(KeyedObjects.java:171)",
          "org.jfree.data.KeyedObjects2D.getObject(KeyedObjects2D.java:233)",
          "org.jfree.data.junit.KeyedObjects2DTests.testSetObject(KeyedObjects2DTests.java:261)"
        ],
        "error": "org.jfree.data.UnknownKeyException",
        "message": "The key (C2) is not recognised."
      },
      {
        "className": "org.jfree.data.junit.KeyedObjects2DTests",
        "methodName": "testRemoveRowByKey",
        "stackTrace": [
          "java.util.ArrayList.elementData(ArrayList.java:424)",
          "java.util.ArrayList.remove(ArrayList.java:501)",
          "org.jfree.data.KeyedObjects2D.removeRow(KeyedObjects2D.java:330)",
          "org.jfree.data.KeyedObjects2D.removeRow(KeyedObjects2D.java:345)",
          "org.jfree.data.junit.KeyedObjects2DTests.testRemoveRowByKey(KeyedObjects2DTests.java:366)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "-1"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 23,
    "changedFiles": {
      "org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java": {
        "modified": [
          [
            435
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests",
        "methodName": "testEquals",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.testEquals(MinMaxCategoryRendererTests.java:99)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 24,
    "changedFiles": {
      "org/jfree/chart/renderer/GrayPaintScale.java": {
        "modified": [
          [
            126
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "methodName": "testGetPaint",
        "stackTrace": [
          "java.awt.Color.testColorValueRange(Color.java:310)",
          "java.awt.Color.<init>(Color.java:395)",
          "java.awt.Color.<init>(Color.java:369)",
          "org.jfree.chart.renderer.GrayPaintScale.getPaint(GrayPaintScale.java:128)",
          "org.jfree.chart.renderer.junit.GrayPaintScaleTests.testGetPaint(GrayPaintScaleTests.java:107)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Color parameter outside of expected range: Red Green Blue"
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 25,
    "changedFiles": {
      "org/jfree/chart/renderer/category/StatisticalBarRenderer.java": {
        "modified": [
          [
            259
          ],
          [
            315
          ],
          [
            344
          ],
          [
            403
          ],
          [
            459
          ],
          [
            487
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "methodName": "testDrawWithNullMeanVertical",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullMeanVertical(StatisticalBarRendererTests.java:208)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "methodName": "testDrawWithNullDeviationVertical",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullDeviationVertical(StatisticalBarRendererTests.java:263)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "methodName": "testDrawWithNullMeanHorizontal",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullMeanHorizontal(StatisticalBarRendererTests.java:236)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "methodName": "testDrawWithNullDeviationHorizontal",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullDeviationHorizontal(StatisticalBarRendererTests.java:291)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Chart",
    "bugId": 26,
    "changedFiles": {
      "org/jfree/chart/axis/Axis.java": {
        "modified": [
          [
            1192
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jfree.chart.junit.AreaChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.AreaChartTests.testDrawWithNullInfo(AreaChartTests.java:149)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.BarChart3DTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.BarChart3DTests.testDrawWithNullInfo(BarChart3DTests.java:125)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.BarChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.BarChartTests.testDrawWithNullInfo(BarChartTests.java:128)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.GanttChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.GanttChartTests.testDrawWithNullInfo(GanttChartTests.java:124)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.GanttChartTests",
        "methodName": "testDrawWithNullInfo2",
        "stackTrace": [
          "org.jfree.chart.junit.GanttChartTests.testDrawWithNullInfo2(GanttChartTests.java:143)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.LineChart3DTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.LineChart3DTests.testDrawWithNullInfo(LineChart3DTests.java:123)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.LineChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.LineChartTests.testDrawWithNullInfo(LineChartTests.java:123)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.StackedAreaChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.StackedAreaChartTests.testDrawWithNullInfo(StackedAreaChartTests.java:123)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.StackedBarChart3DTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.StackedBarChart3DTests.testDrawWithNullInfo(StackedBarChart3DTests.java:123)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.StackedBarChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.StackedBarChartTests.testDrawWithNullInfo(StackedBarChartTests.java:129)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.junit.WaterfallChartTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.junit.WaterfallChartTests.testDrawWithNullInfo(WaterfallChartTests.java:121)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "test1654215",
        "stackTrace": [
          "org.jfree.chart.plot.junit.CategoryPlotTests.test1654215(CategoryPlotTests.java:705)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "testSerialization3",
        "stackTrace": [
          "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization3(CategoryPlotTests.java:514)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.plot.junit.CategoryPlotTests",
        "methodName": "testSerialization4",
        "stackTrace": [
          "org.jfree.chart.plot.junit.CategoryPlotTests.testSerialization4(CategoryPlotTests.java:563)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.BoxAndWhiskerRendererTests.testDrawWithNullInfo(BoxAndWhiskerRendererTests.java:208)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.GroupedStackedBarRendererTests.testDrawWithNullInfo(GroupedStackedBarRendererTests.java:176)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.IntervalBarRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.IntervalBarRendererTests.testDrawWithNullInfo(IntervalBarRendererTests.java:176)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.LayeredBarRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.LayeredBarRendererTests.testDrawWithNullInfo(LayeredBarRendererTests.java:172)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.LevelRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.LevelRendererTests.testDrawWithNullInfo(LevelRendererTests.java:213)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.MinMaxCategoryRendererTests.testDrawWithNullInfo(MinMaxCategoryRendererTests.java:171)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullInfo(StatisticalBarRendererTests.java:180)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests",
        "methodName": "testDrawWithNullInfo",
        "stackTrace": [
          "org.jfree.chart.renderer.category.junit.StatisticalLineAndShapeRendererTests.testDrawWithNullInfo(StatisticalLineAndShapeRendererTests.java:187)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/cli/CommandLine.java": {
        "modified": [
          [
            19
          ],
          [
            46
          ],
          [
            69
          ],
          [
            93
          ],
          [
            149
          ],
          [
            170
          ],
          [
            278
          ],
          [
            299
          ],
          [
            309
          ],
          [
            317
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI13Test",
        "methodName": "testCLI13",
        "stackTrace": [
          "org.apache.commons.cli.bug.BugCLI13Test.testCLI13(BugCLI13Test.java:50)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 2,
    "changedFiles": {
      "org/apache/commons/cli/PosixParser.java": {
        "modified": [
          [
            305
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI51Test",
        "methodName": "test",
        "stackTrace": [
          "org.apache.commons.cli.Parser.processOption(Parser.java:368)",
          "org.apache.commons.cli.Parser.parse(Parser.java:185)",
          "org.apache.commons.cli.Parser.parse(Parser.java:70)",
          "org.apache.commons.cli.bug.BugCLI51Test.test(BugCLI51Test.java:40)"
        ],
        "error": "org.apache.commons.cli.UnrecognizedOptionException",
        "message": "Unrecognized option: -o"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/cli/TypeHandler.java": {
        "modified": [
          [
            25
          ],
          [
            162
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.PatternOptionBuilderTest",
        "methodName": "testSimplePattern",
        "stackTrace": [
          "org.apache.commons.cli.PatternOptionBuilderTest.testSimplePattern(PatternOptionBuilderTest.java:70)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "number flag n expected:<4.5> but was:<4.5>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/cli/Parser.java": {
        "modified": [
          [
            298
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.OptionsTest",
        "methodName": "testMissingOptionsException",
        "stackTrace": [
          "org.apache.commons.cli.OptionsTest.testMissingOptionsException(OptionsTest.java:116)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[Missing required options: ]fx> but was:<[]fx>"
      },
      {
        "className": "org.apache.commons.cli.OptionsTest",
        "methodName": "testMissingOptionException",
        "stackTrace": [
          "org.apache.commons.cli.OptionsTest.testMissingOptionException(OptionsTest.java:104)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[Missing required option: ]f> but was:<[]f>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/cli/Util.java": {
        "modified": [
          [
            36
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.UtilTest",
        "methodName": "testStripLeadingHyphens",
        "stackTrace": [
          "org.apache.commons.cli.Util.stripLeadingHyphens(Util.java:36)",
          "org.apache.commons.cli.UtilTest.testStripLeadingHyphens(UtilTest.java:28)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.cli.bug.BugCLI133Test",
        "methodName": "testOrder",
        "stackTrace": [
          "org.apache.commons.cli.Util.stripLeadingHyphens(Util.java:36)",
          "org.apache.commons.cli.CommandLine.resolveOption(CommandLine.java:166)",
          "org.apache.commons.cli.CommandLine.hasOption(CommandLine.java:68)",
          "org.apache.commons.cli.bug.BugCLI133Test.testOrder(BugCLI133Test.java:32)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/cli2/builder/PatternBuilder.java": {
        "modified": [
          [
            19
          ],
          [
            67
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli2.bug.Bug27575Test",
        "methodName": "testRequiredOptions",
        "stackTrace": [
          "org.apache.commons.cli2.bug.Bug27575Test.testRequiredOptions(Bug27575Test.java:37)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[[-h]]> but was:<[-c <arg>]>"
      },
      {
        "className": "org.apache.commons.cli2.validation.FileValidatorTest",
        "methodName": "testValidate_WritableFile",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidatorTest.testValidate_WritableFile(FileValidatorTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InvalidArgumentException"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            812
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.HelpFormatterTest",
        "methodName": "testPrintWrapped",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatterTest.testPrintWrapped(HelpFormatterTest.java:96)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "single line padded text 2 expected:<...TE[-DATE] where DATE["
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/cli/Parser.java": {
        "modified": [
          [
            320
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.OptionsTest",
        "methodName": "testMissingOptionsException",
        "stackTrace": [
          "org.apache.commons.cli.OptionsTest.testMissingOptionsException(OptionsTest.java:116)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... required options: f[, ]x> but was:<... required options: f[]x>"
      },
      {
        "className": "org.apache.commons.cli.ParseRequiredTest",
        "methodName": "testMissingRequiredOptions",
        "stackTrace": [
          "org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOptions(ParseRequiredTest.java:135)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Incorrect exception message expected:<... required options: b[, ]c> but was:<... required options: b[]c>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/cli/Parser.java": {
        "modified": [
          [
            19
          ],
          [
            46
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.ParseRequiredTest",
        "methodName": "testReuseOptionsTwice",
        "stackTrace": [
          "org.apache.commons.cli.ParseRequiredTest.testReuseOptionsTwice(ParseRequiredTest.java:157)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "MissingOptionException not thrown"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            632
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.HelpFormatterTest",
        "methodName": "testPrintOptionWithEmptyArgNameUsage",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatterTest.testPrintOptionWithEmptyArgNameUsage(HelpFormatterTest.java:273)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<usage: app -f[]"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/cli/GnuParser.java": {
        "modified": [
          [
            81
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.GnuParserTest",
        "methodName": "testShortWithEqual",
        "stackTrace": [
          "org.apache.commons.cli.GnuParserTest.testShortWithEqual(GnuParserTest.java:209)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[]bar> but was:<[=]bar>"
      },
      {
        "className": "org.apache.commons.cli.GnuParserTest",
        "methodName": "testLongWithEqualSingleDash",
        "stackTrace": [
          "org.apache.commons.cli.GnuParserTest.testLongWithEqualSingleDash(GnuParserTest.java:248)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[]bar> but was:<[oo=]bar>"
      },
      {
        "className": "org.apache.commons.cli.GnuParserTest",
        "methodName": "testLongWithEqual",
        "stackTrace": [
          "org.apache.commons.cli.Parser.processOption(Parser.java:394)",
          "org.apache.commons.cli.Parser.parse(Parser.java:207)",
          "org.apache.commons.cli.Parser.parse(Parser.java:86)",
          "org.apache.commons.cli.GnuParserTest.testLongWithEqual(GnuParserTest.java:233)"
        ],
        "error": "org.apache.commons.cli.UnrecognizedOptionException",
        "message": "Unrecognized option: --foo=bar"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/cli2/WriteableCommandLine.java": {
        "modified": [
          [
            47
          ]
        ]
      },
      "org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java": {
        "modified": [
          [
            132
          ]
        ]
      },
      "org/apache/commons/cli2/option/ArgumentImpl.java": {
        "modified": [
          [
            144
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli2.bug.BugLoopingOptionLookAlikeTest",
        "methodName": "testLoopingOptionLookAlike2",
        "stackTrace": [
          "org.apache.commons.cli2.bug.BugLoopingOptionLookAlikeTest.testLoopingOptionLookAlike2(BugLoopingOptionLookAlikeTest.java:76)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<Unexpected [testfile.txt while processing ]> but was:<Unexpected [value \"testfile.txt\" found while processing  input]>"
      },
      {
        "className": "org.apache.commons.cli2.validation.FileValidatorTest",
        "methodName": "testValidate_WritableFile",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidatorTest.testValidate_WritableFile(FileValidatorTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InvalidArgumentException"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/cli2/option/GroupImpl.java": {
        "modified": [
          [
            250
          ],
          [
            261
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli2.bug.BugCLI144Test",
        "methodName": "testFileValidator",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidator.validate(FileValidator.java:123)",
          "org.apache.commons.cli2.option.ArgumentImpl.validate(ArgumentImpl.java:251)",
          "org.apache.commons.cli2.option.ParentImpl.validate(ParentImpl.java:124)",
          "org.apache.commons.cli2.option.DefaultOption.validate(DefaultOption.java:176)",
          "org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:262)",
          "org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)",
          "org.apache.commons.cli2.commandline.Parser.parseAndHelp(Parser.java:124)",
          "org.apache.commons.cli2.bug.BugCLI144Test.testFileValidator(BugCLI144Test.java:61)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "java.io.File cannot be cast to java.lang.String"
      },
      {
        "className": "org.apache.commons.cli2.validation.FileValidatorTest",
        "methodName": "testValidate_WritableFile",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidatorTest.testValidate_WritableFile(FileValidatorTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InvalidArgumentException"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java": {
        "modified": [
          [
            117
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli2.bug.BugCLI158Test",
        "methodName": "testSingleOptionSingleArgument",
        "stackTrace": [
          "org.apache.commons.cli2.bug.BugCLI158Test.testSingleOptionSingleArgument(BugCLI158Test.java:70)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[1[, 1000]]> but was:<[1[]]>"
      },
      {
        "className": "org.apache.commons.cli2.bug.BugCLI158Test",
        "methodName": "testSingleOptionMaximumNumberOfArgument",
        "stackTrace": [
          "org.apache.commons.cli2.bug.BugCLI158Test.testSingleOptionMaximumNumberOfArgument(BugCLI158Test.java:112)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[1, 2[, 10000]]> but was:<[1, 2[]]>"
      },
      {
        "className": "org.apache.commons.cli2.validation.FileValidatorTest",
        "methodName": "testValidate_WritableFile",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidatorTest.testValidate_WritableFile(FileValidatorTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InvalidArgumentException"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/cli2/Option.java": {
        "modified": [
          [
            206
          ],
          [
            216
          ]
        ]
      },
      "org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java": {
        "modified": [
          [
            74
          ]
        ]
      },
      "org/apache/commons/cli2/option/GroupImpl.java": {
        "modified": [
          [
            92
          ]
        ]
      },
      "org/apache/commons/cli2/option/OptionImpl.java": {
        "modified": [
          [
            36
          ],
          [
            128
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli2.bug.BugCLI123Test",
        "methodName": "testMultipleChildOptions",
        "stackTrace": [
          "org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:274)",
          "org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)",
          "org.apache.commons.cli2.bug.BugCLI123Test.testMultipleChildOptions(BugCLI123Test.java:92)"
        ],
        "error": "org.apache.commons.cli2.OptionException",
        "message": "Missing option parentOptions"
      },
      {
        "className": "org.apache.commons.cli2.bug.BugCLI123Test",
        "methodName": "testParentOptionAndChildOption",
        "stackTrace": [
          "org.apache.commons.cli2.bug.BugCLI123Test.testParentOptionAndChildOption(BugCLI123Test.java:121)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Maximum restriction for parent not verified!"
      },
      {
        "className": "org.apache.commons.cli2.bug.BugCLI123Test",
        "methodName": "testSingleChildOption",
        "stackTrace": [
          "org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:274)",
          "org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)",
          "org.apache.commons.cli2.bug.BugCLI123Test.testSingleChildOption(BugCLI123Test.java:81)"
        ],
        "error": "org.apache.commons.cli2.OptionException",
        "message": "Missing option parentOptions"
      },
      {
        "className": "org.apache.commons.cli2.commandline.DefaultingCommandLineTest",
        "methodName": "testGetOptions_Order",
        "stackTrace": [
          "org.apache.commons.cli2.CommandLineTestCase.testGetOptions_Order(CommandLineTestCase.java:436)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<[--help (-?,-h)|login <username>] [<target1> [<target2> ...]]> was not:<[--help (-?,-h)]>"
      },
      {
        "className": "org.apache.commons.cli2.commandline.PreferencesCommandLineTest",
        "methodName": "testGetOptions_Order",
        "stackTrace": [
          "org.apache.commons.cli2.CommandLineTestCase.testGetOptions_Order(CommandLineTestCase.java:436)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<[--help (-?,-h)|login <username>] [<target1> [<target2> ...]]> was not:<[--help (-?,-h)]>"
      },
      {
        "className": "org.apache.commons.cli2.commandline.PropertiesCommandLineTest",
        "methodName": "testGetOptions_Order",
        "stackTrace": [
          "org.apache.commons.cli2.CommandLineTestCase.testGetOptions_Order(CommandLineTestCase.java:436)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<[--help (-?,-h)|login <username>] [<target1> [<target2> ...]]> was not:<[--help (-?,-h)]>"
      },
      {
        "className": "org.apache.commons.cli2.commandline.WriteableCommandLineImplTest",
        "methodName": "testGetOptions_Order",
        "stackTrace": [
          "org.apache.commons.cli2.CommandLineTestCase.testGetOptions_Order(CommandLineTestCase.java:436)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<[--help (-?,-h)|login <username>] [<target1> [<target2> ...]]> was not:<[--help (-?,-h)]>"
      },
      {
        "className": "org.apache.commons.cli2.validation.FileValidatorTest",
        "methodName": "testValidate_WritableFile",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidatorTest.testValidate_WritableFile(FileValidatorTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InvalidArgumentException"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 17,
    "changedFiles": {
      "org/apache/commons/cli/PosixParser.java": {
        "modified": [
          [
            303
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testStopBursting",
        "stackTrace": [
          "org.apache.commons.cli.PosixParserTest.testStopBursting(PosixParserTest.java:141)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Confirm  1 extra arg: 2"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 18,
    "changedFiles": {
      "org/apache/commons/cli/PosixParser.java": {
        "modified": [
          [
            128
          ],
          [
            213
          ],
          [
            241
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testStop2",
        "stackTrace": [
          "org.apache.commons.cli.PosixParserTest.testStop2(PosixParserTest.java:140)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Confirm -a is not set"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 19,
    "changedFiles": {
      "org/apache/commons/cli/PosixParser.java": {
        "modified": [
          [
            232
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testUnrecognizedOption2",
        "stackTrace": [
          "org.apache.commons.cli.PosixParserTest.testUnrecognizedOption2(PosixParserTest.java:110)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "UnrecognizedOptionException wasn't thrown"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 20,
    "changedFiles": {
      "org/apache/commons/cli/PosixParser.java": {
        "modified": [
          [
            114
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testStop3",
        "stackTrace": [
          "org.apache.commons.cli.PosixParserTest.testStop3(PosixParserTest.java:169)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Confirm  3 extra args: 7"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 21,
    "changedFiles": {
      "org/apache/commons/cli2/WriteableCommandLine.java": {
        "modified": [
          [
            102
          ],
          [
            110
          ]
        ]
      },
      "org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java": {
        "modified": [
          [
            51
          ],
          [
            63
          ],
          [
            234
          ]
        ]
      },
      "org/apache/commons/cli2/option/GroupImpl.java": {
        "modified": [
          [
            513
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli2.bug.BugCLI150Test",
        "methodName": "testNegativeNumber",
        "stackTrace": [
          "org.apache.commons.cli2.commandline.Parser.parse(Parser.java:99)",
          "org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber(BugCLI150Test.java:56)"
        ],
        "error": "org.apache.commons.cli2.OptionException",
        "message": "Unexpected -42 while processing --num"
      },
      {
        "className": "org.apache.commons.cli2.validation.FileValidatorTest",
        "methodName": "testValidate_WritableFile",
        "stackTrace": [
          "org.apache.commons.cli2.validation.FileValidatorTest.testValidate_WritableFile(FileValidatorTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InvalidArgumentException"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 22,
    "changedFiles": {
      "org/apache/commons/cli/PosixParser.java": {
        "modified": [
          [
            41
          ],
          [
            116
          ],
          [
            146
          ],
          [
            184
          ],
          [
            211
          ],
          [
            243
          ],
          [
            262
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.ApplicationTest",
        "methodName": "testGroovy",
        "stackTrace": [
          "org.apache.commons.cli.ApplicationTest.testGroovy(ApplicationTest.java:169)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[println 'hello']> but was:<[--]>"
      },
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testStopAtExpectedArg",
        "stackTrace": [
          "org.apache.commons.cli.ParserTestCase.testStopAtExpectedArg(ParserTestCase.java:194)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Confirm -b is set expected:<[foo]> but was:<[--]>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 23,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            824
          ],
          [
            833
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI162Test",
        "methodName": "testInfiniteLoop",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:836)",
          "org.apache.commons.cli.HelpFormatter.renderOptions(HelpFormatter.java:783)",
          "org.apache.commons.cli.HelpFormatter.printOptions(HelpFormatter.java:662)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:485)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:418)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:334)",
          "org.apache.commons.cli.bug.BugCLI162Test.testInfiniteLoop(BugCLI162Test.java:45)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "Text too long for line - throwing exception to avoid infinite loop [CLI-162]:              looooong description"
      },
      {
        "className": "org.apache.commons.cli.bug.BugCLI162Test",
        "methodName": "testPrintHelpLongLines",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:836)",
          "org.apache.commons.cli.HelpFormatter.renderOptions(HelpFormatter.java:783)",
          "org.apache.commons.cli.HelpFormatter.printOptions(HelpFormatter.java:662)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:485)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:418)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:334)",
          "org.apache.commons.cli.bug.BugCLI162Test.testPrintHelp(BugCLI162Test.java:49)",
          "org.apache.commons.cli.bug.BugCLI162Test.testPrintHelpLongLines(BugCLI162Test.java:236)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "Text too long for line - throwing exception to avoid infinite loop [CLI-162]:                              used if omited. Example: -e \"Runs such and such\""
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 24,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            825
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI162Test",
        "methodName": "testLongLineChunkingIndentIgnored",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:825)",
          "org.apache.commons.cli.HelpFormatter.renderOptions(HelpFormatter.java:787)",
          "org.apache.commons.cli.HelpFormatter.printOptions(HelpFormatter.java:666)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:489)",
          "org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:443)",
          "org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored(BugCLI162Test.java:269)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Total width is less than the width of the argument and indent - no room for the description"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 25,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            825
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI162Test",
        "methodName": "testLongLineChunkingIndentIgnored",
        "stackTrace": [
          "org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored(BugCLI162Test.java:280)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Long arguments did not split as expected expected:<..."
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 26,
    "changedFiles": {
      "org/apache/commons/cli/OptionBuilder.java": {
        "modified": [
          [
            348
          ],
          [
            359
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.OptionBuilderTest",
        "methodName": "testBuilderIsResettedAlways",
        "stackTrace": [
          "org.apache.commons.cli.OptionBuilderTest.testBuilderIsResettedAlways(OptionBuilderTest.java:164)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "we inherited a description"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 27,
    "changedFiles": {
      "org/apache/commons/cli/OptionGroup.java": {
        "modified": [
          [
            98
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.BasicParserTest",
        "methodName": "testOptionGroupLong",
        "stackTrace": [
          "org.apache.commons.cli.ParserTestCase.testOptionGroupLong(ParserTestCase.java:631)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "selected option expected:<bar> but was:<null>"
      },
      {
        "className": "org.apache.commons.cli.GnuParserTest",
        "methodName": "testOptionGroupLong",
        "stackTrace": [
          "org.apache.commons.cli.ParserTestCase.testOptionGroupLong(ParserTestCase.java:631)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "selected option expected:<bar> but was:<null>"
      },
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testOptionGroupLong",
        "stackTrace": [
          "org.apache.commons.cli.ParserTestCase.testOptionGroupLong(ParserTestCase.java:631)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "selected option expected:<bar> but was:<null>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 28,
    "changedFiles": {
      "org/apache/commons/cli/Parser.java": {
        "modified": [
          [
            290
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.ValueTest",
        "methodName": "testPropertyOptionFlags",
        "stackTrace": [
          "org.apache.commons.cli.ValueTest.testPropertyOptionFlags(ValueTest.java:215)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 29,
    "changedFiles": {
      "org/apache/commons/cli/Util.java": {
        "modified": [
          [
            65
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.UtilTest",
        "methodName": "testStripLeadingAndTrailingQuotes",
        "stackTrace": [
          "org.apache.commons.cli.UtilTest.testStripLeadingAndTrailingQuotes(UtilTest.java:38)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<foo \"bar[\"]> but was:<foo \"bar[]>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 30,
    "changedFiles": {
      "org/apache/commons/cli/DefaultParser.java": {
        "modified": [
          [
            150
          ]
        ]
      },
      "org/apache/commons/cli/Parser.java": {
        "modified": [
          [
            263
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.BasicParserTest",
        "methodName": "testPropertyOptionGroup",
        "stackTrace": [
          "org.apache.commons.cli.OptionGroup.setSelected(OptionGroup.java:105)",
          "org.apache.commons.cli.Parser.updateRequiredOptions(Parser.java:421)",
          "org.apache.commons.cli.Parser.processProperties(Parser.java:296)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionGroup(ParserTestCase.java:1037)"
        ],
        "error": "org.apache.commons.cli.AlreadySelectedException",
        "message": "The option 'b' was specified but an option from this group has already been selected: 'a'"
      },
      {
        "className": "org.apache.commons.cli.BasicParserTest",
        "methodName": "testPropertyOptionUnexpected",
        "stackTrace": [
          "org.apache.commons.cli.Parser.processProperties(Parser.java:272)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionUnexpected(ParserTestCase.java:1010)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.cli.DefaultParserTest",
        "methodName": "testPropertyOptionGroup",
        "stackTrace": [
          "org.apache.commons.cli.OptionGroup.setSelected(OptionGroup.java:105)",
          "org.apache.commons.cli.DefaultParser.updateRequiredOptions(DefaultParser.java:630)",
          "org.apache.commons.cli.DefaultParser.handleOption(DefaultParser.java:594)",
          "org.apache.commons.cli.DefaultParser.handleProperties(DefaultParser.java:174)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:127)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:75)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:877)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionGroup(ParserTestCase.java:1037)"
        ],
        "error": "org.apache.commons.cli.AlreadySelectedException",
        "message": "The option 'b' was specified but an option from this group has already been selected: 'a'"
      },
      {
        "className": "org.apache.commons.cli.DefaultParserTest",
        "methodName": "testPropertyOptionUnexpected",
        "stackTrace": [
          "org.apache.commons.cli.DefaultParser.handleProperties(DefaultParser.java:159)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:127)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:75)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:877)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionUnexpected(ParserTestCase.java:1010)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.cli.GnuParserTest",
        "methodName": "testPropertyOptionGroup",
        "stackTrace": [
          "org.apache.commons.cli.OptionGroup.setSelected(OptionGroup.java:105)",
          "org.apache.commons.cli.Parser.updateRequiredOptions(Parser.java:421)",
          "org.apache.commons.cli.Parser.processProperties(Parser.java:296)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionGroup(ParserTestCase.java:1037)"
        ],
        "error": "org.apache.commons.cli.AlreadySelectedException",
        "message": "The option 'b' was specified but an option from this group has already been selected: 'a'"
      },
      {
        "className": "org.apache.commons.cli.GnuParserTest",
        "methodName": "testPropertyOptionUnexpected",
        "stackTrace": [
          "org.apache.commons.cli.Parser.processProperties(Parser.java:272)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionUnexpected(ParserTestCase.java:1010)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.cli.OptionGroupTest",
        "methodName": "testTwoOptionsFromGroupWithProperties",
        "stackTrace": [
          "org.apache.commons.cli.OptionGroup.setSelected(OptionGroup.java:105)",
          "org.apache.commons.cli.Parser.updateRequiredOptions(Parser.java:421)",
          "org.apache.commons.cli.Parser.processProperties(Parser.java:296)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromGroupWithProperties(OptionGroupTest.java:198)"
        ],
        "error": "org.apache.commons.cli.AlreadySelectedException",
        "message": "The option 'd' was specified but an option from this group has already been selected: 'f'"
      },
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testPropertyOptionGroup",
        "stackTrace": [
          "org.apache.commons.cli.OptionGroup.setSelected(OptionGroup.java:105)",
          "org.apache.commons.cli.Parser.updateRequiredOptions(Parser.java:421)",
          "org.apache.commons.cli.Parser.processProperties(Parser.java:296)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionGroup(ParserTestCase.java:1037)"
        ],
        "error": "org.apache.commons.cli.AlreadySelectedException",
        "message": "The option 'b' was specified but an option from this group has already been selected: 'a'"
      },
      {
        "className": "org.apache.commons.cli.PosixParserTest",
        "methodName": "testPropertyOptionUnexpected",
        "stackTrace": [
          "org.apache.commons.cli.Parser.processProperties(Parser.java:272)",
          "org.apache.commons.cli.Parser.parse(Parser.java:241)",
          "org.apache.commons.cli.Parser.parse(Parser.java:103)",
          "org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)",
          "org.apache.commons.cli.ParserTestCase.testPropertyOptionUnexpected(ParserTestCase.java:1010)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 31,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            653
          ]
        ]
      },
      "org/apache/commons/cli/Option.java": {
        "modified": [
          [
            57
          ]
        ]
      },
      "org/apache/commons/cli/OptionBuilder.java": {
        "modified": [
          [
            80
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.HelpFormatterTest",
        "methodName": "testDefaultArgName",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatterTest.testDefaultArgName(HelpFormatterTest.java:321)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<usage: app -f <arg[ument]>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 32,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            937
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.HelpFormatterTest",
        "methodName": "testRenderWrappedTextWordCut",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "org.apache.commons.cli.HelpFormatter.findWrapPos(HelpFormatter.java:938)",
          "org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:848)",
          "org.apache.commons.cli.HelpFormatterTest.testRenderWrappedTextWordCut(HelpFormatterTest.java:68)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 12"
      },
      {
        "className": "org.apache.commons.cli.HelpFormatterTest",
        "methodName": "testFindWrapPos",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatterTest.testFindWrapPos(HelpFormatterTest.java:51)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "wrap position 3 expected:<3> but was:<4>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 33,
    "changedFiles": {
      "org/apache/commons/cli/HelpFormatter.java": {
        "modified": [
          [
            730
          ],
          [
            900
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.HelpFormatterTest",
        "methodName": "testIndentedHeaderAndFooter",
        "stackTrace": [
          "org.apache.commons.cli.HelpFormatterTest.testIndentedHeaderAndFooter(HelpFormatterTest.java:441)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...e: foobar"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 34,
    "changedFiles": {
      "org/apache/commons/cli/Option.java": {
        "modified": [
          [
            72
          ]
        ]
      },
      "org/apache/commons/cli/OptionBuilder.java": {
        "modified": [
          [
            84
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.CommandLineTest",
        "methodName": "testGetParsedOptionValue",
        "stackTrace": [
          "org.apache.commons.cli.CommandLineTest.testGetParsedOptionValue(CommandLineTest.java:74)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<foo> but was:<null>"
      },
      {
        "className": "org.apache.commons.cli.OptionBuilderTest",
        "methodName": "testTwoCompleteOptions",
        "stackTrace": [
          "org.apache.commons.cli.OptionBuilderTest.testTwoCompleteOptions(OptionBuilderTest.java:67)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<class java.lang.String> but was:<null>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 35,
    "changedFiles": {
      "org/apache/commons/cli/Options.java": {
        "modified": [
          [
            240
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI252Test",
        "methodName": "testExactOptionNameMatch",
        "stackTrace": [
          "org.apache.commons.cli.DefaultParser.handleLongOptionWithoutEqual(DefaultParser.java:398)",
          "org.apache.commons.cli.DefaultParser.handleLongOption(DefaultParser.java:371)",
          "org.apache.commons.cli.DefaultParser.handleToken(DefaultParser.java:239)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:120)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:76)",
          "org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:60)",
          "org.apache.commons.cli.bug.BugCLI252Test.testExactOptionNameMatch(BugCLI252Test.java:10)"
        ],
        "error": "org.apache.commons.cli.AmbiguousOptionException",
        "message": "Ambiguous option: '--prefix'  (could be: 'prefix', 'prefixplusplus')"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 36,
    "changedFiles": {
      "org/apache/commons/cli/OptionGroup.java": {
        "modified": [
          [
            22
          ],
          [
            37
          ]
        ]
      },
      "org/apache/commons/cli/Options.java": {
        "modified": [
          [
            24
          ],
          [
            61
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI266Test",
        "methodName": "testOptionComparatorInsertedOrder",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorInsertedOrder(BugCLI266Test.java:39)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[p]> but was:<[x]>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 37,
    "changedFiles": {
      "org/apache/commons/cli/DefaultParser.java": {
        "modified": [
          [
            302
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI265Test",
        "methodName": "shouldParseShortOptionWithoutValue",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failEquals(Assert.java:185)",
          "org.junit.Assert.assertNotEquals(Assert.java:161)",
          "org.apache.commons.cli.bug.BugCLI265Test.shouldParseShortOptionWithoutValue(BugCLI265Test.java:52)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Second option has been used as value for first option. Actual: -last"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 38,
    "changedFiles": {
      "org/apache/commons/cli/DefaultParser.java": {
        "modified": [
          [
            310
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.bug.BugCLI265Test",
        "methodName": "shouldParseConcatenatedShortOptions",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotNull(Assert.java:664)",
          "org.junit.Assert.assertNull(Assert.java:646)",
          "org.junit.Assert.assertNull(Assert.java:656)",
          "org.apache.commons.cli.bug.BugCLI265Test.shouldParseConcatenatedShortOptions(BugCLI265Test.java:83)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected null, but was:<-ab>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 39,
    "changedFiles": {
      "org/apache/commons/cli/TypeHandler.java": {
        "modified": [
          [
            92
          ],
          [
            234
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.PatternOptionBuilderTest",
        "methodName": "testExistingFilePattern",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.cli.PatternOptionBuilderTest.testExistingFilePattern(PatternOptionBuilderTest.java:171)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "option g not FileInputStream"
      },
      {
        "className": "org.apache.commons.cli.PatternOptionBuilderTest",
        "methodName": "testExistingFilePatternFileNotExist",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotNull(Assert.java:664)",
          "org.junit.Assert.assertNull(Assert.java:646)",
          "org.apache.commons.cli.PatternOptionBuilderTest.testExistingFilePatternFileNotExist(PatternOptionBuilderTest.java:180)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "option f parsed expected null, but was:<non-existing.file>"
      }
    ]
  },
  {
    "project": "Cli",
    "bugId": 40,
    "changedFiles": {
      "org/apache/commons/cli/TypeHandler.java": {
        "modified": [
          [
            103
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.cli.TypeHandlerTest",
        "methodName": "testCreateValueInteger_failure",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.cli.ParseException"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 1,
    "changedFiles": {
      "com/google/javascript/jscomp/RemoveUnusedVars.java": {
        "modified": [
          [
            379
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testSimpleModeLeavesUnusedParams",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1204)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1175)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:1163)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:1159)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSimpleModeLeavesUnusedParams(CommandLineRunnerTest.java:156)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testForwardDeclareDroppedTypes",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1204)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1175)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testForwardDeclareDroppedTypes(CommandLineRunnerTest.java:754)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testDebugFlag1",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1204)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1175)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1167)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testDebugFlag1(CommandLineRunnerTest.java:476)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue787",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:97)",
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:79)",
          "com.google.javascript.jscomp.IntegrationTest.testIssue787(IntegrationTest.java:2371)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.RemoveUnusedVarsTest",
        "methodName": "testRemoveGlobal1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)",
          "com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveGlobal1(RemoveUnusedVarsTest.java:247)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.RemoveUnusedVarsTest",
        "methodName": "testRemoveGlobal2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)",
          "com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveGlobal2(RemoveUnusedVarsTest.java:253)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.RemoveUnusedVarsTest",
        "methodName": "testRemoveGlobal3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)",
          "com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveGlobal3(RemoveUnusedVarsTest.java:259)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.RemoveUnusedVarsTest",
        "methodName": "testIssue168b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:373)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:330)",
          "com.google.javascript.jscomp.RemoveUnusedVarsTest.testIssue168b(RemoveUnusedVarsTest.java:283)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 2,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            1572
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBadInterfaceExtendsNonExistentInterfaces",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheck.checkInterfaceConflictProperties(TypeCheck.java:1574)",
          "com.google.javascript.jscomp.TypeCheck.visitFunction(TypeCheck.java:1664)",
          "com.google.javascript.jscomp.TypeCheck.visit(TypeCheck.java:778)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:505)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseWithScope(NodeTraversal.java:343)",
          "com.google.javascript.jscomp.TypeCheck.check(TypeCheck.java:404)",
          "com.google.javascript.jscomp.TypeCheck.process(TypeCheck.java:375)",
          "com.google.javascript.jscomp.TypeCheck.processForTesting(TypeCheck.java:393)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11530)",
          "com.google.javascript.jscomp.TypeCheckTest.testBadInterfaceExtendsNonExistentInterfaces(TypeCheckTest.java:3780)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 3,
    "changedFiles": {
      "com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": {
        "modified": [
          [
            155
          ],
          [
            280
          ],
          [
            375
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testDoNotInlineCatchExpression1a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:567)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDoNotInlineCatchExpression1a(FlowSensitiveInlineVariablesTest.java:157)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testDoNotInlineCatchExpression1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:567)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDoNotInlineCatchExpression1(FlowSensitiveInlineVariablesTest.java:146)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testDoNotInlineCatchExpression3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:905)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:447)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:389)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:571)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:567)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testDoNotInlineCatchExpression3(FlowSensitiveInlineVariablesTest.java:179)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 4,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/NamedType.java": {
        "modified": [
          [
            190
          ],
          [
            202
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testImplementsExtendsLoop",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testClosureTypesMultipleWarnings(TypeCheckTest.java:11383)",
          "com.google.javascript.jscomp.TypeCheckTest.testImplementsExtendsLoop(TypeCheckTest.java:9232)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warning(s) : JSC_IMPLEMENTS_NON_INTERFACE. can only implement interfaces at [testcode] line 2 : 29, JSC_IMPLEMENTS_NON_INTERFACE. can only implement interfaces at [testcode] line 3 : 26 expected:<1> but was:<2>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testImplementsLoop",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testClosureTypesMultipleWarnings(TypeCheckTest.java:11391)",
          "com.google.javascript.jscomp.TypeCheckTest.testImplementsLoop(TypeCheckTest.java:9223)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[Parse error. Cycle detected in inheritance chain of type T]> but was:<[can only implement interfaces]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testConversionFromInterfaceToRecursiveConstructor",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.FunctionType.getImplementedInterfaces(FunctionType.java:510)",
          "com.google.javascript.rhino.jstype.FunctionType.getImplementedInterfaces(FunctionType.java:515)",
          "com.google.javascript.rhino.jstype.InstanceObjectType.getCtorImplementedInterfaces(InstanceObjectType.java:182)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:348)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)",
          "com.google.javascript.rhino.jstype.PrototypeObjectType.isSubtype(PrototypeObjectType.java:350)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 5,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineObjectLiterals.java": {
        "modified": [
          [
            176
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineObjectLiteralsTest",
        "methodName": "testNoInlineDeletedProperties",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:903)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:362)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testSameLocal(InlineObjectLiteralsTest.java:367)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testNoInlineDeletedProperties(InlineObjectLiteralsTest.java:352)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 6,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeValidator.java": {
        "modified": [
          [
            366
          ],
          [
            385
          ],
          [
            405
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testTypeRedefinition",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testClosureTypesMultipleWarnings(LooseTypeCheckTest.java:6939)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypeRedefinition(LooseTypeCheckTest.java:2121)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue635b",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10911)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10891)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10827)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue635b(TypeCheckTest.java:6342)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testTypeRedefinition",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testClosureTypesMultipleWarnings(TypeCheckTest.java:10876)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypeRedefinition(TypeCheckTest.java:2516)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warning(s) : JSC_DUP_VAR_DECLARATION. variable a.A redefined with type function (new:a.A): undefined, original definition at [testcode]:1 with type enum{a.A} at [testcode] line 1 : 61 expected:<2> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 7,
    "changedFiles": {
      "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java": {
        "modified": [
          [
            613
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
        "methodName": "testGoogIsFunction2",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:106)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:96)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testClosureFunction(ClosureReverseAbstractInterpreterTest.java:187)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsFunction2(ClosureReverseAbstractInterpreterTest.java:121)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: (Object|boolean|number|string)"
      },
      {
        "className": "com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest",
        "methodName": "testTypeof3",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:106)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:96)",
          "com.google.javascript.rhino.testing.BaseJSTypeTestCase.assertTypeEquals(BaseJSTypeTestCase.java:577)",
          "com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testBinop(SemanticReverseAbstractInterpreterTest.java:568)",
          "com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testTypeof3(SemanticReverseAbstractInterpreterTest.java:465)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: (Object|boolean|number|string)"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 8,
    "changedFiles": {
      "com/google/javascript/jscomp/CollapseVariableDeclarations.java": {
        "modified": [
          [
            204
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CollapseVariableDeclarationsTest",
        "methodName": "testIssue820",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:560)",
          "com.google.javascript.jscomp.CollapseVariableDeclarationsTest.testIssue820(CollapseVariableDeclarationsTest.java:48)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 9,
    "changedFiles": {
      "com/google/javascript/jscomp/ProcessCommonJSModules.java": {
        "modified": [
          [
            119
          ],
          [
            183
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ProcessCommonJSModulesTest",
        "methodName": "testGuessModuleName",
        "stackTrace": [
          "com.google.javascript.jscomp.ProcessCommonJSModulesTest.testGuessModuleName(ProcessCommonJSModulesTest.java:132)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<module$[]baz> but was:<module$[foo\\]baz>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 10,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            1417
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testIssue821",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:560)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.foldSame(PeepholeFoldConstantsTest.java:67)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testIssue821(PeepholeFoldConstantsTest.java:581)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 11,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            1314
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testGetprop4",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10495)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10475)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10413)",
          "com.google.javascript.jscomp.TypeCheckTest.testGetprop4(TypeCheckTest.java:3927)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue810",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10495)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10475)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10413)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue810(TypeCheckTest.java:6186)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 12,
    "changedFiles": {
      "com/google/javascript/jscomp/MaybeReachingVariableUse.java": {
        "modified": [
          [
            160
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testIssue794b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:409)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:387)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:526)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:522)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testIssue794b(FlowSensitiveInlineVariablesTest.java:513)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 13,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeOptimizationsPass.java": {
        "modified": [
          [
            126
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue787",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:94)",
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:76)",
          "com.google.javascript.jscomp.IntegrationTest.testIssue787(IntegrationTest.java:2262)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 14,
    "changedFiles": {
      "com/google/javascript/jscomp/ControlFlowAnalysis.java": {
        "modified": [
          [
            767
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckMissingReturnTest",
        "methodName": "testIssue779",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:816)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:560)",
          "com.google.javascript.jscomp.CheckMissingReturnTest.testNotMissing(CheckMissingReturnTest.java:210)",
          "com.google.javascript.jscomp.CheckMissingReturnTest.testNotMissing(CheckMissingReturnTest.java:215)",
          "com.google.javascript.jscomp.CheckMissingReturnTest.testIssue779(CheckMissingReturnTest.java:195)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_MISSING_RETURN_STATEMENT. Missing return statement. Function expected to return number. at testcode line 1 : 24 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.ControlFlowAnalysisTest",
        "methodName": "testDeepNestedFinally",
        "stackTrace": [
          "com.google.javascript.jscomp.ControlFlowAnalysisTest.assertCrossEdge(ControlFlowAnalysisTest.java:177)",
          "com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedFinally(ControlFlowAnalysisTest.java:1118)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "No cross edges found"
      },
      {
        "className": "com.google.javascript.jscomp.ControlFlowAnalysisTest",
        "methodName": "testDeepNestedBreakwithFinally",
        "stackTrace": [
          "com.google.javascript.jscomp.ControlFlowAnalysisTest.assertCrossEdge(ControlFlowAnalysisTest.java:177)",
          "com.google.javascript.jscomp.ControlFlowAnalysisTest.testDeepNestedBreakwithFinally(ControlFlowAnalysisTest.java:1107)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "No cross edges found"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 15,
    "changedFiles": {
      "com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": {
        "modified": [
          [
            102
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testSimpleForIn",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:409)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:387)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:457)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:453)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testSimpleForIn(FlowSensitiveInlineVariablesTest.java:68)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 16,
    "changedFiles": {
      "com/google/javascript/jscomp/ScopedAliases.java": {
        "modified": [
          [
            170
          ],
          [
            468
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue772",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:86)",
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:76)",
          "com.google.javascript.jscomp.IntegrationTest.testIssue772(IntegrationTest.java:1868)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected no warnings or errors"
      },
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testIssue772",
        "stackTrace": [
          "com.google.javascript.jscomp.ScopedAliasesTest$TypeVerifyingPass.visit(ScopedAliasesTest.java:654)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:504)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:497)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:497)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:497)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.ScopedAliasesTest$TypeVerifyingPass.process(ScopedAliasesTest.java:631)",
          "com.google.javascript.jscomp.ScopedAliasesTest.verifyTypes(ScopedAliasesTest.java:240)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testTypes(ScopedAliasesTest.java:235)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testIssue772(ScopedAliasesTest.java:407)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: Node tree inequality:"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 17,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1291
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue688",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10224)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10203)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10141)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue688(TypeCheckTest.java:5906)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<in[consistent return type"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 18,
    "changedFiles": {
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            1288
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testDependencySorting",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:94)",
          "com.google.javascript.jscomp.IntegrationTest.testDependencySorting(IntegrationTest.java:2107)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 19,
    "changedFiles": {
      "com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java": {
        "modified": [
          [
            172
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeInferenceTest",
        "methodName": "testNoThisInference",
        "stackTrace": [
          "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter.declareNameInScope(ChainableReverseAbstractInterpreter.java:175)",
          "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter.restrictParameter(ClosureReverseAbstractInterpreter.java:239)",
          "com.google.javascript.jscomp.type.ClosureReverseAbstractInterpreter.getPreciserScopeKnowingConditionOutcome(ClosureReverseAbstractInterpreter.java:220)",
          "com.google.javascript.jscomp.TypeInference.branchedFlowThrough(TypeInference.java:235)",
          "com.google.javascript.jscomp.TypeInference.branchedFlowThrough(TypeInference.java:64)",
          "com.google.javascript.jscomp.DataFlowAnalysis$BranchedForwardDataFlowAnalysis.flow(DataFlowAnalysis.java:447)",
          "com.google.javascript.jscomp.DataFlowAnalysis.analyze(DataFlowAnalysis.java:212)",
          "com.google.javascript.jscomp.DataFlowAnalysis.analyze(DataFlowAnalysis.java:180)",
          "com.google.javascript.jscomp.TypeInferenceTest.inFunction(TypeInferenceTest.java:126)",
          "com.google.javascript.jscomp.TypeInferenceTest.testNoThisInference(TypeInferenceTest.java:1003)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Node cannot be refined."
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 20,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": {
        "modified": [
          [
            220
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest",
        "methodName": "testSimpleFunctionCall",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:560)",
          "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testSimpleFunctionCall(PeepholeSubstituteAlternateSyntaxTest.java:1031)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 21,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckSideEffects.java": {
        "modified": [
          [
            101
          ],
          [
            113
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "methodName": "testUselessCode",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:841)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CheckSideEffectsTest.test(CheckSideEffectsTest.java:39)",
          "com.google.javascript.jscomp.CheckSideEffectsTest.testUselessCode(CheckSideEffectsTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one warning, repeated 1 time(s). expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 22,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckSideEffects.java": {
        "modified": [
          [
            101
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "methodName": "testUselessCode",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:841)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CheckSideEffectsTest.test(CheckSideEffectsTest.java:39)",
          "com.google.javascript.jscomp.CheckSideEffectsTest.testUselessCode(CheckSideEffectsTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one warning, repeated 1 time(s). expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 23,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeFoldConstants.java": {
        "modified": [
          [
            1451
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testFoldGetElem",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:816)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.fold(PeepholeFoldConstantsTest.java:71)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testFoldGetElem(PeepholeFoldConstantsTest.java:765)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_INDEX_OUT_OF_BOUNDS_ERROR. Array index out of bounds: NUMBER 0.0 1 [source_file: testcode] at testcode line 1 : 10 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 24,
    "changedFiles": {
      "com/google/javascript/jscomp/ScopedAliases.java": {
        "modified": [
          [
            278
          ],
          [
            287
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testNonAliasLocal",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:932)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testScopedFailure(ScopedAliasesTest.java:359)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testNonAliasLocal(ScopedAliasesTest.java:413)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 25,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeInference.java": {
        "modified": [
          [
            1036
          ],
          [
            1055
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeInferenceTest",
        "methodName": "testBackwardsInferenceNew",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeInferenceTest.testBackwardsInferenceNew(TypeInferenceTest.java:890)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[foo: (number|undefined)]}> but was:<{[]}>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 26,
    "changedFiles": {
      "com/google/javascript/jscomp/ProcessCommonJSModules.java": {
        "modified": [
          [
            128
          ],
          [
            207
          ],
          [
            228
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testTransformAMDAndProcessCJS",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1109)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1080)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1072)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testTransformAMDAndProcessCJS(CommandLineRunnerTest.java:1057)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testProcessCJS",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1109)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1080)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1072)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testProcessCJS(CommandLineRunnerTest.java:1048)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ProcessCommonJSModulesTest",
        "methodName": "testExports",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.ProcessCommonJSModulesTest.testExports(ProcessCommonJSModulesTest.java:60)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ProcessCommonJSModulesTest",
        "methodName": "testModuleName",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.ProcessCommonJSModulesTest.testModuleName(ProcessCommonJSModulesTest.java:114)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ProcessCommonJSModulesTest",
        "methodName": "testDash",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.ProcessCommonJSModulesTest.testDash(ProcessCommonJSModulesTest.java:93)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ProcessCommonJSModulesTest",
        "methodName": "testVarRenaming",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.ProcessCommonJSModulesTest.testVarRenaming(ProcessCommonJSModulesTest.java:82)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ProcessCommonJSModulesTest",
        "methodName": "testWithoutExports",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.ProcessCommonJSModulesTest.testWithoutExports(ProcessCommonJSModulesTest.java:39)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 27,
    "changedFiles": {
      "com/google/javascript/rhino/IR.java": {
        "modified": [
          [
            111
          ],
          [
            224
          ],
          [
            233
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.rhino.IRTest",
        "methodName": "testIssue727_1",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:129)",
          "com.google.javascript.rhino.IR.tryFinally(IR.java:224)",
          "com.google.javascript.rhino.IRTest.testIssue727_1(IRTest.java:48)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": ""
      },
      {
        "className": "com.google.javascript.rhino.IRTest",
        "methodName": "testIssue727_2",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:129)",
          "com.google.javascript.rhino.IR.block(IR.java:97)",
          "com.google.javascript.rhino.IR.tryCatch(IR.java:233)",
          "com.google.javascript.rhino.IRTest.testIssue727_2(IRTest.java:59)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": ""
      },
      {
        "className": "com.google.javascript.rhino.IRTest",
        "methodName": "testIssue727_3",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:129)",
          "com.google.javascript.rhino.IR.block(IR.java:97)",
          "com.google.javascript.rhino.IR.tryCatch(IR.java:233)",
          "com.google.javascript.rhino.IR.tryCatchFinally(IR.java:240)",
          "com.google.javascript.rhino.IRTest.testIssue727_3(IRTest.java:74)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 28,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineCostEstimator.java": {
        "modified": [
          [
            102
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineCostEstimatorTest",
        "methodName": "testCost",
        "stackTrace": [
          "com.google.javascript.jscomp.InlineCostEstimatorTest.checkCost(InlineCostEstimatorTest.java:70)",
          "com.google.javascript.jscomp.InlineCostEstimatorTest.testCost(InlineCostEstimatorTest.java:49)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<4>"
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testIssue728",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testIssue728(InlineFunctionsTest.java:2176)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 29,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineObjectLiterals.java": {
        "modified": [
          [
            157
          ],
          [
            181
          ],
          [
            216
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineObjectLiteralsTest",
        "methodName": "testObject10",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject10(InlineObjectLiteralsTest.java:174)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineObjectLiteralsTest",
        "methodName": "testObject12",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject12(InlineObjectLiteralsTest.java:215)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineObjectLiteralsTest",
        "methodName": "testObject22",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testObject22(InlineObjectLiteralsTest.java:288)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineObjectLiteralsTest",
        "methodName": "testIssue724",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:892)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:371)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:340)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:328)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:355)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testSameLocal(InlineObjectLiteralsTest.java:360)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testIssue724(InlineObjectLiteralsTest.java:344)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue724",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:92)",
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:74)",
          "com.google.javascript.jscomp.IntegrationTest.testIssue724(IntegrationTest.java:1687)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 30,
    "changedFiles": {
      "com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": {
        "modified": [
          [
            157
          ]
        ]
      },
      "com/google/javascript/jscomp/MustBeReachingVariableDef.java": {
        "modified": [
          [
            71
          ],
          [
            396
          ],
          [
            430
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testInlineAcrossSideEffect1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:873)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:434)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:376)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:443)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:439)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testInlineAcrossSideEffect1(FlowSensitiveInlineVariablesTest.java:329)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testCanInlineAcrossNoSideEffect",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:873)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:434)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:376)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:443)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:439)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testCanInlineAcrossNoSideEffect(FlowSensitiveInlineVariablesTest.java:363)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testIssue698",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:873)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:434)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:376)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:443)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testIssue698(FlowSensitiveInlineVariablesTest.java:423)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 31,
    "changedFiles": {
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            1285
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testDependencySortingWhitespaceMode",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1034)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1005)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testDependencySortingWhitespaceMode(CommandLineRunnerTest.java:627)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 32,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/JsDocInfoParser.java": {
        "modified": [
          [
            1358
          ],
          [
            1382
          ],
          [
            1389
          ],
          [
            1414
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue701",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTest.testIssue701(IntegrationTest.java:1674)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</*"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testParseLicense",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testParseLicense(JsDocInfoParserTest.java:1286)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:< Foo"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testParsePreserve",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testParsePreserve(JsDocInfoParserTest.java:1278)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:< Foo"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testParseLicenseAscii",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testParseLicenseAscii(JsDocInfoParserTest.java:1294)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:< Foo"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 33,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/PrototypeObjectType.java": {
        "modified": [
          [
            557
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue700",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9908)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9882)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9820)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9816)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue700(TypeCheckTest.java:5777)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 34,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            122
          ],
          [
            754
          ]
        ]
      },
      "com/google/javascript/jscomp/CodePrinter.java": {
        "modified": [
          [
            334
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testManyAdds",
        "stackTrace": [
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:102)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)",
          "com.google.javascript.jscomp.CodeGenerator.add(CodeGenerator.java:122)",
          "com.google.javascript.jscomp.CodeGenerator.addExpr(CodeGenerator.java:891)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 35,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeInference.java": {
        "modified": [
          [
            1121
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue669",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9694)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9668)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9606)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9602)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue669(TypeCheckTest.java:5621)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 36,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineVariables.java": {
        "modified": [
          [
            575
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testSingletonGetter1",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTest.test(IntegrationTest.java:2006)",
          "com.google.javascript.jscomp.IntegrationTest.test(IntegrationTest.java:1988)",
          "com.google.javascript.jscomp.IntegrationTest.testSingletonGetter1(IntegrationTest.java:1942)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 37,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeTraversal.java": {
        "modified": [
          [
            541
          ]
        ]
      },
      "com/google/javascript/jscomp/parsing/IRFactory.java": {
        "modified": [
          [
            667
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIncompleteFunction",
        "stackTrace": [
          "com.google.javascript.jscomp.Compiler.runCallable(Compiler.java:642)",
          "com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:587)",
          "com.google.javascript.jscomp.Compiler.compile(Compiler.java:569)",
          "com.google.javascript.jscomp.Compiler.compileModules(Compiler.java:560)",
          "com.google.javascript.jscomp.Compiler.compile(Compiler.java:542)",
          "com.google.javascript.jscomp.IntegrationTest.compile(IntegrationTest.java:2080)",
          "com.google.javascript.jscomp.IntegrationTest.test(IntegrationTest.java:2041)",
          "com.google.javascript.jscomp.IntegrationTest.testIncompleteFunction(IntegrationTest.java:1945)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "java.lang.RuntimeException: INTERNAL COMPILER ERROR."
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 38,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeConsumer.java": {
        "modified": [
          [
            245
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testMinusNegativeZero",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:401)",
          "com.google.javascript.jscomp.CodePrinterTest.testMinusNegativeZero(CodePrinterTest.java:1374)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<x-[ ]-0.0> but was:<x-[]-0.0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 39,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/PrototypeObjectType.java": {
        "modified": [
          [
            380
          ],
          [
            394
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.rhino.jstype.RecordTypeTest",
        "methodName": "testRecursiveRecord",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.RecordTypeTest.testRecursiveRecord(RecordTypeTest.java:59)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{loop: [?], number: number, st...> but was:<{loop: [{...}], number: number, st...>"
      },
      {
        "className": "com.google.javascript.rhino.jstype.RecordTypeTest",
        "methodName": "testLongToString",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.RecordTypeTest.testLongToString(RecordTypeTest.java:76)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...number, a4: number, [a5: number, a6: number]}> but was:<...number, a4: number, [...]}>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 40,
    "changedFiles": {
      "com/google/javascript/jscomp/NameAnalyzer.java": {
        "modified": [
          [
            635
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue284",
        "stackTrace": [
          "com.google.javascript.jscomp.Compiler.runCallable(Compiler.java:639)",
          "com.google.javascript.jscomp.Compiler.runInCompilerThread(Compiler.java:584)",
          "com.google.javascript.jscomp.Compiler.compile(Compiler.java:566)",
          "com.google.javascript.jscomp.Compiler.compileModules(Compiler.java:557)",
          "com.google.javascript.jscomp.Compiler.compile(Compiler.java:539)",
          "com.google.javascript.jscomp.IntegrationTest.compile(IntegrationTest.java:2046)",
          "com.google.javascript.jscomp.IntegrationTest.test(IntegrationTest.java:1960)",
          "com.google.javascript.jscomp.IntegrationTest.test(IntegrationTest.java:1951)",
          "com.google.javascript.jscomp.IntegrationTest.testIssue284(IntegrationTest.java:1769)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "java.lang.RuntimeException: INTERNAL COMPILER ERROR."
      },
      {
        "className": "com.google.javascript.jscomp.NameAnalyzerTest",
        "methodName": "testIssue284",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:872)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:433)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:358)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:327)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:315)",
          "com.google.javascript.jscomp.NameAnalyzerTest.testIssue284(NameAnalyzerTest.java:1644)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 41,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionTypeBuilder.java": {
        "modified": [
          [
            292
          ],
          [
            483
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testMethodInference6",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7035)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7009)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6953)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6949)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testMethodInference6(LooseTypeCheckTest.java:1772)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue368",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9529)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9508)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9446)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue368(TypeCheckTest.java:5326)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[actual parameter 2 of Bar.prototype.add does not match formal parameter"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testMethodInference6",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9534)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9508)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9446)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9442)",
          "com.google.javascript.jscomp.TypeCheckTest.testMethodInference6(TypeCheckTest.java:2027)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 42,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/IRFactory.java": {
        "modified": [
          [
            568
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testForEach",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.parseError(ParserTest.java:991)",
          "com.google.javascript.jscomp.parsing.ParserTest.testForEach(ParserTest.java:962)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 43,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            420
          ],
          [
            547
          ],
          [
            580
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testLends10",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9511)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9490)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9428)",
          "com.google.javascript.jscomp.TypeCheckTest.testLends10(TypeCheckTest.java:8781)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[inconsistent return type"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testLends11",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9511)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9490)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9428)",
          "com.google.javascript.jscomp.TypeCheckTest.testLends11(TypeCheckTest.java:8793)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[inconsistent return type"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 44,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeConsumer.java": {
        "modified": [
          [
            194
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testIssue620",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:389)",
          "com.google.javascript.jscomp.CodePrinterTest.testIssue620(CodePrinterTest.java:1283)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<alert(/ //[ ]/ /)> but was:<alert(/ //[]/ /)>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 45,
    "changedFiles": {
      "com/google/javascript/jscomp/RemoveUnusedVars.java": {
        "modified": [
          [
            732
          ],
          [
            739
          ],
          [
            904
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.RemoveUnusedVarsTest",
        "methodName": "testIssue618_1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:866)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:427)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:352)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:321)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:309)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:541)",
          "com.google.javascript.jscomp.RemoveUnusedVarsTest.testIssue618_1(RemoveUnusedVarsTest.java:741)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 46,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/RecordType.java": {
        "modified": [
          [
            140
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.rhino.jstype.JSTypeTest",
        "methodName": "testRecordTypeLeastSuperType2",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:99)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:95)",
          "com.google.javascript.rhino.testing.BaseJSTypeTestCase.assertTypeEquals(BaseJSTypeTestCase.java:573)",
          "com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeLeastSuperType2(JSTypeTest.java:2721)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: ({a: number, b: string}|{b: string, c: string, e: number})"
      },
      {
        "className": "com.google.javascript.rhino.jstype.JSTypeTest",
        "methodName": "testRecordTypeLeastSuperType3",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:99)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:95)",
          "com.google.javascript.rhino.testing.BaseJSTypeTestCase.assertTypeEquals(BaseJSTypeTestCase.java:573)",
          "com.google.javascript.rhino.jstype.JSTypeTest.testRecordTypeLeastSuperType3(JSTypeTest.java:2733)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: ({a: number, b: string}|{d: number, e: string, f: string})"
      },
      {
        "className": "com.google.javascript.rhino.jstype.RecordTypeTest",
        "methodName": "testSupAndInf",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:99)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:95)",
          "com.google.javascript.rhino.jstype.RecordTypeTest.testSupAndInf(RecordTypeTest.java:98)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: ({a: number, b: number}|{b: number, c: number})"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 47,
    "changedFiles": {
      "com/google/debugging/sourcemap/SourceMapConsumerV3.java": {
        "modified": [
          [
            489
          ]
        ]
      },
      "com/google/javascript/jscomp/SourceMap.java": {
        "modified": [
          [
            138
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testParseSourceMetaMap",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testParseSourceMetaMap(SourceMapGeneratorV3Test.java:450)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<5> but was:<4>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testGoldenOutput0a",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:84)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput0a(SourceMapGeneratorV3Test.java:134)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testMultilineMapping",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:193)",
          "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(SourceMapTestCase.java:185)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testMultilineMapping(SourceMapGeneratorV3Test.java:93)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<9>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testMultiFunctionMapping",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:193)",
          "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(SourceMapTestCase.java:185)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testMultiFunctionMapping(SourceMapGeneratorV3Test.java:107)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<9>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testLiteralMappingsGoldenOutput",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:84)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testLiteralMappingsGoldenOutput(SourceMapGeneratorV3Test.java:77)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testMultilineMapping2",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:193)",
          "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(SourceMapTestCase.java:185)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testMultilineMapping2(SourceMapGeneratorV3Test.java:100)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<9>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testBasicMappingGoldenOutput",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:84)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicMappingGoldenOutput(SourceMapGeneratorV3Test.java:54)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testSourceMapMerging",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testSourceMapMerging(SourceMapGeneratorV3Test.java:480)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<5> but was:<4>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testLiteralMappings",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:193)",
          "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(SourceMapTestCase.java:185)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testLiteralMappings(SourceMapGeneratorV3Test.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<9>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testBasicMapping1",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:193)",
          "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(SourceMapTestCase.java:185)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicMapping1(SourceMapGeneratorV3Test.java:49)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<9>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testBasicMapping2",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:252)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:199)",
          "com.google.debugging.sourcemap.SourceMapTestCase.check(SourceMapTestCase.java:193)",
          "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(SourceMapTestCase.java:185)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicMapping2(SourceMapGeneratorV3Test.java:67)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<9>"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testGoldenOutput1",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:84)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput1(SourceMapGeneratorV3Test.java:149)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testGoldenOutput2",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:84)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput2(SourceMapGeneratorV3Test.java:179)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testGoldenOutput3",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput3(SourceMapGeneratorV3Test.java:195)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testGoldenOutput4",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput4(SourceMapGeneratorV3Test.java:209)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...t\":1,"
      },
      {
        "className": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "methodName": "testGoldenOutput5",
        "stackTrace": [
          "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(SourceMapTestCase.java:96)",
          "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput5(SourceMapGeneratorV3Test.java:225)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<..."
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 48,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1521
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue586",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9391)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9371)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9309)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue586(TypeCheckTest.java:5443)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 49,
    "changedFiles": {
      "com/google/javascript/jscomp/MakeDeclaredNamesUnique.java": {
        "modified": [
          [
            91
          ],
          [
            130
          ],
          [
            173
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline19b",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline19b(FunctionInjectorTest.java:945)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInlineIntoLoop",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInlineIntoLoop(FunctionInjectorTest.java:960)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline13",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline13(FunctionInjectorTest.java:866)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline14",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline14(FunctionInjectorTest.java:877)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline15",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline15(FunctionInjectorTest.java:888)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline16",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline16(FunctionInjectorTest.java:899)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline17",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline17(FunctionInjectorTest.java:910)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline18",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline18(FunctionInjectorTest.java:919)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInline19",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInline19(FunctionInjectorTest.java:930)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testBug1897706",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testBug1897706(FunctionInjectorTest.java:1315)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testInlineFunctionWithInnerFunction5",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testInlineFunctionWithInnerFunction5(FunctionInjectorTest.java:1025)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionToBlockMutatorTest",
        "methodName": "testMutateWithParameters3",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateWithParameters3(FunctionToBlockMutatorTest.java:112)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionToBlockMutatorTest",
        "methodName": "testMutateCallInLoopVars1",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateCallInLoopVars1(FunctionToBlockMutatorTest.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionToBlockMutatorTest",
        "methodName": "testMutateInitializeUninitializedVars1",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars1(FunctionToBlockMutatorTest.java:129)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionToBlockMutatorTest",
        "methodName": "testMutateInitializeUninitializedVars2",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars2(FunctionToBlockMutatorTest.java:136)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionToBlockMutatorTest",
        "methodName": "testMutateFunctionDefinition",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateFunctionDefinition(FunctionToBlockMutatorTest.java:167)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.FunctionToBlockMutatorTest",
        "methodName": "testMutate8",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189)",
          "com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutate8(FunctionToBlockMutatorTest.java:121)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testLoopWithFunctionWithFunction",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testLoopWithFunctionWithFunction(InlineFunctionsTest.java:2201)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testShadowVariables16",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables16(InlineFunctionsTest.java:845)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testShadowVariables18",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables18(InlineFunctionsTest.java:874)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testCostBasedInlining11",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining11(InlineFunctionsTest.java:996)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testMixedModeInliningCosting3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testMixedModeInliningCosting3(InlineFunctionsTest.java:529)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineNeverMutateConstants",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverMutateConstants(InlineFunctionsTest.java:617)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineWithThis7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineWithThis7(InlineFunctionsTest.java:1895)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testAnonymous1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous1(InlineFunctionsTest.java:2169)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testAnonymous3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous3(InlineFunctionsTest.java:2191)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testShadowVariables1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables1(InlineFunctionsTest.java:682)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testShadowVariables3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables3(InlineFunctionsTest.java:706)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testShadowVariables6",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables6(InlineFunctionsTest.java:737)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testShadowVariables7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables7(InlineFunctionsTest.java:748)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testFunctionExpressionCallInlining11b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionCallInlining11b(InlineFunctionsTest.java:1682)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexInlineNoResultNoParamCall3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineNoResultNoParamCall3(InlineFunctionsTest.java:1212)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testCostBasedInlining9",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining9(InlineFunctionsTest.java:977)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testMethodWithFunctionWithFunction",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testMethodWithFunctionWithFunction(InlineFunctionsTest.java:2236)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testFunctionExpressionYCombinator",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionYCombinator(InlineFunctionsTest.java:1929)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexInlineVars7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineVars7(InlineFunctionsTest.java:1319)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexFunctionWithFunctionDefinition2a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2a(InlineFunctionsTest.java:1525)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexInline7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexInline7(InlineFunctionsTest.java:1269)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testFunctionExpressionOmega",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionOmega(InlineFunctionsTest.java:1758)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions15b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15b(InlineFunctionsTest.java:246)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions15d",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15d(InlineFunctionsTest.java:296)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions16a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions16a(InlineFunctionsTest.java:320)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testBug4944818",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2077)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexSample",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexSample(InlineFunctionsTest.java:1418)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified1(InlineFunctionsTest.java:549)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified2(InlineFunctionsTest.java:555)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified3(InlineFunctionsTest.java:562)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified4(InlineFunctionsTest.java:569)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified5",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified5(InlineFunctionsTest.java:577)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified6",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified6(InlineFunctionsTest.java:583)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified7(InlineFunctionsTest.java:590)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testIssue423",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:2142)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexFunctionWithFunctionDefinition2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2(InlineFunctionsTest.java:1511)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testComplexFunctionWithFunctionDefinition3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition3(InlineFunctionsTest.java:1538)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testDecomposeFunctionExpressionInCall",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeFunctionExpressionInCall(InlineFunctionsTest.java:1553)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineNeverOverrideNewValues",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverOverrideNewValues(InlineFunctionsTest.java:623)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineBlockMutableArgs1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs1(InlineFunctionsTest.java:653)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineBlockMutableArgs2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs2(InlineFunctionsTest.java:659)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineBlockMutableArgs3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs3(InlineFunctionsTest.java:665)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineBlockMutableArgs4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs4(InlineFunctionsTest.java:671)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions10",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions10(InlineFunctionsTest.java:183)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions13",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions13(InlineFunctionsTest.java:210)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions22",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions22(InlineFunctionsTest.java:375)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions23",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions23(InlineFunctionsTest.java:389)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions9",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions9(InlineFunctionsTest.java:176)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest",
        "methodName": "testMakeLocalNamesUniqueWithContext5",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext5(MakeDeclaredNamesUniqueTest.java:222)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 50,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeReplaceKnownMethods.java": {
        "modified": [
          [
            376
          ],
          [
            389
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest",
        "methodName": "testStringJoinAdd",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest.fold(PeepholeReplaceKnownMethodsTest.java:280)",
          "com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest.testStringJoinAdd(PeepholeReplaceKnownMethodsTest.java:87)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest",
        "methodName": "testNoStringJoin",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:537)",
          "com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest.foldSame(PeepholeReplaceKnownMethodsTest.java:276)",
          "com.google.javascript.jscomp.PeepholeReplaceKnownMethodsTest.testNoStringJoin(PeepholeReplaceKnownMethodsTest.java:78)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 51,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeConsumer.java": {
        "modified": [
          [
            241
          ],
          [
            259
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testIssue582",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:389)",
          "com.google.javascript.jscomp.CodePrinterTest.testIssue582(CodePrinterTest.java:1273)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x=[-0.]0> but was:<var x=[]0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 52,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            745
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testNumericKeys",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:389)",
          "com.google.javascript.jscomp.CodePrinterTest.testNumericKeys(CodePrinterTest.java:1259)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x={[\"010\"]:1}> but was:<var x={[10]:1}>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 53,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineObjectLiterals.java": {
        "modified": [
          [
            331
          ],
          [
            350
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineObjectLiteralsTest",
        "methodName": "testBug545",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:301)",
          "com.google.common.base.Preconditions.checkElementIndex(Preconditions.java:280)",
          "com.google.common.collect.Lists$ReverseList.reverseIndex(Lists.java:743)",
          "com.google.common.collect.Lists$ReverseList.get(Lists.java:774)",
          "com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior.replaceAssignmentExpression(InlineObjectLiterals.java:349)",
          "com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior.splitObject(InlineObjectLiterals.java:412)",
          "com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior.afterExitScope(InlineObjectLiterals.java:103)",
          "com.google.javascript.jscomp.ReferenceCollectingCallback.exitScope(ReferenceCollectingCallback.java:187)",
          "com.google.javascript.jscomp.NodeTraversal.popScope(NodeTraversal.java:560)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:520)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:465)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:473)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:473)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:286)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:446)",
          "com.google.javascript.jscomp.ReferenceCollectingCallback.process(ReferenceCollectingCallback.java:110)",
          "com.google.javascript.jscomp.InlineObjectLiterals.process(InlineObjectLiterals.java:66)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:765)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testLocal(InlineObjectLiteralsTest.java:368)",
          "com.google.javascript.jscomp.InlineObjectLiteralsTest.testBug545(InlineObjectLiteralsTest.java:361)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 54,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1413
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/FunctionType.java": {
        "modified": [
          [
            341
          ],
          [
            366
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue537a",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9230)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9209)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9150)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue537a(TypeCheckTest.java:5264)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[Function Foo.prototype.method: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).]> but was:<[Property baz never defined on Bar]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue537b",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9230)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9209)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9150)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue537b(TypeCheckTest.java:5287)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[Function Bar.prototype.baz: called with 1 argument(s). Function requires at least 0 argument(s) and no more than 0 argument(s).]> but was:<[Property baz never defined on Bar]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testPropertyOnUnknownSuperClass2",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testPropertyOnUnknownSuperClass2(TypedScopeCreatorTest.java:377)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[?]> but was:<[number]>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 55,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionRewriter.java": {
        "modified": [
          [
            117
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FunctionRewriterTest",
        "methodName": "testIssue538",
        "stackTrace": [
          "com.google.javascript.jscomp.AstValidator$1.handleViolation(AstValidator.java:51)",
          "com.google.javascript.jscomp.AstValidator.violation(AstValidator.java:763)",
          "com.google.javascript.jscomp.AstValidator.validateNodeType(AstValidator.java:768)",
          "com.google.javascript.jscomp.AstValidator.validateFunctionExpression(AstValidator.java:359)",
          "com.google.javascript.jscomp.AstValidator.validateObjectLitGetKey(AstValidator.java:696)",
          "com.google.javascript.jscomp.AstValidator.validateObjectLitKey(AstValidator.java:677)",
          "com.google.javascript.jscomp.AstValidator.validateObjectLit(AstValidator.java:670)",
          "com.google.javascript.jscomp.AstValidator.validateExpression(AstValidator.java:252)",
          "com.google.javascript.jscomp.AstValidator.validateAssignmentExpression(AstValidator.java:603)",
          "com.google.javascript.jscomp.AstValidator.validateExpression(AstValidator.java:219)",
          "com.google.javascript.jscomp.AstValidator.validateExprStmt(AstValidator.java:476)",
          "com.google.javascript.jscomp.AstValidator.validateStatement(AstValidator.java:126)",
          "com.google.javascript.jscomp.AstValidator.validateScript(AstValidator.java:89)",
          "com.google.javascript.jscomp.AstValidator.validateCodeRoot(AstValidator.java:79)",
          "com.google.javascript.jscomp.AstValidator.validateRoot(AstValidator.java:72)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:767)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesTo(FunctionRewriterTest.java:199)",
          "com.google.javascript.jscomp.FunctionRewriterTest.checkCompilesToSame(FunctionRewriterTest.java:203)",
          "com.google.javascript.jscomp.FunctionRewriterTest.testIssue538(FunctionRewriterTest.java:166)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Expected function but was call Reference node CALL 4 [free_call: 1] [source_file: testcode]"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 56,
    "changedFiles": {
      "com/google/javascript/jscomp/SourceFile.java": {
        "modified": [
          [
            242
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest",
        "methodName": "testExceptNoNewLine",
        "stackTrace": [
          "com.google.javascript.jscomp.JSCompilerSourceExcerptProviderTest.testExceptNoNewLine(JSCompilerSourceExcerptProviderTest.java:67)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<foo2:third line> but was:<null>"
      },
      {
        "className": "com.google.javascript.jscomp.JsMessageExtractorTest",
        "methodName": "testSyntaxError1",
        "stackTrace": [
          "com.google.javascript.jscomp.JsMessageExtractorTest.testSyntaxError1(JsMessageExtractorTest.java:62)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.JsMessageExtractorTest",
        "methodName": "testSyntaxError2",
        "stackTrace": [
          "com.google.javascript.jscomp.JsMessageExtractorTest.testSyntaxError2(JsMessageExtractorTest.java:74)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 57,
    "changedFiles": {
      "com/google/javascript/jscomp/ClosureCodingConvention.java": {
        "modified": [
          [
            197
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ClosureCodingConventionTest",
        "methodName": "testRequire",
        "stackTrace": [
          "com.google.javascript.jscomp.ClosureCodingConventionTest.assertNotRequire(ClosureCodingConventionTest.java:218)",
          "com.google.javascript.jscomp.ClosureCodingConventionTest.testRequire(ClosureCodingConventionTest.java:196)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: foo"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 58,
    "changedFiles": {
      "com/google/javascript/jscomp/LiveVariablesAnalysis.java": {
        "modified": [
          [
            206
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.LiveVariableAnalysisTest",
        "methodName": "testExpressionInForIn",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:129)",
          "com.google.javascript.jscomp.LiveVariablesAnalysis.addToSetIfLocal(LiveVariablesAnalysis.java:266)",
          "com.google.javascript.jscomp.LiveVariablesAnalysis.computeGenKill(LiveVariablesAnalysis.java:206)",
          "com.google.javascript.jscomp.LiveVariablesAnalysis.flowThrough(LiveVariablesAnalysis.java:159)",
          "com.google.javascript.jscomp.LiveVariablesAnalysis.flowThrough(LiveVariablesAnalysis.java:47)",
          "com.google.javascript.jscomp.DataFlowAnalysis.flow(DataFlowAnalysis.java:275)",
          "com.google.javascript.jscomp.DataFlowAnalysis.analyze(DataFlowAnalysis.java:212)",
          "com.google.javascript.jscomp.DataFlowAnalysis.analyze(DataFlowAnalysis.java:180)",
          "com.google.javascript.jscomp.LiveVariableAnalysisTest.computeLiveness(LiveVariableAnalysisTest.java:366)",
          "com.google.javascript.jscomp.LiveVariableAnalysisTest.getFlowStateAtX(LiveVariableAnalysisTest.java:312)",
          "com.google.javascript.jscomp.LiveVariableAnalysisTest.assertLiveBeforeX(LiveVariableAnalysisTest.java:279)",
          "com.google.javascript.jscomp.LiveVariableAnalysisTest.testExpressionInForIn(LiveVariableAnalysisTest.java:210)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 59,
    "changedFiles": {
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            255
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testCheckGlobalThisOff",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:861)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:847)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:835)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:831)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testCheckGlobalThisOff(CommandLineRunnerTest.java:160)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected no warnings or errors"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 60,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            108
          ],
          [
            136
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testIssue504",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:861)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:875)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testIssue504(CommandLineRunnerTest.java:365)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.NodeUtilTest",
        "methodName": "testGetBooleanValue",
        "stackTrace": [
          "com.google.javascript.jscomp.NodeUtilTest.assertPureBooleanUnknown(NodeUtilTest.java:123)",
          "com.google.javascript.jscomp.NodeUtilTest.testGetBooleanValue(NodeUtilTest.java:104)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<unknown> but was:<false>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 61,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            958
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest",
        "methodName": "testCall1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest.testCall1(PeepholeRemoveDeadCodeTest.java:544)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest",
        "methodName": "testCall2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest.testCall2(PeepholeRemoveDeadCodeTest.java:548)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest",
        "methodName": "testRemoveUselessOps",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest.fold(PeepholeRemoveDeadCodeTest.java:54)",
          "com.google.javascript.jscomp.PeepholeRemoveDeadCodeTest.testRemoveUselessOps(PeepholeRemoveDeadCodeTest.java:231)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 62,
    "changedFiles": {
      "com/google/javascript/jscomp/LightweightMessageFormatter.java": {
        "modified": [
          [
            98
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.LightweightMessageFormatterTest",
        "methodName": "testFormatErrorSpaceEndOfLine1",
        "stackTrace": [
          "com.google.javascript.jscomp.LightweightMessageFormatterTest.testFormatErrorSpaceEndOfLine1(LightweightMessageFormatterTest.java:91)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ion here"
      },
      {
        "className": "com.google.javascript.jscomp.LightweightMessageFormatterTest",
        "methodName": "testFormatErrorSpaceEndOfLine2",
        "stackTrace": [
          "com.google.javascript.jscomp.LightweightMessageFormatterTest.testFormatErrorSpaceEndOfLine2(LightweightMessageFormatterTest.java:100)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...iption here"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 64,
    "changedFiles": {
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            1432
          ],
          [
            1461
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testES5StrictUseStrictMultipleInputs",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.testES5StrictUseStrictMultipleInputs(CommandLineRunnerTest.java:803)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<17> but was:<-1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 65,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            1015
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testZero",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:387)",
          "com.google.javascript.jscomp.CodePrinterTest.testZero(CodePrinterTest.java:1231)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x=\"\\0[00]\"> but was:<var x=\"\\0[]\">"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 66,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            516
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testGetTypedPercent5",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testGetTypedPercent5(TypeCheckTest.java:7784)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<100.0> but was:<62.5>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testGetTypedPercent6",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testGetTypedPercent6(TypeCheckTest.java:7789)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<100.0> but was:<66.66666666666667>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 67,
    "changedFiles": {
      "com/google/javascript/jscomp/AnalyzePrototypeProperties.java": {
        "modified": [
          [
            318
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest",
        "methodName": "testAliasing7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:537)",
          "com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest.testAliasing7(RemoveUnusedPrototypePropertiesTest.java:189)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 68,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/JsDocInfoParser.java": {
        "modified": [
          [
            868
          ],
          [
            1709
          ],
          [
            1761
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testIssue477",
        "stackTrace": [
          "com.google.javascript.jscomp.testing.TestErrorReporter.warning(TestErrorReporter.java:62)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser.addParserWarning(JsDocInfoParser.java:65)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parse(JsDocInfoParser.java:887)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:2690)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:2672)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:2667)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testIssue477(JsDocInfoParserTest.java:509)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "extra warning: Unexpected end of file"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 69,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            1580
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testThisTypeOfFunction2",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8977)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8957)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8898)",
          "com.google.javascript.jscomp.TypeCheckTest.testThisTypeOfFunction2(TypeCheckTest.java:4553)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testThisTypeOfFunction3",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8977)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8957)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8898)",
          "com.google.javascript.jscomp.TypeCheckTest.testThisTypeOfFunction3(TypeCheckTest.java:4561)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testThisTypeOfFunction4",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8977)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8957)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8898)",
          "com.google.javascript.jscomp.TypeCheckTest.testThisTypeOfFunction4(TypeCheckTest.java:4569)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 70,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1745
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testDuplicateLocalVarDecl",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testClosureTypesMultipleWarnings(LooseTypeCheckTest.java:7054)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testDuplicateLocalVarDecl(LooseTypeCheckTest.java:1970)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionArguments13",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7084)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7064)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7008)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionArguments13(LooseTypeCheckTest.java:1346)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testScoping12",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8883)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8863)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8804)",
          "com.google.javascript.jscomp.TypeCheckTest.testScoping12(TypeCheckTest.java:1421)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testDuplicateLocalVarDecl",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testClosureTypesMultipleWarnings(TypeCheckTest.java:8850)",
          "com.google.javascript.jscomp.TypeCheckTest.testDuplicateLocalVarDecl(TypeCheckTest.java:2147)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warning(s) : JSC_DUP_VAR_DECLARATION. variable x redefined with type string, original definition at  [testcode] :2 with type number at  [testcode]  line 2 : 42 expected:<2> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionArguments13",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8883)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8863)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8804)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionArguments13(TypeCheckTest.java:1514)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 71,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckAccessControls.java": {
        "modified": [
          [
            416
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckAccessControlsTest",
        "methodName": "testNoPrivateAccessForProperties6",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:904)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CheckAccessControlsTest.testNoPrivateAccessForProperties6(CheckAccessControlsTest.java:402)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Overriding private property of Foo.prototype."
      },
      {
        "className": "com.google.javascript.jscomp.CheckAccessControlsTest",
        "methodName": "testNoPrivateAccessForProperties8",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:902)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CheckAccessControlsTest.testNoPrivateAccessForProperties8(CheckAccessControlsTest.java:425)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 72,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionToBlockMutator.java": {
        "modified": [
          [
            152
          ]
        ]
      },
      "com/google/javascript/jscomp/RenameLabels.java": {
        "modified": [
          [
            215
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions31",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions31(InlineFunctionsTest.java:388)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 73,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            1045
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testUnicode",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:387)",
          "com.google.javascript.jscomp.CodePrinterTest.testUnicode(CodePrinterTest.java:1215)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x=\"[\\u007f]\"> but was:<var x=\"[\u007f]\">"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 74,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeFoldConstants.java": {
        "modified": [
          [
            907
          ],
          [
            1074
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testFoldComparison3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:844)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:411)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:336)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:293)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.fold(PeepholeFoldConstantsTest.java:69)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testFoldComparison3(PeepholeFoldConstantsTest.java:700)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testInvertibleOperators",
        "stackTrace": [
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.assertSameResults(PeepholeFoldConstantsTest.java:1184)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testInvertibleOperators(PeepholeFoldConstantsTest.java:1122)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Expressions did not fold the same"
      },
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testCommutativeOperators",
        "stackTrace": [
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.assertSameResults(PeepholeFoldConstantsTest.java:1184)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.assertSameResultsOrUncollapsed(PeepholeFoldConstantsTest.java:1179)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testCommutativeOperators(PeepholeFoldConstantsTest.java:1162)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Expressions did not fold the same"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 75,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            313
          ],
          [
            375
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testIEString",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testIEString(PeepholeFoldConstantsTest.java:992)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 76,
    "changedFiles": {
      "com/google/javascript/jscomp/DeadAssignmentsElimination.java": {
        "modified": [
          [
            300
          ],
          [
            340
          ],
          [
            362
          ],
          [
            372
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testInExpression2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:345)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testInExpression2(DeadAssignmentsEliminationTest.java:459)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue384b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:345)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:341)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue384b(DeadAssignmentsEliminationTest.java:501)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue384c",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:345)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:341)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue384c(DeadAssignmentsEliminationTest.java:508)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue384d",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:345)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.inFunction(DeadAssignmentsEliminationTest.java:341)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue384d(DeadAssignmentsEliminationTest.java:515)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 77,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            966
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testZero",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:386)",
          "com.google.javascript.jscomp.CodePrinterTest.testZero(CodePrinterTest.java:1179)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x=\"\\[]0\"> but was:<var x=\"\\[u000]0\">"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 78,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeFoldConstants.java": {
        "modified": [
          [
            711
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testFoldArithmetic",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:767)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.fold(PeepholeFoldConstantsTest.java:69)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testFoldArithmetic(PeepholeFoldConstantsTest.java:558)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_DIVIDE_BY_0_ERROR. Divide by 0 at testcode line 1 : 8 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 79,
    "changedFiles": {
      "com/google/javascript/jscomp/Normalize.java": {
        "modified": [
          [
            122
          ]
        ]
      },
      "com/google/javascript/jscomp/VarCheck.java": {
        "modified": [
          [
            221
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testIssue",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:129)",
          "com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler.onRedeclaration(Normalize.java:698)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.declareVar(SyntacticScopeCreator.java:238)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.scanVars(SyntacticScopeCreator.java:124)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.scanVars(SyntacticScopeCreator.java:166)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.scanVars(SyntacticScopeCreator.java:166)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.scanVars(SyntacticScopeCreator.java:166)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.scanRoot(SyntacticScopeCreator.java:110)",
          "com.google.javascript.jscomp.SyntacticScopeCreator.createScope(SyntacticScopeCreator.java:74)",
          "com.google.javascript.jscomp.NodeTraversal.getScope(NodeTraversal.java:563)",
          "com.google.javascript.jscomp.Normalize$ScopeTicklingCallback.enterScope(Normalize.java:760)",
          "com.google.javascript.jscomp.NodeTraversal.pushScope(NodeTraversal.java:527)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:271)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:257)",
          "com.google.javascript.jscomp.Normalize.removeDuplicateDeclarations(Normalize.java:633)",
          "com.google.javascript.jscomp.Normalize.process(Normalize.java:142)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:749)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:374)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:351)",
          "com.google.javascript.jscomp.NormalizeTest.testIssue(NormalizeTest.java:386)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      },
      {
        "className": "com.google.javascript.jscomp.VarCheckTest",
        "methodName": "testPropReferenceInExterns1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:838)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:600)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:563)",
          "com.google.javascript.jscomp.VarCheckTest.testPropReferenceInExterns1(VarCheckTest.java:141)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compiler.reportCodeChange() should have been called"
      },
      {
        "className": "com.google.javascript.jscomp.VarCheckTest",
        "methodName": "testPropReferenceInExterns3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:838)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:600)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:563)",
          "com.google.javascript.jscomp.VarCheckTest.testPropReferenceInExterns3(VarCheckTest.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compiler.reportCodeChange() should have been called"
      },
      {
        "className": "com.google.javascript.jscomp.VarCheckTest",
        "methodName": "testVarReferenceInExterns",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:838)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:600)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:563)",
          "com.google.javascript.jscomp.VarCheckTest.testVarReferenceInExterns(VarCheckTest.java:131)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compiler.reportCodeChange() should have been called"
      },
      {
        "className": "com.google.javascript.jscomp.VarCheckTest",
        "methodName": "testCallInExterns",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:838)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:600)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:563)",
          "com.google.javascript.jscomp.VarCheckTest.testCallInExterns(VarCheckTest.java:136)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compiler.reportCodeChange() should have been called"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 80,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            1262
          ],
          [
            2910
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NodeUtilTest",
        "methodName": "testIsBooleanResult",
        "stackTrace": [
          "com.google.javascript.jscomp.NodeUtilTest.testIsBooleanResult(NodeUtilTest.java:1504)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.NodeUtilTest",
        "methodName": "testLocalValue1",
        "stackTrace": [
          "com.google.javascript.jscomp.NodeUtil.evaluatesToLocalValue(NodeUtil.java:2923)",
          "com.google.javascript.jscomp.NodeUtil.evaluatesToLocalValue(NodeUtil.java:2856)",
          "com.google.javascript.jscomp.NodeUtilTest.testLocalValue(NodeUtilTest.java:1281)",
          "com.google.javascript.jscomp.NodeUtilTest.testLocalValue1(NodeUtilTest.java:1169)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Unexpected expression nodeDELPROP 1 [sourcename:  [testcode] ] [parenthesized: true]"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 81,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/IRFactory.java": {
        "modified": [
          [
            517
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testUnnamedFunctionStatement",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.parseError(ParserTest.java:796)",
          "com.google.javascript.jscomp.parsing.ParserTest.testUnnamedFunctionStatement(ParserTest.java:776)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 82,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/JSType.java": {
        "modified": [
          [
            163
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue301",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8370)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8350)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8291)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue301(TypeCheckTest.java:4955)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.rhino.jstype.FunctionTypeTest",
        "methodName": "testEmptyFunctionTypes",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.FunctionTypeTest.testEmptyFunctionTypes(FunctionTypeTest.java:173)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 83,
    "changedFiles": {
      "com/google/javascript/jscomp/CommandLineRunner.java": {
        "modified": [
          [
            334
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testVersionFlag2",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:754)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:673)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:662)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:650)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:646)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testVersionFlag2(CommandLineRunnerTest.java:602)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 84,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/IRFactory.java": {
        "modified": [
          [
            341
          ],
          [
            797
          ],
          [
            806
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testDestructuringAssignForbidden4",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.parseError(ParserTest.java:783)",
          "com.google.javascript.jscomp.parsing.ParserTest.testDestructuringAssignForbidden4(ParserTest.java:625)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 85,
    "changedFiles": {
      "com/google/javascript/jscomp/UnreachableCodeElimination.java": {
        "modified": [
          [
            153
          ],
          [
            183
          ],
          [
            196
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testCascadedRemovalOfUnlessUnconditonalJumps",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testCascadedRemovalOfUnlessUnconditonalJumps(UnreachableCodeEliminationTest.java:235)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testIssue311",
        "stackTrace": [
          "com.google.javascript.jscomp.NodeUtil.isTryFinallyNode(NodeUtil.java:1369)",
          "com.google.javascript.jscomp.NodeUtil.removeChild(NodeUtil.java:1382)",
          "com.google.javascript.jscomp.UnreachableCodeElimination.removeDeadExprStatementSafely(UnreachableCodeElimination.java:234)",
          "com.google.javascript.jscomp.UnreachableCodeElimination.visit(UnreachableCodeElimination.java:105)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:464)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:502)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:449)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:249)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:422)",
          "com.google.javascript.jscomp.UnreachableCodeElimination.process(UnreachableCodeElimination.java:87)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:736)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testIssue311(UnreachableCodeEliminationTest.java:253)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 86,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            2465
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NodeUtilTest",
        "methodName": "testLocalValue1",
        "stackTrace": [
          "com.google.javascript.jscomp.NodeUtilTest.testLocalValue1(NodeUtilTest.java:1023)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testLocalizedSideEffects8",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:1206)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testLocalizedSideEffects8(PureFunctionIdentifierTest.java:772)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[A]> but was:<[A, f]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testLocalizedSideEffects9",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:1206)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testLocalizedSideEffects9(PureFunctionIdentifierTest.java:785)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[A]> but was:<[A, f]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testAnnotationInExterns_new4",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:1206)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testAnnotationInExterns_new4(PureFunctionIdentifierTest.java:241)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[externObjSEThis]> but was:<[externObjSEThis, NEW STRING externObjSEThisMethod]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testAnnotationInExterns_new6",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:1206)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testAnnotationInExterns_new6(PureFunctionIdentifierTest.java:260)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[externObjSEThis]> but was:<[externObjSEThis, NEW STRING externObjSEThisMethod, f]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testIssue303b",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:1206)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testIssue303b(PureFunctionIdentifierTest.java:206)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[]> but was:<[NEW STRING setLocation]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testIssue303",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:1206)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testIssue303(PureFunctionIdentifierTest.java:191)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[]> but was:<[NEW STRING setLocation]>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 87,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": {
        "modified": [
          [
            523
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest",
        "methodName": "testIssue291",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:512)",
          "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.foldSame(PeepholeSubstituteAlternateSyntaxTest.java:66)",
          "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testIssue291(PeepholeSubstituteAlternateSyntaxTest.java:568)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 88,
    "changedFiles": {
      "com/google/javascript/jscomp/DeadAssignmentsElimination.java": {
        "modified": [
          [
            327
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testIssue297",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:655)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:626)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:618)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testIssue297(CommandLineRunnerTest.java:252)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue297a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:512)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297a(DeadAssignmentsEliminationTest.java:368)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue297b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297b(DeadAssignmentsEliminationTest.java:375)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue297c",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297c(DeadAssignmentsEliminationTest.java:386)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue297d",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297d(DeadAssignmentsEliminationTest.java:397)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue297e",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297e(DeadAssignmentsEliminationTest.java:406)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.DeadAssignmentsEliminationTest",
        "methodName": "testIssue297f",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280)",
          "com.google.javascript.jscomp.DeadAssignmentsEliminationTest.testIssue297f(DeadAssignmentsEliminationTest.java:415)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 89,
    "changedFiles": {
      "com/google/javascript/jscomp/CollapseProperties.java": {
        "modified": [
          [
            484
          ]
        ]
      },
      "com/google/javascript/jscomp/GlobalNamespace.java": {
        "modified": [
          [
            920
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAddPropertyToChildOfUncollapsibleFunctionInLocalScope",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope(CollapsePropertiesTest.java:610)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAliasCreatedForFunctionDepth1_1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1(CollapsePropertiesTest.java:279)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAliasCreatedForFunctionDepth1_2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2(CollapsePropertiesTest.java:295)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAliasCreatedForFunctionDepth1_3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3(CollapsePropertiesTest.java:304)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1(CollapsePropertiesTest.java:552)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1(CollapsePropertiesTest.java:544)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2(CollapsePropertiesTest.java:572)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAliasCreatedForFunctionDepth2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2(CollapsePropertiesTest.java:313)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 90,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionTypeBuilder.java": {
        "modified": [
          [
            184
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/FunctionType.java": {
        "modified": [
          [
            880
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBackwardsTypedefUse8",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7752)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7726)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7670)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7666)",
          "com.google.javascript.jscomp.TypeCheckTest.testBackwardsTypedefUse8(TypeCheckTest.java:2670)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBackwardsTypedefUse9",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7747)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7726)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7670)",
          "com.google.javascript.jscomp.TypeCheckTest.testBackwardsTypedefUse9(TypeCheckTest.java:2678)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[actual parameter 1 of g does not match formal parameter"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 91,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckGlobalThis.java": {
        "modified": [
          [
            115
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testLendsAnnotation3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:733)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:491)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testLendsAnnotation3(CheckGlobalThisTest.java:236)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 110 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 92,
    "changedFiles": {
      "com/google/javascript/jscomp/ProcessClosurePrimitives.java": {
        "modified": [
          [
            789
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ProcessClosurePrimitivesTest",
        "methodName": "testProvideInIndependentModules4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:645)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:482)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:463)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)",
          "com.google.javascript.jscomp.ProcessClosurePrimitivesTest.testProvideInIndependentModules4(ProcessClosurePrimitivesTest.java:777)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 94,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            329
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NodeUtilTest",
        "methodName": "testValidDefine",
        "stackTrace": [
          "com.google.javascript.jscomp.NodeUtilTest.testValidDefine(NodeUtilTest.java:1086)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ProcessDefinesTest",
        "methodName": "testOverridingString1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:733)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.ProcessDefinesTest.testOverridingString1(ProcessDefinesTest.java:147)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_INVALID_DEFINE_INIT_ERROR. illegal initialization of @define variable DEF_OVERRIDE_STRING at testcode line 1 : 54 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.ProcessDefinesTest",
        "methodName": "testOverridingString3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:733)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.ProcessDefinesTest.testOverridingString3(ProcessDefinesTest.java:161)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_INVALID_DEFINE_INIT_ERROR. illegal initialization of @define variable DEF_OVERRIDE_STRING at testcode line 1 : 54 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 95,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            899
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testQualifiedNameInference5",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7365)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7345)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7298)",
          "com.google.javascript.jscomp.TypeCheckTest.testQualifiedNameInference5(TypeCheckTest.java:4761)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testGlobalQualifiedNameInLocalScope",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testGlobalQualifiedNameInLocalScope(TypedScopeCreatorTest.java:781)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 96,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            1409
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionArguments16",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7294)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7274)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7227)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionArguments16(TypeCheckTest.java:1362)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 97,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeFoldConstants.java": {
        "modified": [
          [
            698
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testFoldBitShifts",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:792)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.fold(PeepholeFoldConstantsTest.java:58)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testFoldBitShifts(PeepholeFoldConstantsTest.java:263)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 98,
    "changedFiles": {
      "com/google/javascript/jscomp/ReferenceCollectingCallback.java": {
        "modified": [
          [
            361
          ],
          [
            545
          ],
          [
            561
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testNoInlineAliasesInLoop",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:777)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.InlineVariablesTest.testNoInlineAliasesInLoop(InlineVariablesTest.java:617)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 99,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckGlobalThis.java": {
        "modified": [
          [
            92
          ],
          [
            125
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testPropertyOfMethod",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:817)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testPropertyOfMethod(CheckGlobalThisTest.java:158)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testMethod4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testMethod4(CheckGlobalThisTest.java:154)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 39 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testInterface1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testInterface1(CheckGlobalThisTest.java:112)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 54 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 100,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckGlobalThis.java": {
        "modified": [
          [
            99
          ],
          [
            146
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testStaticFunction6",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testStaticFunction6(CheckGlobalThisTest.java:88)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 35 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testStaticFunction7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testStaticFunction7(CheckGlobalThisTest.java:92)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 41 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testStaticFunction8",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:817)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testStaticFunction8(CheckGlobalThisTest.java:96)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testGlobalThis7",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:817)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testGlobalThis7(CheckGlobalThisTest.java:64)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testStaticMethod2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testStaticMethod2(CheckGlobalThisTest.java:148)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 39 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testStaticMethod3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testStaticMethod3(CheckGlobalThisTest.java:152)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USED_GLOBAL_THIS. dangerous use of the global this object at testcode line 1 : 41 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testInnerFunction1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:817)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testInnerFunction1(CheckGlobalThisTest.java:171)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testInnerFunction2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:817)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testInnerFunction2(CheckGlobalThisTest.java:175)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testInnerFunction3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:817)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testInnerFunction3(CheckGlobalThisTest.java:179)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 101,
    "changedFiles": {
      "com/google/javascript/jscomp/CommandLineRunner.java": {
        "modified": [
          [
            433
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testProcessClosurePrimitives",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:254)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:230)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:226)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testProcessClosurePrimitives(CommandLineRunnerTest.java:158)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 102,
    "changedFiles": {
      "com/google/javascript/jscomp/Normalize.java": {
        "modified": [
          [
            89
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CompilerRunnerTest",
        "methodName": "testIssue115",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerRunnerTest.test(CompilerRunnerTest.java:268)",
          "com.google.javascript.jscomp.CompilerRunnerTest.test(CompilerRunnerTest.java:248)",
          "com.google.javascript.jscomp.CompilerRunnerTest.testIssue115(CompilerRunnerTest.java:186)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 103,
    "changedFiles": {
      "com/google/javascript/jscomp/ControlFlowAnalysis.java": {
        "modified": [
          [
            894
          ]
        ]
      },
      "com/google/javascript/jscomp/DisambiguateProperties.java": {
        "modified": [
          [
            763
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckUnreachableCodeTest",
        "methodName": "testInstanceOfThrowsException",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:688)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:278)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:247)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:235)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:462)",
          "com.google.javascript.jscomp.CheckUnreachableCodeTest.testInstanceOfThrowsException(CheckUnreachableCodeTest.java:140)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_UNREACHABLE_CODE. unreachable code at testcode line 1 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.ControlFlowAnalysisTest",
        "methodName": "testInstanceOf",
        "stackTrace": [
          "com.google.javascript.jscomp.ControlFlowAnalysisTest.assertCrossEdge(ControlFlowAnalysisTest.java:178)",
          "com.google.javascript.jscomp.ControlFlowAnalysisTest.testInstanceOf(ControlFlowAnalysisTest.java:1246)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "No cross edges found"
      },
      {
        "className": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
        "methodName": "testSupertypeReferenceOfSubtypeProperty",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:758)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:964)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:956)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testSupertypeReferenceOfSubtypeProperty(DisambiguatePropertiesTest.java:606)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 104,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/UnionType.java": {
        "modified": [
          [
            291
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.rhino.jstype.UnionTypeTest",
        "methodName": "testGreatestSubtypeUnionTypes5",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.UnionTypeTest.testGreatestSubtypeUnionTypes5(UnionTypeTest.java:159)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<NoObject> but was:<None>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 105,
    "changedFiles": {
      "com/google/javascript/jscomp/FoldConstants.java": {
        "modified": [
          [
            1477
          ],
          [
            1500
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FoldConstantsTest",
        "methodName": "testStringJoinAdd",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:758)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:278)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:247)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:235)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:462)",
          "com.google.javascript.jscomp.FoldConstantsTest.foldSame(FoldConstantsTest.java:48)",
          "com.google.javascript.jscomp.FoldConstantsTest.testStringJoinAdd(FoldConstantsTest.java:646)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 106,
    "changedFiles": {
      "com/google/javascript/jscomp/GlobalNamespace.java": {
        "modified": [
          [
            907
          ]
        ]
      },
      "com/google/javascript/rhino/JSDocInfoBuilder.java": {
        "modified": [
          [
            189
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "methodName": "testJSDocComments",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:659)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:326)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:256)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)",
          "com.google.javascript.jscomp.CheckSideEffectsTest.test(CheckSideEffectsTest.java:33)",
          "com.google.javascript.jscomp.CheckSideEffectsTest.testJSDocComments(CheckSideEffectsTest.java:86)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_USELESS_CODE. Suspicious code. This code lacks side-effects. Is there a bug? at testcode line 1 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testTwinReferenceCancelsChildCollapsing",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:720)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:326)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:256)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:213)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testTwinReferenceCancelsChildCollapsing(CollapsePropertiesTest.java:1111)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testCrashInNestedAssign",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:720)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:326)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:256)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:213)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInNestedAssign(CollapsePropertiesTest.java:1106)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testCrashInCommaOperator",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkArgument(Preconditions.java:71)",
          "com.google.javascript.jscomp.CollapseProperties.addStubsForUndeclaredProperties(CollapseProperties.java:813)",
          "com.google.javascript.jscomp.CollapseProperties.updateObjLitOrFunctionDeclarationAtAssignNode(CollapseProperties.java:617)",
          "com.google.javascript.jscomp.CollapseProperties.updateObjLitOrFunctionDeclaration(CollapseProperties.java:550)",
          "com.google.javascript.jscomp.CollapseProperties.collapseDeclarationOfNameAndDescendants(CollapseProperties.java:445)",
          "com.google.javascript.jscomp.CollapseProperties.collapseDeclarationOfNameAndDescendants(CollapseProperties.java:451)",
          "com.google.javascript.jscomp.CollapseProperties.process(CollapseProperties.java:143)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:644)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:326)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:256)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:213)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInCommaOperator(CollapsePropertiesTest.java:1101)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 107,
    "changedFiles": {
      "com/google/javascript/jscomp/CommandLineRunner.java": {
        "modified": [
          [
            862
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testGetMsgWiringNoWarnings",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1256)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1242)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:1234)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testGetMsgWiringNoWarnings(CommandLineRunnerTest.java:395)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected no warnings or errors"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 108,
    "changedFiles": {
      "com/google/javascript/jscomp/ScopedAliases.java": {
        "modified": [
          [
            259
          ],
          [
            316
          ],
          [
            432
          ],
          [
            581
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testIssue1144",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:134)",
          "com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode.applyAlias(ScopedAliases.java:236)",
          "com.google.javascript.jscomp.ScopedAliases.hotSwapScript(ScopedAliases.java:147)",
          "com.google.javascript.jscomp.ScopedAliases.process(ScopedAliases.java:128)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:845)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testIssue1144(ScopedAliasesTest.java:570)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 109,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/JsDocInfoParser.java": {
        "modified": [
          [
            1908
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testStructuralConstructor2",
        "stackTrace": [
          "com.google.javascript.jscomp.testing.TestErrorReporter.warning(TestErrorReporter.java:64)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser.addTypeWarning(JsDocInfoParser.java:83)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.reportTypeSyntaxWarning(JsDocInfoParser.java:2399)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.reportGenericTypeSyntaxWarning(JsDocInfoParser.java:2404)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocInfoParser.java:1949)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseContextTypeExpression(JsDocInfoParser.java:1908)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseFunctionType(JsDocInfoParser.java:2012)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseBasicTypeExpression(JsDocInfoParser.java:1931)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeExpression(JsDocInfoParser.java:1888)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTopLevelTypeExpression(JsDocInfoParser.java:1808)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeExpressionAnnotation(JsDocInfoParser.java:1717)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAndRecordTypeNode(JsDocInfoParser.java:1334)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAndRecordTypeNode(JsDocInfoParser.java:1270)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAnnotation(JsDocInfoParser.java:951)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseHelperLoop(JsDocInfoParser.java:248)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parse(JsDocInfoParser.java:238)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:3236)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:3213)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:3208)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testParseType(JsDocInfoParserTest.java:716)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testStructuralConstructor2(JsDocInfoParserTest.java:585)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "extra warning: Bad type annotation. type not recognized due to syntax error"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testStructuralConstructor3",
        "stackTrace": [
          "com.google.javascript.jscomp.testing.TestErrorReporter.warning(TestErrorReporter.java:64)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser.addTypeWarning(JsDocInfoParser.java:83)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.reportTypeSyntaxWarning(JsDocInfoParser.java:2399)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.reportGenericTypeSyntaxWarning(JsDocInfoParser.java:2404)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeName(JsDocInfoParser.java:1949)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseContextTypeExpression(JsDocInfoParser.java:1908)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseFunctionType(JsDocInfoParser.java:2012)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseBasicTypeExpression(JsDocInfoParser.java:1931)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeExpression(JsDocInfoParser.java:1888)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTopLevelTypeExpression(JsDocInfoParser.java:1808)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseTypeExpressionAnnotation(JsDocInfoParser.java:1717)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAndRecordTypeNode(JsDocInfoParser.java:1334)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAndRecordTypeNode(JsDocInfoParser.java:1270)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseAnnotation(JsDocInfoParser.java:951)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parseHelperLoop(JsDocInfoParser.java:248)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parse(JsDocInfoParser.java:238)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:3236)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:3213)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:3208)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testStructuralConstructor3(JsDocInfoParserTest.java:594)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "extra warning: Bad type annotation. type not recognized due to syntax error"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 110,
    "changedFiles": {
      "com/google/javascript/jscomp/ScopedAliases.java": {
        "modified": [
          [
            358
          ],
          [
            366
          ],
          [
            383
          ],
          [
            392
          ],
          [
            408
          ]
        ]
      },
      "com/google/javascript/rhino/Node.java": {
        "modified": [
          [
            554
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testHoistedFunctionDeclaration",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:871)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testScoped(ScopedAliasesTest.java:55)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testHoistedFunctionDeclaration(ScopedAliasesTest.java:522)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_GOOG_SCOPE_NON_ALIAS_LOCAL. The local variable f is in a goog.scope and is not an alias. at testcode line 1 : 39 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testFunctionDeclaration",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:871)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testScoped(ScopedAliasesTest.java:55)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testFunctionDeclaration(ScopedAliasesTest.java:515)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_GOOG_SCOPE_NON_ALIAS_LOCAL. The local variable f is in a goog.scope and is not an alias. at testcode line 1 : 41 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 111,
    "changedFiles": {
      "com/google/javascript/jscomp/type/ClosureReverseAbstractInterpreter.java": {
        "modified": [
          [
            54
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
        "methodName": "testGoogIsArray2",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:106)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:96)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testClosureFunction(ClosureReverseAbstractInterpreterTest.java:288)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsArray2(ClosureReverseAbstractInterpreterTest.java:206)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: Array"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 112,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeInference.java": {
        "modified": [
          [
            1192
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue1058",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12407)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12381)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12317)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12313)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue1058(TypeCheckTest.java:12160)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testTemplatized11",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12407)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12381)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12317)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12313)",
          "com.google.javascript.jscomp.TypeCheckTest.testTemplatized11(TypeCheckTest.java:12141)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 113,
    "changedFiles": {
      "com/google/javascript/jscomp/ProcessClosurePrimitives.java": {
        "modified": [
          [
            329
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.VarCheckTest",
        "methodName": "testNoUndeclaredVarWhenUsingClosurePass",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:999)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.VarCheckTest.testNoUndeclaredVarWhenUsingClosurePass(VarCheckTest.java:371)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error. required \"namespace.Class1\" namespace never provided"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 114,
    "changedFiles": {
      "com/google/javascript/jscomp/NameAnalyzer.java": {
        "modified": [
          [
            578
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NameAnalyzerTest",
        "methodName": "testAssignWithCall",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.NameAnalyzerTest.testAssignWithCall(NameAnalyzerTest.java:1236)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 115,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionInjector.java": {
        "modified": [
          [
            697
          ],
          [
            730
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testBug4944818",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2060)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testDoubleInlining1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testDoubleInlining1(InlineFunctionsTest.java:1099)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified8",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified8(InlineFunctionsTest.java:598)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testNoInlineIfParametersModified9",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified9(InlineFunctionsTest.java:603)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions6",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions6(InlineFunctionsTest.java:152)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 116,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionInjector.java": {
        "modified": [
          [
            697
          ],
          [
            723
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testIssue1101a",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101a(FunctionInjectorTest.java:1347)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<NO> but was:<YES>"
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testIssue1101b",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1404)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1545)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1411)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1375)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101b(FunctionInjectorTest.java:1353)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<NO> but was:<YES>"
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testBug4944818",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2063)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testDoubleInlining2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testDoubleInlining2(InlineFunctionsTest.java:1109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testIssue1101",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testIssue1101(InlineFunctionsTest.java:2371)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineIfParametersModified8",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified8(InlineFunctionsTest.java:601)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineIfParametersModified9",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineIfParametersModified9(InlineFunctionsTest.java:606)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineFunctions6",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions6(InlineFunctionsTest.java:157)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 117,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeValidator.java": {
        "modified": [
          [
            725
          ],
          [
            756
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue1047",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12265)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12244)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12180)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue1047(TypeCheckTest.java:6852)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...p never defined on C[2]> but was:<...p never defined on C[3.c2_]>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 118,
    "changedFiles": {
      "com/google/javascript/jscomp/DisambiguateProperties.java": {
        "modified": [
          [
            495
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
        "methodName": "testOneType4",
        "stackTrace": [
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1372)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testOneType4(DisambiguatePropertiesTest.java:128)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[]}> but was:<{[a=[[Foo.prototype]]]}>"
      },
      {
        "className": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
        "methodName": "testTwoTypes4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1371)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoTypes4(DisambiguatePropertiesTest.java:258)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 119,
    "changedFiles": {
      "com/google/javascript/jscomp/GlobalNamespace.java": {
        "modified": [
          [
            366
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckGlobalNamesTest",
        "methodName": "testGlobalCatch",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:895)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:599)",
          "com.google.javascript.jscomp.CheckGlobalNamesTest.testGlobalCatch(CheckGlobalNamesTest.java:341)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected warning(s): JSC_UNDEFINED_NAME. e is never defined at testcode line 1 : 48"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 120,
    "changedFiles": {
      "com/google/javascript/jscomp/ReferenceCollectingCallback.java": {
        "modified": [
          [
            431
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testExternalIssue1053",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:599)",
          "com.google.javascript.jscomp.InlineVariablesTest.testExternalIssue1053(InlineVariablesTest.java:1069)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 121,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineVariables.java": {
        "modified": [
          [
            304
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testExternalIssue1053",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:599)",
          "com.google.javascript.jscomp.InlineVariablesTest.testExternalIssue1053(InlineVariablesTest.java:1069)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 122,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/IRFactory.java": {
        "modified": [
          [
            252
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testSuspiciousBlockCommentWarning3",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.parse(ParserTest.java:1163)",
          "com.google.javascript.jscomp.parsing.ParserTest.testSuspiciousBlockCommentWarning3(ParserTest.java:695)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testSuspiciousBlockCommentWarning4",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.parse(ParserTest.java:1163)",
          "com.google.javascript.jscomp.parsing.ParserTest.testSuspiciousBlockCommentWarning4(ParserTest.java:699)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testSuspiciousBlockCommentWarning5",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.parse(ParserTest.java:1163)",
          "com.google.javascript.jscomp.parsing.ParserTest.testSuspiciousBlockCommentWarning5(ParserTest.java:708)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 123,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            285
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testPrintInOperatorInForLoop",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:480)",
          "com.google.javascript.jscomp.CodePrinterTest.assertPrintSame(CodePrinterTest.java:485)",
          "com.google.javascript.jscomp.CodePrinterTest.testPrintInOperatorInForLoop(CodePrinterTest.java:471)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<for(a=c?0:[(0 in d)];;)foo()> but was:<for(a=c?0:[0 in d];;)foo()>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 124,
    "changedFiles": {
      "com/google/javascript/jscomp/ExploitAssigns.java": {
        "modified": [
          [
            213
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ExploitAssignsTest",
        "methodName": "testIssue1017",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:599)",
          "com.google.javascript.jscomp.ExploitAssignsTest.testIssue1017(ExploitAssignsTest.java:161)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 125,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            1661
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue1002",
        "stackTrace": [
          "com.google.common.base.Preconditions.checkState(Preconditions.java:133)",
          "com.google.javascript.rhino.jstype.FunctionType.getInstanceType(FunctionType.java:1071)",
          "com.google.javascript.jscomp.TypeCheck.visitNew(TypeCheck.java:1663)",
          "com.google.javascript.jscomp.TypeCheck.visit(TypeCheck.java:591)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:574)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:528)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseWithScope(NodeTraversal.java:353)",
          "com.google.javascript.jscomp.TypeCheck.check(TypeCheck.java:422)",
          "com.google.javascript.jscomp.TypeCheck.process(TypeCheck.java:393)",
          "com.google.javascript.jscomp.TypeCheck.processForTesting(TypeCheck.java:411)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheckWithScope(TypeCheckTest.java:12021)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheck(TypeCheckTest.java:11993)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11960)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11955)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11891)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11887)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue1002(TypeCheckTest.java:6741)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 126,
    "changedFiles": {
      "com/google/javascript/jscomp/MinimizeExitPoints.java": {
        "modified": [
          [
            141
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.MinimizeExitPointsTest",
        "methodName": "testDontRemoveBreakInTryFinally",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:582)",
          "com.google.javascript.jscomp.MinimizeExitPointsTest.foldSame(MinimizeExitPointsTest.java:47)",
          "com.google.javascript.jscomp.MinimizeExitPointsTest.testDontRemoveBreakInTryFinally(MinimizeExitPointsTest.java:276)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.MinimizeExitPointsTest",
        "methodName": "testFunctionReturnOptimization",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.MinimizeExitPointsTest.fold(MinimizeExitPointsTest.java:51)",
          "com.google.javascript.jscomp.MinimizeExitPointsTest.testFunctionReturnOptimization(MinimizeExitPointsTest.java:123)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 127,
    "changedFiles": {
      "com/google/javascript/jscomp/UnreachableCodeElimination.java": {
        "modified": [
          [
            170
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testIssue4177428_return",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testIssue4177428_return(UnreachableCodeEliminationTest.java:362)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testDontRemoveBreakInTryFinally",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:582)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testDontRemoveBreakInTryFinally(UnreachableCodeEliminationTest.java:417)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testIssue4177428_continue",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:582)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testIssue4177428_continue(UnreachableCodeEliminationTest.java:345)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testDontRemoveBreakInTryFinallySwitch",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:582)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testDontRemoveBreakInTryFinallySwitch(UnreachableCodeEliminationTest.java:421)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testIssue4177428a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:582)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testIssue4177428a(UnreachableCodeEliminationTest.java:288)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.UnreachableCodeEliminationTest",
        "methodName": "testIssue4177428c",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:928)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:460)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:386)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:355)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:343)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:582)",
          "com.google.javascript.jscomp.UnreachableCodeEliminationTest.testIssue4177428c(UnreachableCodeEliminationTest.java:325)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 128,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            785
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testIssue942",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:465)",
          "com.google.javascript.jscomp.CodePrinterTest.testIssue942(CodePrinterTest.java:1423)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x={[0]:1}> but was:<var x={[\"0\"]:1}>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 129,
    "changedFiles": {
      "com/google/javascript/jscomp/PrepareAst.java": {
        "modified": [
          [
            166
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.IntegrationTest",
        "methodName": "testIssue937",
        "stackTrace": [
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:97)",
          "com.google.javascript.jscomp.IntegrationTestCase.test(IntegrationTestCase.java:79)",
          "com.google.javascript.jscomp.IntegrationTest.testIssue937(IntegrationTest.java:2430)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 130,
    "changedFiles": {
      "com/google/javascript/jscomp/CollapseProperties.java": {
        "modified": [
          [
            172
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testIssue931",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:924)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:459)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:385)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:354)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:581)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testIssue931(CollapsePropertiesTest.java:1101)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 131,
    "changedFiles": {
      "com/google/javascript/rhino/TokenStream.java": {
        "modified": [
          [
            194
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ConvertToDottedPropertiesTest",
        "methodName": "testQuotedProps",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:924)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:459)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:385)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:354)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:581)",
          "com.google.javascript.jscomp.ConvertToDottedPropertiesTest.testQuotedProps(ConvertToDottedPropertiesTest.java:72)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ConvertToDottedPropertiesTest",
        "methodName": "testDoNotConvert",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:924)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:459)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:385)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:354)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:581)",
          "com.google.javascript.jscomp.ConvertToDottedPropertiesTest.testDoNotConvert(ConvertToDottedPropertiesTest.java:58)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 132,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": {
        "modified": [
          [
            782
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest",
        "methodName": "testIssue925",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:924)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:459)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:385)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:354)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:342)",
          "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testIssue925(PeepholeSubstituteAlternateSyntaxTest.java:967)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 133,
    "changedFiles": {
      "com/google/javascript/jscomp/parsing/JsDocInfoParser.java": {
        "modified": [
          [
            2401
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testTextExtents",
        "stackTrace": [
          "com.google.javascript.rhino.SourcePosition.setPositionInformation(SourcePosition.java:87)",
          "com.google.javascript.rhino.JSDocInfoBuilder.markText(JSDocInfoBuilder.java:172)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.extractMultilineTextualBlock(JsDocInfoParser.java:1503)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.extractMultilineTextualBlock(JsDocInfoParser.java:1379)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParser.parse(JsDocInfoParser.java:958)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:2984)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.parse(JsDocInfoParserTest.java:2961)",
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testTextExtents(JsDocInfoParserTest.java:2756)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Recorded bad position information"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 134,
    "changedFiles": {
      "com/google/javascript/jscomp/AmbiguateProperties.java": {
        "modified": [
          [
            210
          ],
          [
            356
          ],
          [
            366
          ],
          [
            553
          ],
          [
            594
          ]
        ]
      },
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            560
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.AmbiguatePropertiesTest",
        "methodName": "testImplementsAndExtends",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:745)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:338)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:268)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:237)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:225)",
          "com.google.javascript.jscomp.AmbiguatePropertiesTest.testImplementsAndExtends(AmbiguatePropertiesTest.java:431)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue86",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6659)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6639)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6592)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue86(TypeCheckTest.java:3907)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 135,
    "changedFiles": {
      "com/google/javascript/jscomp/DevirtualizePrototypeMethods.java": {
        "modified": [
          [
            362
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/FunctionType.java": {
        "modified": [
          [
            412
          ],
          [
            472
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest",
        "methodName": "testRewritePrototypeMethods2",
        "stackTrace": [
          "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest.checkTypes(DevirtualizePrototypeMethodsTest.java:545)",
          "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest.testRewritePrototypeMethods2(DevirtualizePrototypeMethodsTest.java:144)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[FUNCTION a = function (this:a): ?, NAME JSCompiler_StaticMethods_foo$self = a, FUNCTION JSCompiler_StaticMethods_foo = function (a): number, NAME JSCompiler_StaticMethods_bar$self = a, FUNCTION JSCompiler_StaticMethods_bar = function (a, number): number, FUNCTION JSCompiler_StaticMethods_baz = function (a): ?, NEW a = a, CALL JSCompiler_StaticMethods_foo = number, CALL JSCompiler_StaticMethods_bar = number, CALL JSCompiler_StaticMethods_baz = ?]> but was:<[FUNCTION a = function (this:a): ?, NAME JSCompiler_StaticMethods_foo$self = null, FUNCTION JSCompiler_StaticMethods_foo = function (a): number, NAME JSCompiler_StaticMethods_bar$self = null, FUNCTION JSCompiler_StaticMethods_bar = function (a, number): number, FUNCTION JSCompiler_StaticMethods_baz = function (a): ?, NEW a = a, CALL JSCompiler_StaticMethods_foo = number, CALL JSCompiler_StaticMethods_bar = number, CALL JSCompiler_StaticMethods_baz = ?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testGoodExtends9",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6872)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6846)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6799)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6795)",
          "com.google.javascript.jscomp.TypeCheckTest.testGoodExtends9(TypeCheckTest.java:2636)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 136,
    "changedFiles": {
      "com/google/javascript/jscomp/MethodCompilerPass.java": {
        "modified": [
          [
            102
          ]
        ]
      },
      "com/google/javascript/jscomp/RenameVars.java": {
        "modified": [
          [
            203
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineGettersTest",
        "methodName": "testIssue2508576_1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:786)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:544)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:525)",
          "com.google.javascript.jscomp.InlineGettersTest.testIssue2508576_1(InlineGettersTest.java:238)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[({a:alert,b:alert}).a(\"a\")]> but was:<[]>"
      },
      {
        "className": "com.google.javascript.jscomp.InlineGettersTest",
        "methodName": "testIssue2508576_3",
        "stackTrace": [
          "com.google.javascript.jscomp.MethodCompilerPass.addPossibleSignature(MethodCompilerPass.java:114)",
          "com.google.javascript.jscomp.MethodCompilerPass.access$300(MethodCompilerPass.java:38)",
          "com.google.javascript.jscomp.MethodCompilerPass$GatherSignatures.visit(MethodCompilerPass.java:236)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:477)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:470)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:470)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:470)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:470)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:470)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:279)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:435)",
          "com.google.javascript.jscomp.MethodCompilerPass.process(MethodCompilerPass.java:79)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:694)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.InlineGettersTest.testIssue2508576_3(InlineGettersTest.java:248)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      },
      {
        "className": "com.google.javascript.jscomp.MethodCheckTest",
        "methodName": "testSeparateMethods",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:486)",
          "com.google.javascript.jscomp.MethodCheckTest.testSame(MethodCheckTest.java:61)",
          "com.google.javascript.jscomp.MethodCheckTest.testSeparateMethods(MethodCheckTest.java:101)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_WRONG_ARGUMENT_COUNT. Function oneOrTwoArg2: called with 3 argument(s). All definitions of this function require at least 1 argument(s) and no more than 2 argument(s). at testcode line 1 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.RenameVarsTest",
        "methodName": "testDollarSignSuperExport2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.RenameVarsTest.testDollarSignSuperExport2(RenameVarsTest.java:465)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 137,
    "changedFiles": {
      "com/google/javascript/jscomp/MakeDeclaredNamesUnique.java": {
        "modified": [
          [
            26
          ],
          [
            48
          ],
          [
            235
          ],
          [
            266
          ],
          [
            392
          ],
          [
            401
          ],
          [
            462
          ]
        ]
      },
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            1043
          ]
        ]
      },
      "com/google/javascript/jscomp/Normalize.java": {
        "modified": [
          [
            82
          ],
          [
            102
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest",
        "methodName": "testOnlyInversion3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testOnlyInversion3(MakeDeclaredNamesUniqueTest.java:282)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest",
        "methodName": "testOnlyInversion4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testOnlyInversion4(MakeDeclaredNamesUniqueTest.java:305)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest",
        "methodName": "testArguments",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:544)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:525)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testSameWithInversion(MakeDeclaredNamesUniqueTest.java:82)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testSameWithInversion(MakeDeclaredNamesUniqueTest.java:89)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testArguments(MakeDeclaredNamesUniqueTest.java:210)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest",
        "methodName": "testMakeLocalNamesUniqueWithContext1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext1(MakeDeclaredNamesUniqueTest.java:112)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testRemoveDuplicateVarDeclarations2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.NormalizeTest.testRemoveDuplicateVarDeclarations2(NormalizeTest.java:204)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 138,
    "changedFiles": {
      "com/google/javascript/jscomp/ClosureReverseAbstractInterpreter.java": {
        "modified": [
          [
            208
          ],
          [
            218
          ]
        ]
      },
      "com/google/javascript/jscomp/TypeInference.java": {
        "modified": [
          [
            632
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
        "methodName": "testGoogIsArrayOnNull",
        "stackTrace": [
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testClosureFunction(ClosureReverseAbstractInterpreterTest.java:164)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsArrayOnNull(ClosureReverseAbstractInterpreterTest.java:125)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Array> but was:<null>"
      },
      {
        "className": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
        "methodName": "testGoogIsFunctionOnNull",
        "stackTrace": [
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testClosureFunction(ClosureReverseAbstractInterpreterTest.java:164)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsFunctionOnNull(ClosureReverseAbstractInterpreterTest.java:132)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Function> but was:<null>"
      },
      {
        "className": "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest",
        "methodName": "testGoogIsObjectOnNull",
        "stackTrace": [
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testClosureFunction(ClosureReverseAbstractInterpreterTest.java:164)",
          "com.google.javascript.jscomp.ClosureReverseAbstractInterpreterTest.testGoogIsObjectOnNull(ClosureReverseAbstractInterpreterTest.java:139)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Object> but was:<null>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue124b",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6916)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6895)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6848)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue124b(TypeCheckTest.java:4155)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...tes to false"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue124",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6921)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6895)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6848)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6844)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue124(TypeCheckTest.java:4146)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 139,
    "changedFiles": {
      "com/google/javascript/jscomp/Normalize.java": {
        "modified": [
          [
            281
          ],
          [
            292
          ],
          [
            309
          ],
          [
            521
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testNormalizeFunctionDeclarations",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.NormalizeTest.testNormalizeFunctionDeclarations(NormalizeTest.java:167)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testRemoveDuplicateVarDeclarations3",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:712)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.NormalizeTest.testRemoveDuplicateVarDeclarations3(NormalizeTest.java:255)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_VAR_MULTIPLY_DECLARED_ERROR. Variable f first declared in testcode at testcode line 1 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testMoveFunctions2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.NormalizeTest.testMoveFunctions2(NormalizeTest.java:141)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 140,
    "changedFiles": {
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            264
          ],
          [
            328
          ],
          [
            1582
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CrossModuleCodeMotionTest",
        "methodName": "testEmptyModule",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:771)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:622)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:458)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:445)",
          "com.google.javascript.jscomp.CrossModuleCodeMotionTest.testEmptyModule(CrossModuleCodeMotionTest.java:678)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compiler.reportCodeChange() was called even though nothing changed"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 141,
    "changedFiles": {
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            602
          ]
        ]
      },
      "com/google/javascript/jscomp/PureFunctionIdentifier.java": {
        "modified": [
          [
            177
          ],
          [
            198
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ExpresssionDecomposerTest",
        "methodName": "testCanExposeExpression2",
        "stackTrace": [
          "com.google.javascript.jscomp.ExpresssionDecomposerTest.helperCanExposeExpression(ExpresssionDecomposerTest.java:388)",
          "com.google.javascript.jscomp.ExpresssionDecomposerTest.helperCanExposeExpression(ExpresssionDecomposerTest.java:334)",
          "com.google.javascript.jscomp.ExpresssionDecomposerTest.testCanExposeExpression2(ExpresssionDecomposerTest.java:85)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<MOVABLE> but was:<DECOMPOSABLE>"
      },
      {
        "className": "com.google.javascript.jscomp.ExpresssionDecomposerTest",
        "methodName": "testCanExposeExpression7",
        "stackTrace": [
          "com.google.javascript.jscomp.ExpresssionDecomposerTest.helperCanExposeAnonymousFunctionExpression(ExpresssionDecomposerTest.java:358)",
          "com.google.javascript.jscomp.ExpresssionDecomposerTest.testCanExposeExpression7(ExpresssionDecomposerTest.java:138)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<MOVABLE> but was:<DECOMPOSABLE>"
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testDecomposeAnonymousInCall",
        "stackTrace": [
          "com.google.javascript.jscomp.InlineFunctions.verifyAllReferencesInlined(InlineFunctions.java:754)",
          "com.google.javascript.jscomp.InlineFunctions.removeInlinedFunctions(InlineFunctions.java:740)",
          "com.google.javascript.jscomp.InlineFunctions.process(InlineFunctions.java:143)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:694)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeAnonymousInCall(InlineFunctionsTest.java:1337)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Call site missed."
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testCallFunctionFOrGViaHookWithSideEffects",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:686)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testCallFunctionFOrGViaHookWithSideEffects(PureFunctionIdentifierTest.java:654)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[(g : g), k]> but was:<[]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testCallFunctionForGorH",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:686)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testCallFunctionForGorH(PureFunctionIdentifierTest.java:628)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[(f : (g || h)), i]> but was:<[]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testCallFunctionFOrG",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:686)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testCallFunctionFOrG(PureFunctionIdentifierTest.java:609)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[(f || g), h]> but was:<[]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testCallFunctionFOrGViaHook",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:686)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testCallFunctionFOrGViaHook(PureFunctionIdentifierTest.java:618)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[(f : g), h]> but was:<[]>"
      },
      {
        "className": "com.google.javascript.jscomp.PureFunctionIdentifierTest",
        "methodName": "testCallFunctionFOrGWithSideEffects",
        "stackTrace": [
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.checkMarkedCalls(PureFunctionIdentifierTest.java:686)",
          "com.google.javascript.jscomp.PureFunctionIdentifierTest.testCallFunctionFOrGWithSideEffects(PureFunctionIdentifierTest.java:641)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[(g || g), k]> but was:<[]>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 142,
    "changedFiles": {
      "com/google/javascript/jscomp/CoalesceVariableNames.java": {
        "modified": [
          [
            108
          ]
        ]
      },
      "com/google/javascript/jscomp/parsing/JsDocInfoParser.java": {
        "modified": [
          [
            1168
          ],
          [
            1183
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CoalesceVariableNamesTest",
        "methodName": "testParameter4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.CoalesceVariableNamesTest.testParameter4(CoalesceVariableNamesTest.java:191)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.parsing.JsDocInfoParserTest",
        "methodName": "testParseLicenseWithAnnotation",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.JsDocInfoParserTest.testParseLicenseWithAnnotation(JsDocInfoParserTest.java:1078)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:< Foo"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 143,
    "changedFiles": {
      "com/google/javascript/jscomp/AbstractCommandLineRunner.java": {
        "modified": [
          [
            871
          ]
        ]
      },
      "com/google/javascript/jscomp/RemoveConstantExpressions.java": {
        "modified": [
          [
            91
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testDefineFlag3",
        "stackTrace": [
          "com.google.javascript.jscomp.AbstractCommandLineRunner.createDefineReplacements(AbstractCommandLineRunner.java:892)",
          "com.google.javascript.jscomp.AbstractCommandLineRunner.initOptionsFromFlags(AbstractCommandLineRunner.java:138)",
          "com.google.javascript.jscomp.CommandLineRunner.createOptions(CommandLineRunner.java:437)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:309)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:254)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:246)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testDefineFlag3(CommandLineRunnerTest.java:143)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "--define flag syntax invalid: FOO=\"x'\""
      },
      {
        "className": "com.google.javascript.jscomp.RemoveConstantExpressionsTest",
        "methodName": "testCall1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.RemoveConstantExpressionsTest.testCall1(RemoveConstantExpressionsTest.java:282)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.RemoveConstantExpressionsTest",
        "methodName": "testNew1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:782)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:302)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:271)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:259)",
          "com.google.javascript.jscomp.RemoveConstantExpressionsTest.testNew1(RemoveConstantExpressionsTest.java:290)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 144,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionTypeBuilder.java": {
        "modified": [
          [
            74
          ],
          [
            200
          ],
          [
            213
          ],
          [
            496
          ]
        ]
      },
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            577
          ],
          [
            617
          ],
          [
            634
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/FunctionBuilder.java": {
        "modified": [
          [
            101
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/FunctionType.java": {
        "modified": [
          [
            517
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsAssign",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsAssign(CodePrinterTest.java:613)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</**"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsMember",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsMember(CodePrinterTest.java:651)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a = {};"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testOptionalTypesAnnotation",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testOptionalTypesAnnotation(CodePrinterTest.java:753)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...param {string=} x"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTempConstructor",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTempConstructor(CodePrinterTest.java:779)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</**"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsDispatcher1",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsDispatcher1(CodePrinterTest.java:692)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a = {};"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsDispatcher2",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsDispatcher2(CodePrinterTest.java:710)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a = {};"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsImplements",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsImplements(CodePrinterTest.java:671)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a = {};"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsNamespace",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsNamespace(CodePrinterTest.java:619)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a = {};"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotations",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotations(CodePrinterTest.java:606)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</**"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testVariableArgumentsTypesAnnotation",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testVariableArgumentsTypesAnnotation(CodePrinterTest.java:766)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ram {...string} x"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testEmitUnknownParamTypesAsAllType",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testEmitUnknownParamTypesAsAllType(CodePrinterTest.java:743)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...*"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testTypeAnnotationsMemberSubclass",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertTypeAnnotations(CodePrinterTest.java:799)",
          "com.google.javascript.jscomp.CodePrinterTest.testTypeAnnotationsMemberSubclass(CodePrinterTest.java:627)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a = {};"
      },
      {
        "className": "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest",
        "methodName": "testRewritePrototypeMethods2",
        "stackTrace": [
          "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest.checkTypes(DevirtualizePrototypeMethodsTest.java:546)",
          "com.google.javascript.jscomp.DevirtualizePrototypeMethodsTest.testRewritePrototypeMethods2(DevirtualizePrototypeMethodsTest.java:145)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[FUNCTION a = function (this:a): undefined, NAME JSCompiler_StaticMethods_foo$self = a, FUNCTION JSCompiler_StaticMethods_foo = function (a): number, NAME JSCompiler_StaticMethods_bar$self = a, FUNCTION JSCompiler_StaticMethods_bar = function (a, number): number, FUNCTION JSCompiler_StaticMethods_baz = function (a): undefined, NEW a = a, CALL JSCompiler_StaticMethods_foo = number, CALL JSCompiler_StaticMethods_bar = number, CALL JSCompiler_StaticMethods_baz = undefined]> but was:<[FUNCTION a = function (this:a): ?, NAME JSCompiler_StaticMethods_foo$self = a, FUNCTION JSCompiler_StaticMethods_foo = function (a): number, NAME JSCompiler_StaticMethods_bar$self = a, FUNCTION JSCompiler_StaticMethods_bar = function (a, number): number, FUNCTION JSCompiler_StaticMethods_baz = function (a): ?, NEW a = a, CALL JSCompiler_StaticMethods_foo = number, CALL JSCompiler_StaticMethods_bar = number, CALL JSCompiler_StaticMethods_baz = ?]>"
      },
      {
        "className": "com.google.javascript.jscomp.DisambiguatePropertiesTest",
        "methodName": "testStaticProperty",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:795)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:999)",
          "com.google.javascript.jscomp.DisambiguatePropertiesTest.testStaticProperty(DisambiguatePropertiesTest.java:301)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportDontEmitPrototypePathPrefix",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportDontEmitPrototypePathPrefix(ExternExportsPassTest.java:293)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</**"
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportMultiple",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportMultiple(ExternExportsPassTest.java:88)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<..."
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportSymbolWithConstructor",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportSymbolWithConstructor(ExternExportsPassTest.java:223)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</**"
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportSymbolDefinedInVar",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportSymbolDefinedInVar(ExternExportsPassTest.java:62)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...e"
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportSymbol",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportSymbol(ExternExportsPassTest.java:50)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...e"
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportMultiple2",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportMultiple2(ExternExportsPassTest.java:118)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...e"
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportMultiple3",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportMultiple3(ExternExportsPassTest.java:144)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<..."
      },
      {
        "className": "com.google.javascript.jscomp.ExternExportsPassTest",
        "methodName": "testExportProperty",
        "stackTrace": [
          "com.google.javascript.jscomp.ExternExportsPassTest.compileAndCheck(ExternExportsPassTest.java:386)",
          "com.google.javascript.jscomp.ExternExportsPassTest.testExportProperty(ExternExportsPassTest.java:74)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...e"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testNestedFunctionInference1",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testNestedFunctionInference1(LooseTypeCheckTest.java:2066)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (this:f): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testScoping10",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testScoping10(LooseTypeCheckTest.java:1252)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testDuplicateOldTypeDef",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testDuplicateOldTypeDef(LooseTypeCheckTest.java:6351)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...on (this:goog.Bar): [undefined]> but was:<...on (this:goog.Bar): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testBadConstructorCall",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testBadConstructorCall(LooseTypeCheckTest.java:4998)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...unction (this:Foo): [undefined] should be called wi...> but was:<...unction (this:Foo): [?] should be called wi...>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testDontAddMethodsIfNoConstructor",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testDontAddMethodsIfNoConstructor(LooseTypeCheckTest.java:5316)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testInterfaceInheritanceCheck11",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testInterfaceInheritanceCheck11(LooseTypeCheckTest.java:5567)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...his:Super, number): [undefined"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testErrorMismatchingPropertyOnInterface5",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testErrorMismatchingPropertyOnInterface5(LooseTypeCheckTest.java:5960)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testDuplicateTypeDef",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testDuplicateTypeDef(LooseTypeCheckTest.java:6399)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...on (this:goog.Bar): [undefined]> but was:<...on (this:goog.Bar): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testBug911118",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testBug911118(LooseTypeCheckTest.java:4270)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference12",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference12(LooseTypeCheckTest.java:1463)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference13",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference13(LooseTypeCheckTest.java:1471)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...unction (goog.Foo): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference15",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference15(LooseTypeCheckTest.java:1489)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (this:f): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference16",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference16(LooseTypeCheckTest.java:1497)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (this:f): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testPrototypePropertyReference",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testPrototypePropertyReference(LooseTypeCheckTest.java:6504)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...(this:Foo, number): [undefined]> but was:<...(this:Foo, number): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testGoodExtends7",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testGoodExtends7(LooseTypeCheckTest.java:2671)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ion (this:derived): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testTypeRedefinition",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypeRedefinition(LooseTypeCheckTest.java:2095)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...unction (this:a.A): [undefined], original definitio...> but was:<...unction (this:a.A): [?], original definitio...>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference1",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference1(LooseTypeCheckTest.java:1394)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...d   : function (?): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference2",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference2(LooseTypeCheckTest.java:1400)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... : function (?, ?): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference3",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference3(LooseTypeCheckTest.java:1406)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (...[?]): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference4",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference4(LooseTypeCheckTest.java:1412)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... (?, ?, ?, ...[?]): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference7",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference7(LooseTypeCheckTest.java:1430)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<..., ?, ?, ?, ...[?]): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference8",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference8(LooseTypeCheckTest.java:1436)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testFunctionInference9",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2086)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionType(LooseTypeCheckTest.java:2076)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testFunctionInference9(LooseTypeCheckTest.java:1442)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testInterfaceInheritanceCheck7",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testInterfaceInheritanceCheck7(LooseTypeCheckTest.java:5707)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...his:Super, number): [undefined"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testDuplicateStaticMethodDecl1",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testDuplicateStaticMethodDecl1(LooseTypeCheckTest.java:1851)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (number): [undefined, original definition at [testcode]:1 with type function (number): undefined]> but was:<... function (number): [?, original definition at [testcode]:1 with type function (number): ?]>"
      },
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testDuplicateStaticMethodDecl5",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6969)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6948)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6901)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testDuplicateStaticMethodDecl5(LooseTypeCheckTest.java:1883)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... type function (?): [undefined]> but was:<... type function (?): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testNestedFunctionInference1",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testNestedFunctionInference1(TypeCheckTest.java:2042)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (this:f): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testScoping10",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testScoping10(TypeCheckTest.java:1232)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testDuplicateOldTypeDef",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testDuplicateOldTypeDef(TypeCheckTest.java:6421)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...on (this:goog.Bar): [undefined]> but was:<...on (this:goog.Bar): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInferredReturn1",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7043)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInferredReturn1(TypeCheckTest.java:3695)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInferredReturn2",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7043)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInferredReturn2(TypeCheckTest.java:3704)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInferredReturn3",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7043)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInferredReturn3(TypeCheckTest.java:3715)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInferredReturn4",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7043)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInferredReturn4(TypeCheckTest.java:3731)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInferredReturn6",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7043)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInferredReturn6(TypeCheckTest.java:3754)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBadConstructorCall",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testBadConstructorCall(TypeCheckTest.java:5068)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...unction (this:Foo): [undefined] should be called wi...> but was:<...unction (this:Foo): [?] should be called wi...>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testDontAddMethodsIfNoConstructor",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testDontAddMethodsIfNoConstructor(TypeCheckTest.java:5386)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInterfaceInheritanceCheck11",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInterfaceInheritanceCheck11(TypeCheckTest.java:5637)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...his:Super, number): [undefined"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testErrorMismatchingPropertyOnInterface5",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testErrorMismatchingPropertyOnInterface5(TypeCheckTest.java:6030)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testDuplicateTypeDef",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testDuplicateTypeDef(TypeCheckTest.java:6469)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...on (this:goog.Bar): [undefined]> but was:<...on (this:goog.Bar): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBug911118",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testBug911118(TypeCheckTest.java:4340)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference12",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference12(TypeCheckTest.java:1443)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference13",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference13(TypeCheckTest.java:1451)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...unction (goog.Foo): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference15",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference15(TypeCheckTest.java:1469)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (this:f): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference16",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference16(TypeCheckTest.java:1477)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (this:f): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testPrototypePropertyReference",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testPrototypePropertyReference(TypeCheckTest.java:6574)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...(this:Foo, number): [undefined]> but was:<...(this:Foo, number): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testGoodExtends7",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testGoodExtends7(TypeCheckTest.java:2647)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ion (this:derived): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testTypeRedefinition",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypeRedefinition(TypeCheckTest.java:2071)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...unction (this:a.A): [undefined], original definitio...> but was:<...unction (this:a.A): [?], original definitio...>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference1",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference1(TypeCheckTest.java:1374)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...d   : function (?): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference2",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference2(TypeCheckTest.java:1380)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... : function (?, ?): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference3",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference3(TypeCheckTest.java:1386)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (...[?]): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference4",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference4(TypeCheckTest.java:1392)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... (?, ?, ?, ...[?]): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference7",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference7(TypeCheckTest.java:1410)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<..., ?, ?, ?, ...[?]): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference8",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference8(TypeCheckTest.java:1416)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testFunctionInference9",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2062)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionType(TypeCheckTest.java:2052)",
          "com.google.javascript.jscomp.TypeCheckTest.testFunctionInference9(TypeCheckTest.java:1422)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...nd   : function (): [undefined]"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInterfaceInheritanceCheck7",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testInterfaceInheritanceCheck7(TypeCheckTest.java:5777)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...his:Super, number): [undefined"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testDuplicateStaticMethodDecl1",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testDuplicateStaticMethodDecl1(TypeCheckTest.java:1831)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... function (number): [undefined, original definition at [testcode]:1 with type function (number): undefined]> but was:<... function (number): [?, original definition at [testcode]:1 with type function (number): ?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testDuplicateStaticMethodDecl5",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7044)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7023)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:6976)",
          "com.google.javascript.jscomp.TypeCheckTest.testDuplicateStaticMethodDecl5(TypeCheckTest.java:1862)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... type function (?): [undefined]> but was:<... type function (?): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testConstructorNode",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testConstructorNode(TypedScopeCreatorTest.java:555)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...on (this:goog.Foo): [undefined]> but was:<...on (this:goog.Foo): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testPropertiesOnInterface",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testPropertiesOnInterface(TypedScopeCreatorTest.java:345)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (this:I): [undefined]> but was:<function (this:I): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testMethodBeforeFunction",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testMethodBeforeFunction(TypedScopeCreatorTest.java:264)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...n (this:Window, ?): [undefined]> but was:<...n (this:Window, ?): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testConstructorProperty",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testConstructorProperty(TypedScopeCreatorTest.java:103)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ion (this:foo.Bar): [undefined]> but was:<...ion (this:foo.Bar): [?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testReturnTypeInference1",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testReturnTypeInference1(TypedScopeCreatorTest.java:690)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<function (): [undefined]> but was:<function (): [?]>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 145,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            709
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testFunctionSafariCompatiblity",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:342)",
          "com.google.javascript.jscomp.CodePrinterTest.testFunctionSafariCompatiblity(CodePrinterTest.java:958)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<if(e1)[{A:function goo(){return true}]}> but was:<if(e1)[A:function goo(){return true]}>"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testDoLoopIECompatiblity",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:342)",
          "com.google.javascript.jscomp.CodePrinterTest.testDoLoopIECompatiblity(CodePrinterTest.java:937)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<if(x)[{A:do foo();while(y)}]> but was:<if(x)[A:do foo();while(y)]>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 146,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/JSType.java": {
        "modified": [
          [
            706
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest",
        "methodName": "testEqCondition4",
        "stackTrace": [
          "com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testBinop(SemanticReverseAbstractInterpreterTest.java:536)",
          "com.google.javascript.jscomp.SemanticReverseAbstractInterpreterTest.testEqCondition4(SemanticReverseAbstractInterpreterTest.java:341)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<None> but was:<undefined>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 147,
    "changedFiles": {
      "com/google/javascript/jscomp/CheckGlobalThis.java": {
        "modified": [
          [
            108
          ]
        ]
      },
      "com/google/javascript/jscomp/RuntimeTypeCheck.java": {
        "modified": [
          [
            247
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testIssue182a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:832)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testIssue182a(CheckGlobalThisTest.java:208)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.CheckGlobalThisTest",
        "methodName": "testIssue182b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:832)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testFailure(CheckGlobalThisTest.java:36)",
          "com.google.javascript.jscomp.CheckGlobalThisTest.testIssue182b(CheckGlobalThisTest.java:212)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "There should be one error.  expected:<1> but was:<0>"
      },
      {
        "className": "com.google.javascript.jscomp.RuntimeTypeCheckTest",
        "methodName": "testValueWithInnerFn",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:792)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.RuntimeTypeCheckTest.testChecks(RuntimeTypeCheckTest.java:252)",
          "com.google.javascript.jscomp.RuntimeTypeCheckTest.testValueWithInnerFn(RuntimeTypeCheckTest.java:62)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 148,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeFoldConstants.java": {
        "modified": [
          [
            182
          ]
        ]
      },
      "com/google/javascript/jscomp/SourceMap.java": {
        "modified": [
          [
            41
          ],
          [
            50
          ],
          [
            85
          ],
          [
            143
          ],
          [
            163
          ],
          [
            203
          ],
          [
            257
          ],
          [
            304
          ],
          [
            326
          ],
          [
            360
          ],
          [
            373
          ],
          [
            405
          ],
          [
            426
          ],
          [
            441
          ],
          [
            496
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testFoldTypeof",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:792)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:301)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:270)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:258)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.fold(PeepholeFoldConstantsTest.java:58)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testFoldTypeof(PeepholeFoldConstantsTest.java:552)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.SourceMapTest",
        "methodName": "testGoldenOutput0",
        "stackTrace": [
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:213)",
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:201)",
          "com.google.javascript.jscomp.SourceMapTest.testGoldenOutput0(SourceMapTest.java:76)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ng definitions. **/"
      },
      {
        "className": "com.google.javascript.jscomp.SourceMapTest",
        "methodName": "testGoldenOutput1",
        "stackTrace": [
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:213)",
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:201)",
          "com.google.javascript.jscomp.SourceMapTest.testGoldenOutput1(SourceMapTest.java:90)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ode\", \"count\": 1 }"
      },
      {
        "className": "com.google.javascript.jscomp.SourceMapTest",
        "methodName": "testGoldenOutput2",
        "stackTrace": [
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:213)",
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:201)",
          "com.google.javascript.jscomp.SourceMapTest.testGoldenOutput2(SourceMapTest.java:118)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ode\", \"count\": 1 }"
      },
      {
        "className": "com.google.javascript.jscomp.SourceMapTest",
        "methodName": "testGoldenOutput3",
        "stackTrace": [
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:213)",
          "com.google.javascript.jscomp.SourceMapTest.testGoldenOutput3(SourceMapTest.java:147)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ode\", \"count\": 1 }"
      },
      {
        "className": "com.google.javascript.jscomp.SourceMapTest",
        "methodName": "testGoldenOutput4",
        "stackTrace": [
          "com.google.javascript.jscomp.SourceMapTest.checkSourceMap(SourceMapTest.java:213)",
          "com.google.javascript.jscomp.SourceMapTest.testGoldenOutput4(SourceMapTest.java:162)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ode\", \"count\": 1 }"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 149,
    "changedFiles": {
      "com/google/javascript/jscomp/AbstractCommandLineRunner.java": {
        "modified": [
          [
            159
          ],
          [
            518
          ],
          [
            693
          ]
        ]
      },
      "com/google/javascript/jscomp/CommandLineRunner.java": {
        "modified": [
          [
            471
          ]
        ]
      },
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            1362
          ]
        ]
      },
      "com/google/javascript/jscomp/CompilerOptions.java": {
        "modified": [
          [
            588
          ],
          [
            960
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testCharSetExpansion",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.testCharSetExpansion(CommandLineRunnerTest.java:385)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<US-ASCII> but was:<null>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 150,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1451
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testNamespacedFunctionStubLocal",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testNamespacedFunctionStubLocal(TypedScopeCreatorTest.java:251)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testCollectedFunctionStubLocal",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testCollectedFunctionStubLocal(TypedScopeCreatorTest.java:222)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 151,
    "changedFiles": {
      "com/google/javascript/jscomp/CommandLineRunner.java": {
        "modified": [
          [
            301
          ],
          [
            367
          ],
          [
            418
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testVersionFlag",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.compile(CommandLineRunnerTest.java:570)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:490)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:479)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:467)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testSame(CommandLineRunnerTest.java:463)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testVersionFlag(CommandLineRunnerTest.java:451)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 152,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/FunctionType.java": {
        "modified": [
          [
            871
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBackwardsTypedefUse1",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.FunctionType.resolveInternal(FunctionType.java:871)",
          "com.google.javascript.rhino.jstype.JSType.resolve(JSType.java:894)",
          "com.google.javascript.jscomp.TypedScopeCreator$DeferredSetType.resolve(TypedScopeCreator.java:146)",
          "com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.resolveTypes(TypedScopeCreator.java:367)",
          "com.google.javascript.jscomp.TypedScopeCreator.createScope(TypedScopeCreator.java:188)",
          "com.google.javascript.jscomp.MemoizedScopeCreator.createScope(MemoizedScopeCreator.java:53)",
          "com.google.javascript.jscomp.TypeCheck.processForTesting(TypeCheck.java:354)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheckWithScope(TypeCheckTest.java:7676)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheck(TypeCheckTest.java:7649)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7616)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7611)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7555)",
          "com.google.javascript.jscomp.TypeCheckTest.testBackwardsTypedefUse1(TypeCheckTest.java:2610)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "com.google.javascript.rhino.jstype.StringType cannot be cast to com.google.javascript.rhino.jstype.ObjectType"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBackwardsTypedefUse2",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.FunctionType.resolveInternal(FunctionType.java:871)",
          "com.google.javascript.rhino.jstype.JSType.resolve(JSType.java:894)",
          "com.google.javascript.jscomp.TypedScopeCreator$DeferredSetType.resolve(TypedScopeCreator.java:146)",
          "com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.resolveTypes(TypedScopeCreator.java:367)",
          "com.google.javascript.jscomp.TypedScopeCreator.createScope(TypedScopeCreator.java:188)",
          "com.google.javascript.jscomp.MemoizedScopeCreator.createScope(MemoizedScopeCreator.java:53)",
          "com.google.javascript.jscomp.TypeCheck.processForTesting(TypeCheck.java:354)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheckWithScope(TypeCheckTest.java:7676)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheck(TypeCheckTest.java:7649)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7616)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7611)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7555)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7551)",
          "com.google.javascript.jscomp.TypeCheckTest.testBackwardsTypedefUse2(TypeCheckTest.java:2618)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.ObjectType"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testBackwardsTypedefUse3",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.FunctionType.resolveInternal(FunctionType.java:871)",
          "com.google.javascript.rhino.jstype.JSType.resolve(JSType.java:894)",
          "com.google.javascript.jscomp.TypedScopeCreator$DeferredSetType.resolve(TypedScopeCreator.java:146)",
          "com.google.javascript.jscomp.TypedScopeCreator$AbstractScopeBuilder.resolveTypes(TypedScopeCreator.java:367)",
          "com.google.javascript.jscomp.TypedScopeCreator.createScope(TypedScopeCreator.java:188)",
          "com.google.javascript.jscomp.MemoizedScopeCreator.createScope(MemoizedScopeCreator.java:53)",
          "com.google.javascript.jscomp.TypeCheck.processForTesting(TypeCheck.java:354)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheckWithScope(TypeCheckTest.java:7676)",
          "com.google.javascript.jscomp.TypeCheckTest.parseAndTypeCheck(TypeCheckTest.java:7649)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7616)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7611)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:7555)",
          "com.google.javascript.jscomp.TypeCheckTest.testBackwardsTypedefUse3(TypeCheckTest.java:2624)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.ObjectType"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 153,
    "changedFiles": {
      "com/google/javascript/jscomp/Normalize.java": {
        "modified": [
          [
            631
          ],
          [
            638
          ],
          [
            669
          ],
          [
            681
          ]
        ]
      },
      "com/google/javascript/jscomp/SyntacticScopeCreator.java": {
        "modified": [
          [
            23
          ],
          [
            95
          ],
          [
            103
          ],
          [
            125
          ],
          [
            142
          ],
          [
            154
          ],
          [
            180
          ],
          [
            189
          ],
          [
            235
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testDuplicateVarInExterns",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:345)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:322)",
          "com.google.javascript.jscomp.NormalizeTest.testDuplicateVarInExterns(NormalizeTest.java:95)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.NormalizeTest",
        "methodName": "testMakeLocalNamesUnique",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:797)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:377)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:306)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:275)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:263)",
          "com.google.javascript.jscomp.NormalizeTest.testMakeLocalNamesUnique(NormalizeTest.java:259)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 154,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeCheck.java": {
        "modified": [
          [
            185
          ],
          [
            242
          ],
          [
            1049
          ]
        ]
      },
      "com/google/javascript/jscomp/TypeValidator.java": {
        "modified": [
          [
            110
          ],
          [
            117
          ],
          [
            588
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testInterfaceInheritanceCheck12",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8391)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8371)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:8312)",
          "com.google.javascript.jscomp.TypeCheckTest.testInterfaceInheritanceCheck12(TypeCheckTest.java:6717)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 155,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineVariables.java": {
        "modified": [
          [
            199
          ],
          [
            220
          ],
          [
            275
          ]
        ]
      },
      "com/google/javascript/jscomp/ReferenceCollectingCallback.java": {
        "modified": [
          [
            123
          ]
        ]
      },
      "com/google/javascript/jscomp/Scope.java": {
        "modified": [
          [
            63
          ],
          [
            290
          ],
          [
            459
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testArgumentsModifiedInInnerFunction",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.InlineVariablesTest.testArgumentsModifiedInInnerFunction(InlineVariablesTest.java:1035)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testArgumentsModifiedInOuterFunction",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.InlineVariablesTest.testArgumentsModifiedInOuterFunction(InlineVariablesTest.java:1014)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testIssue378ModifiedArguments1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.InlineVariablesTest.testIssue378ModifiedArguments1(InlineVariablesTest.java:915)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testIssue378ModifiedArguments2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.InlineVariablesTest.testIssue378ModifiedArguments2(InlineVariablesTest.java:924)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testIssue378EscapedArguments1",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.InlineVariablesTest.testIssue378EscapedArguments1(InlineVariablesTest.java:934)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testIssue378EscapedArguments2",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.InlineVariablesTest.testIssue378EscapedArguments2(InlineVariablesTest.java:946)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineVariablesTest",
        "methodName": "testIssue378EscapedArguments4",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.InlineVariablesTest.testIssue378EscapedArguments4(InlineVariablesTest.java:970)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 156,
    "changedFiles": {
      "com/google/javascript/jscomp/CollapseProperties.java": {
        "modified": [
          [
            455
          ],
          [
            574
          ],
          [
            589
          ],
          [
            609
          ],
          [
            653
          ],
          [
            699
          ],
          [
            742
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testAliasedTopLevelEnum",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasedTopLevelEnum(CollapsePropertiesTest.java:1309)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "methodName": "testIssue389",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:843)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CollapsePropertiesTest.testIssue389(CollapsePropertiesTest.java:1275)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 157,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            343
          ],
          [
            654
          ],
          [
            724
          ]
        ]
      },
      "com/google/javascript/jscomp/RenamePrototypes.java": {
        "modified": [
          [
            336
          ],
          [
            377
          ]
        ]
      },
      "com/google/javascript/jscomp/parsing/IRFactory.java": {
        "modified": [
          [
            255
          ],
          [
            347
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testObjectLit2",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:386)",
          "com.google.javascript.jscomp.CodePrinterTest.testObjectLit2(CodePrinterTest.java:1127)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x={[1]:1}> but was:<var x={[\"1\"]:1}>"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testObjectLit3",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:386)",
          "com.google.javascript.jscomp.CodePrinterTest.testObjectLit3(CodePrinterTest.java:1136)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x={[3E9]:1}> but was:<var x={[\"3000000000\"]:1}>"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testGetter",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:386)",
          "com.google.javascript.jscomp.CodePrinterTest.testGetter(CodePrinterTest.java:1153)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x={get [\"a\"](){return 1}}> but was:<var x={get [a](){return 1}}>"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testSetter",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:386)",
          "com.google.javascript.jscomp.CodePrinterTest.testSetter(CodePrinterTest.java:1172)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var x={get [\"a\"](){return 1}}> but was:<var x={get [a](){return 1}}>"
      },
      {
        "className": "com.google.javascript.jscomp.FunctionNamesTest",
        "methodName": "testFunctionsNamesAndIds",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionNamesTest.testFunctionsNamesAndIds(FunctionNamesTest.java:91)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Function id/name mismatch expected:<{0=goog.widget.member_fn, 1=goog.widget::local_fn, 2=goog.widget::<anonymous>, 3=goog.widget, 4=foo::bar, 5=foo, 6=literal.f1, 7=literal.f2, 8=named, 9=<anonymous>, 10=quax, 11=recliteral.l1.l2, 12=litnamed, 13=reclitnamed, 14=numliteral.__2, 15=recnumliteral.__3.a}> but was:<{0=goog.widget.member_fn, 1=goog.widget::local_fn, 2=goog.widget::<anonymous>, 3=goog.widget, 4=foo::bar, 5=foo, 6=literal.f1, 7=literal.f2, 8=named, 9=<anonymous>, 10=quax, 11=recliteral.l1.l2, 12=litnamed, 13=reclitnamed, 14=<anonymous>, 15=<anonymous>}>"
      },
      {
        "className": "com.google.javascript.jscomp.RenamePropertiesTest",
        "methodName": "testPrototypePropertiesAsObjLitKeys2",
        "stackTrace": [
          "com.google.javascript.rhino.Node.getString(Node.java:891)",
          "com.google.javascript.jscomp.NodeUtil.isConstantByConvention(NodeUtil.java:2792)",
          "com.google.javascript.jscomp.Normalize$NormalizeStatements.annotateConstantsByConvention(Normalize.java:366)",
          "com.google.javascript.jscomp.Normalize$NormalizeStatements.visit(Normalize.java:341)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:464)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:275)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:257)",
          "com.google.javascript.jscomp.Normalize.process(Normalize.java:120)",
          "com.google.javascript.jscomp.CompilerTestCase.normalizeActualCode(CompilerTestCase.java:902)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:739)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.RenamePropertiesTest.testPrototypePropertiesAsObjLitKeys2(RenamePropertiesTest.java:71)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      },
      {
        "className": "com.google.javascript.jscomp.RenamePropertiesTest",
        "methodName": "testPrototypePropertiesAsObjLitKeys3",
        "stackTrace": [
          "com.google.javascript.rhino.Node.getString(Node.java:891)",
          "com.google.javascript.jscomp.NodeUtil.isConstantByConvention(NodeUtil.java:2792)",
          "com.google.javascript.jscomp.Normalize$NormalizeStatements.annotateConstantsByConvention(Normalize.java:366)",
          "com.google.javascript.jscomp.Normalize$NormalizeStatements.visit(Normalize.java:341)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:464)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:457)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:275)",
          "com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:257)",
          "com.google.javascript.jscomp.Normalize.process(Normalize.java:120)",
          "com.google.javascript.jscomp.CompilerTestCase.normalizeActualCode(CompilerTestCase.java:902)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:739)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:410)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:335)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:304)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:524)",
          "com.google.javascript.jscomp.RenamePropertiesTest.testPrototypePropertiesAsObjLitKeys3(RenamePropertiesTest.java:80)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      },
      {
        "className": "com.google.javascript.jscomp.SimpleDefinitionFinderTest",
        "methodName": "testDefineNumber",
        "stackTrace": [
          "com.google.javascript.jscomp.SimpleDefinitionFinderTest.checkDefinitions(SimpleDefinitionFinderTest.java:327)",
          "com.google.javascript.jscomp.SimpleDefinitionFinderTest.checkDefinitionsInJs(SimpleDefinitionFinderTest.java:322)",
          "com.google.javascript.jscomp.SimpleDefinitionFinderTest.testDefineNumber(SimpleDefinitionFinderTest.java:82)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[DEF STRING null -> NUMBER]> but was:<[]>"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.IRFactoryTest",
        "methodName": "testObjectLiteral6",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.IRFactoryTest.testNewParser(IRFactoryTest.java:1134)",
          "com.google.javascript.jscomp.parsing.IRFactoryTest.testObjectLiteral6(IRFactoryTest.java:265)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...: true]"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.IRFactoryTest",
        "methodName": "testObjectLiteral7",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.IRFactoryTest.testNewParser(IRFactoryTest.java:1134)",
          "com.google.javascript.jscomp.parsing.IRFactoryTest.testObjectLiteral7(IRFactoryTest.java:276)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ue]"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.IRFactoryTest",
        "methodName": "testObjectLiteral8",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.IRFactoryTest.testNewParser(IRFactoryTest.java:1134)",
          "com.google.javascript.jscomp.parsing.IRFactoryTest.testObjectLiteral8(IRFactoryTest.java:290)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ue]"
      },
      {
        "className": "com.google.javascript.jscomp.parsing.ParserTest",
        "methodName": "testObjectLiteralDoc1",
        "stackTrace": [
          "com.google.javascript.jscomp.parsing.ParserTest.testObjectLiteralDoc1(ParserTest.java:740)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<40> but was:<39>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 158,
    "changedFiles": {
      "com/google/javascript/jscomp/AbstractCommandLineRunner.java": {
        "modified": [
          [
            197
          ],
          [
            1497
          ],
          [
            1628
          ]
        ]
      },
      "com/google/javascript/jscomp/CommandLineRunner.java": {
        "modified": [
          [
            26
          ],
          [
            94
          ],
          [
            231
          ],
          [
            389
          ],
          [
            485
          ],
          [
            500
          ],
          [
            552
          ]
        ]
      },
      "com/google/javascript/jscomp/DiagnosticGroups.java": {
        "modified": [
          [
            23
          ],
          [
            186
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testWarningGuardOrdering2",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:806)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:798)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testWarningGuardOrdering2(CommandLineRunnerTest.java:126)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exactly one warning or error Errors:"
      },
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testWarningGuardOrdering4",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:806)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:798)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testWarningGuardOrdering4(CommandLineRunnerTest.java:138)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exactly one warning or error Errors:"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 159,
    "changedFiles": {
      "com/google/javascript/jscomp/InlineFunctions.java": {
        "modified": [
          [
            777
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testIssue423",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:1668)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 160,
    "changedFiles": {
      "com/google/javascript/jscomp/Compiler.java": {
        "modified": [
          [
            268
          ],
          [
            275
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CommandLineRunnerTest",
        "methodName": "testCheckSymbolsOverrideForQuiet",
        "stackTrace": [
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:856)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.test(CommandLineRunnerTest.java:848)",
          "com.google.javascript.jscomp.CommandLineRunnerTest.testCheckSymbolsOverrideForQuiet(CommandLineRunnerTest.java:230)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exactly one warning or error Errors:"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 161,
    "changedFiles": {
      "com/google/javascript/jscomp/PeepholeFoldConstants.java": {
        "modified": [
          [
            1283
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.PeepholeFoldConstantsTest",
        "methodName": "testIssue522",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:786)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:537)",
          "com.google.javascript.jscomp.PeepholeFoldConstantsTest.testIssue522(PeepholeFoldConstantsTest.java:927)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_INDEX_OUT_OF_BOUNDS_ERROR. Array index out of bounds: NUMBER 1.0 1 [source_file: testcode] at testcode line 1 : 3 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 162,
    "changedFiles": {
      "com/google/javascript/jscomp/Scope.java": {
        "modified": [
          [
            568
          ]
        ]
      },
      "com/google/javascript/jscomp/ScopedAliases.java": {
        "modified": [
          [
            226
          ],
          [
            271
          ],
          [
            303
          ],
          [
            342
          ],
          [
            355
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testForwardJsDoc",
        "stackTrace": [
          "com.google.javascript.jscomp.ScopedAliasesTest$TypeVerifyingPass.visit(ScopedAliasesTest.java:590)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:480)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:473)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:473)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:259)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:437)",
          "com.google.javascript.jscomp.ScopedAliasesTest$TypeVerifyingPass.process(ScopedAliasesTest.java:570)",
          "com.google.javascript.jscomp.ScopedAliasesTest.verifyTypes(ScopedAliasesTest.java:185)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testForwardJsDoc(ScopedAliasesTest.java:329)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[STRING foo.Foo.Bar 4 [source_file: testcode]"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 163,
    "changedFiles": {
      "com/google/javascript/jscomp/AnalyzePrototypeProperties.java": {
        "modified": [
          [
            201
          ],
          [
            241
          ],
          [
            278
          ],
          [
            304
          ],
          [
            330
          ],
          [
            338
          ],
          [
            363
          ],
          [
            382
          ],
          [
            392
          ],
          [
            412
          ],
          [
            427
          ],
          [
            442
          ],
          [
            499
          ],
          [
            516
          ],
          [
            576
          ],
          [
            623
          ],
          [
            665
          ]
        ]
      },
      "com/google/javascript/jscomp/CrossModuleMethodMotion.java": {
        "modified": [
          [
            141
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CrossModuleMethodMotionTest",
        "methodName": "testIssue600b",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:866)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:696)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:532)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:677)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:659)",
          "com.google.javascript.jscomp.CrossModuleMethodMotionTest.testIssue600b(CrossModuleMethodMotionTest.java:458)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CrossModuleMethodMotionTest",
        "methodName": "testIssue600e",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:866)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:696)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:532)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:677)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:659)",
          "com.google.javascript.jscomp.CrossModuleMethodMotionTest.testIssue600e(CrossModuleMethodMotionTest.java:539)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.CrossModuleMethodMotionTest",
        "methodName": "testIssue600",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:866)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:696)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:532)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:677)",
          "com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:659)",
          "com.google.javascript.jscomp.CrossModuleMethodMotionTest.testIssue600(CrossModuleMethodMotionTest.java:438)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 164,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/ArrowType.java": {
        "modified": [
          [
            128
          ],
          [
            152
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.LooseTypeCheckTest",
        "methodName": "testMethodInference7",
        "stackTrace": [
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7027)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:7007)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testTypes(LooseTypeCheckTest.java:6951)",
          "com.google.javascript.jscomp.LooseTypeCheckTest.testMethodInference7(LooseTypeCheckTest.java:1782)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testMethodInference7",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9537)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9517)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9455)",
          "com.google.javascript.jscomp.TypeCheckTest.testMethodInference7(TypeCheckTest.java:2048)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.rhino.jstype.FunctionTypeTest",
        "methodName": "testSupAndInfOfReturnTypesWithNumOfParams",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.FunctionTypeTest.assertLeastSupertype(FunctionTypeTest.java:230)",
          "com.google.javascript.rhino.jstype.FunctionTypeTest.testSupAndInfOfReturnTypesWithNumOfParams(FunctionTypeTest.java:149)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[function (number, number): boolea]n> but was:<[Functio]n>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 165,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/JSTypeRegistry.java": {
        "modified": [
          [
            698
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/ObjectType.java": {
        "modified": [
          [
            290
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/RecordType.java": {
        "modified": [
          [
            68
          ],
          [
            83
          ],
          [
            93
          ],
          [
            102
          ],
          [
            152
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/RecordTypeBuilder.java": {
        "modified": [
          [
            54
          ],
          [
            62
          ],
          [
            92
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue725",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10001)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9981)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:9919)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue725(TypeCheckTest.java:5852)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 166,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/PrototypeObjectType.java": {
        "modified": [
          [
            573
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeInferenceTest",
        "methodName": "testRecordInference",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeInferenceTest.testRecordInference(TypeInferenceTest.java:1013)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[a: (boolean|undefined), b: (string|undefined)]}> but was:<{[]}>"
      },
      {
        "className": "com.google.javascript.jscomp.TypeInferenceTest",
        "methodName": "testIssue785",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeInferenceTest.testIssue785(TypeInferenceTest.java:1022)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[prop: (string|undefined)]}> but was:<{[]}>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 167,
    "changedFiles": {
      "com/google/javascript/jscomp/type/SemanticReverseAbstractInterpreter.java": {
        "modified": [
          [
            301
          ],
          [
            348
          ],
          [
            394
          ],
          [
            407
          ],
          [
            430
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/JSType.java": {
        "modified": [
          [
            883
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue783",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10246)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10226)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10164)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue783(TypeCheckTest.java:5997)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testMissingProperty20",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10246)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10226)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10164)",
          "com.google.javascript.jscomp.TypeCheckTest.testMissingProperty20(TypeCheckTest.java:9115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.rhino.jstype.JSTypeTest",
        "methodName": "testRestrictedTypeGivenToBoolean",
        "stackTrace": [
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:99)",
          "com.google.javascript.rhino.testing.Asserts.assertTypeEquals(Asserts.java:95)",
          "com.google.javascript.rhino.testing.BaseJSTypeTestCase.assertTypeEquals(BaseJSTypeTestCase.java:576)",
          "com.google.javascript.rhino.jstype.JSTypeTest.testRestrictedTypeGivenToBoolean(JSTypeTest.java:5263)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: ??"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 168,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1996
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue726",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10290)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10270)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10208)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue726(TypeCheckTest.java:5977)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 169,
    "changedFiles": {
      "com/google/javascript/rhino/jstype/ArrowType.java": {
        "modified": [
          [
            177
          ],
          [
            187
          ],
          [
            204
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/EquivalenceMethod.java": {
        "modified": [
          [
            3
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/FunctionType.java": {
        "modified": [
          [
            792
          ],
          [
            890
          ],
          [
            908
          ],
          [
            918
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/JSType.java": {
        "modified": [
          [
            492
          ],
          [
            500
          ],
          [
            514
          ],
          [
            528
          ],
          [
            545
          ],
          [
            565
          ],
          [
            580
          ],
          [
            592
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/RecordType.java": {
        "modified": [
          [
            118
          ],
          [
            126
          ],
          [
            204
          ],
          [
            268
          ],
          [
            280
          ]
        ]
      },
      "com/google/javascript/rhino/jstype/UnionType.java": {
        "modified": [
          [
            334
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue791",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10782)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10756)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10694)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:10690)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue791(TypeCheckTest.java:6423)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      },
      {
        "className": "com.google.javascript.rhino.jstype.RecordTypeTest",
        "methodName": "testSubtypeWithUnknowns2",
        "stackTrace": [
          "com.google.javascript.rhino.jstype.RecordTypeTest.testSubtypeWithUnknowns2(RecordTypeTest.java:139)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 170,
    "changedFiles": {
      "com/google/javascript/jscomp/FlowSensitiveInlineVariables.java": {
        "modified": [
          [
            482
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest",
        "methodName": "testVarAssinInsideHookIssue965",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:927)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:459)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:401)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.inline(FlowSensitiveInlineVariablesTest.java:589)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.noInline(FlowSensitiveInlineVariablesTest.java:585)",
          "com.google.javascript.jscomp.FlowSensitiveInlineVariablesTest.testVarAssinInsideHookIssue965(FlowSensitiveInlineVariablesTest.java:578)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 171,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeInference.java": {
        "modified": [
          [
            731
          ]
        ]
      },
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1669
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue1023",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11991)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11971)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:11907)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue1023(TypeCheckTest.java:6756)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testMethodBeforeFunction2",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testMethodBeforeFunction2(TypedScopeCreatorTest.java:452)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[function (this:Window, ?): undefined]> but was:<[?]>"
      },
      {
        "className": "com.google.javascript.jscomp.TypedScopeCreatorTest",
        "methodName": "testPropertiesOnInterface2",
        "stackTrace": [
          "com.google.javascript.jscomp.TypedScopeCreatorTest.testPropertiesOnInterface2(TypedScopeCreatorTest.java:551)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 172,
    "changedFiles": {
      "com/google/javascript/jscomp/TypedScopeCreator.java": {
        "modified": [
          [
            1670
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue1024",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12119)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12093)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12029)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12025)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue1024(TypeCheckTest.java:11993)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unexpected warnings(s):"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 173,
    "changedFiles": {
      "com/google/javascript/jscomp/CodeGenerator.java": {
        "modified": [
          [
            130
          ]
        ]
      },
      "com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java": {
        "modified": [
          [
            102
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testPrint",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:482)",
          "com.google.javascript.jscomp.CodePrinterTest.testPrint(CodePrinterTest.java:197)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<var a,b,c;a||[(b||c);a*(b*c);a|(b|c)]> but was:<var a,b,c;a||[b||c;a*b*c;a|b|c]>"
      },
      {
        "className": "com.google.javascript.jscomp.CodePrinterTest",
        "methodName": "testIssue1062",
        "stackTrace": [
          "com.google.javascript.jscomp.CodePrinterTest.assertPrint(CodePrinterTest.java:482)",
          "com.google.javascript.jscomp.CodePrinterTest.assertPrintSame(CodePrinterTest.java:487)",
          "com.google.javascript.jscomp.CodePrinterTest.testIssue1062(CodePrinterTest.java:1572)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<3*[(4%3*5)]> but was:<3*[4%3*5]>"
      },
      {
        "className": "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest",
        "methodName": "testAssocitivity",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testAssocitivity(PeepholeSubstituteAlternateSyntaxTest.java:459)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 174,
    "changedFiles": {
      "com/google/javascript/jscomp/JsAst.java": {
        "modified": [
          [
            82
          ],
          [
            95
          ]
        ]
      },
      "com/google/javascript/jscomp/NodeUtil.java": {
        "modified": [
          [
            2367
          ]
        ]
      },
      "com/google/javascript/jscomp/ScopedAliases.java": {
        "modified": [
          [
            356
          ],
          [
            365
          ],
          [
            377
          ],
          [
            386
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testIssue1103a",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:871)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testIssue1103a(ScopedAliasesTest.java:526)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_GOOG_SCOPE_NON_ALIAS_LOCAL. The local variable a is in a goog.scope and is not an alias. at testcode line 1 : 30 expected:<0> but was:<1>"
      },
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testIssue1103b",
        "stackTrace": [
          "com.google.javascript.jscomp.Compiler.ensureLibraryInjected(Compiler.java:2554)",
          "com.google.javascript.jscomp.ScopedAliases$Traversal.findAliases(ScopedAliases.java:373)",
          "com.google.javascript.jscomp.ScopedAliases$Traversal.enterScope(ScopedAliases.java:298)",
          "com.google.javascript.jscomp.NodeTraversal.pushScope(NodeTraversal.java:600)",
          "com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:558)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:528)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)",
          "com.google.javascript.jscomp.ScopedAliases.hotSwapScript(ScopedAliases.java:133)",
          "com.google.javascript.jscomp.ScopedAliases.process(ScopedAliases.java:127)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:845)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testIssue1103b(ScopedAliasesTest.java:534)"
        ],
        "error": "java.lang.RuntimeException",
        "message": "INTERNAL COMPILER ERROR."
      },
      {
        "className": "com.google.javascript.jscomp.ScopedAliasesTest",
        "methodName": "testIssue1103c",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:871)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.ScopedAliasesTest.testIssue1103c(ScopedAliasesTest.java:541)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Unexpected error(s): JSC_GOOG_SCOPE_NON_ALIAS_LOCAL. The local variable a is in a goog.scope and is not an alias. at testcode line 1 : 52 expected:<0> but was:<1>"
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 175,
    "changedFiles": {
      "com/google/javascript/jscomp/FunctionInjector.java": {
        "modified": [
          [
            46
          ],
          [
            208
          ],
          [
            690
          ],
          [
            715
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testIssue1101a",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1402)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1543)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1409)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1373)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101a(FunctionInjectorTest.java:1346)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<NO> but was:<YES>"
      },
      {
        "className": "com.google.javascript.jscomp.FunctionInjectorTest",
        "methodName": "testIssue1101b",
        "stackTrace": [
          "com.google.javascript.jscomp.FunctionInjectorTest$1.call(FunctionInjectorTest.java:1402)",
          "com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1543)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:540)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:534)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:287)",
          "com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:494)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1409)",
          "com.google.javascript.jscomp.FunctionInjectorTest.helperCanInlineReferenceToFunction(FunctionInjectorTest.java:1373)",
          "com.google.javascript.jscomp.FunctionInjectorTest.testIssue1101b(FunctionInjectorTest.java:1352)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<NO> but was:<YES>"
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testCostBasedInlining10",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining10(InlineFunctionsTest.java:1023)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testIssue1101",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testIssue1101(InlineFunctionsTest.java:2401)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.google.javascript.jscomp.InlineFunctionsTest",
        "methodName": "testInlineMutableArgsReferencedOnce",
        "stackTrace": [
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:957)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:477)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:403)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:372)",
          "com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:360)",
          "com.google.javascript.jscomp.InlineFunctionsTest.testInlineMutableArgsReferencedOnce(InlineFunctionsTest.java:629)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Closure",
    "bugId": 176,
    "changedFiles": {
      "com/google/javascript/jscomp/TypeInference.java": {
        "modified": [
          [
            530
          ],
          [
            548
          ],
          [
            562
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.javascript.jscomp.TypeCheckTest",
        "methodName": "testIssue1056",
        "stackTrace": [
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12785)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12765)",
          "com.google.javascript.jscomp.TypeCheckTest.testTypes(TypeCheckTest.java:12701)",
          "com.google.javascript.jscomp.TypeCheckTest.testIssue1056(TypeCheckTest.java:6911)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected a warning"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/codec/language/Caverphone.java": {
        "modified": [
          [
            59
          ]
        ]
      },
      "org/apache/commons/codec/language/Metaphone.java": {
        "modified": [
          [
            88
          ]
        ]
      },
      "org/apache/commons/codec/language/SoundexUtils.java": {
        "modified": [
          [
            53
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.language.CaverphoneTest",
        "methodName": "testLocaleIndependence",
        "stackTrace": [
          "org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(StringEncoderAbstractTest.java:91)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "tr:  expected:<[A]111111111> but was:<[1]111111111>"
      },
      {
        "className": "org.apache.commons.codec.language.DoubleMetaphoneTest",
        "methodName": "testLocaleIndependence",
        "stackTrace": [
          "org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(StringEncoderAbstractTest.java:91)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "tr:  expected:<[I]> but was:<[\u0130]>"
      },
      {
        "className": "org.apache.commons.codec.language.MetaphoneTest",
        "methodName": "testLocaleIndependence",
        "stackTrace": [
          "org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(StringEncoderAbstractTest.java:91)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "tr:  expected:<[I]> but was:<[\u0130]>"
      },
      {
        "className": "org.apache.commons.codec.language.RefinedSoundexTest",
        "methodName": "testLocaleIndependence",
        "stackTrace": [
          "org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(StringEncoderAbstractTest.java:89)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "tr: 239"
      },
      {
        "className": "org.apache.commons.codec.language.SoundexTest",
        "methodName": "testLocaleIndependence",
        "stackTrace": [
          "org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(StringEncoderAbstractTest.java:89)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "tr: The character is not mapped: \u0130"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 2,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64.java": {
        "modified": [
          [
            446
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testBase64EmptyInputStream",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte(Base64InputStreamTest.java:142)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream(Base64InputStreamTest.java:53)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "EOF expected:<-1> but was:<13>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64OutputStreamTest",
        "methodName": "testBase64EmptyOutputStream",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte(Base64OutputStreamTest.java:142)",
          "org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream(Base64OutputStreamTest.java:53)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Streaming base64 encode"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/codec/language/DoubleMetaphone.java": {
        "modified": [
          [
            455
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.language.DoubleMetaphone2Test",
        "methodName": "testDoubleMetaphoneAlternate",
        "stackTrace": [
          "org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(DoubleMetaphone2Test.java:84)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Test [19]=Angier expected:<AN[J]R> but was:<AN[K]R>"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64.java": {
        "modified": [
          [
            225
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64Codec13Test",
        "methodName": "testEncoder",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64Codec13Test.testEncoder(Base64Codec13Test.java:378)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Encoder test-1"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64Codec13Test",
        "methodName": "testBinaryEncoder",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder(Base64Codec13Test.java:414)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "BinaryEncoder test-1"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64.java": {
        "modified": [
          [
            586
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testCodec98NPE",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64.decode(Base64.java:594)",
          "org.apache.commons.codec.binary.Base64InputStream.read(Base64InputStream.java:159)",
          "org.apache.commons.codec.binary.Base64TestData.fill(Base64TestData.java:177)",
          "org.apache.commons.codec.binary.Base64TestData.streamToBytes(Base64TestData.java:148)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE(Base64InputStreamTest.java:61)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.codec.binary.Base64OutputStreamTest",
        "methodName": "testCodec98NPE",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64.decode(Base64.java:594)",
          "org.apache.commons.codec.binary.Base64OutputStream.close(Base64OutputStream.java:192)",
          "org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(Base64OutputStreamTest.java:62)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 6,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64InputStream.java": {
        "modified": [
          [
            148
          ],
          [
            164
          ],
          [
            178
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testCodec101",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101(Base64InputStreamTest.java:61)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Codec101: First read successful [c=0]"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64.java": {
        "modified": [
          [
            670
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64Test",
        "methodName": "testByteToStringVariations",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64Test.testByteToStringVariations(Base64Test.java:1129)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "byteToString static Hello World expected:<SGVsbG8gV29ybGQ=[]> but was:<SGVsbG8gV29ybGQ=["
      },
      {
        "className": "org.apache.commons.codec.binary.Base64Test",
        "methodName": "testRfc4648Section10Encode",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(Base64Test.java:586)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<Zg==[]> but was:<Zg==["
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64.java": {
        "modified": [
          [
            419
          ]
        ]
      },
      "org/apache/commons/codec/binary/Base64InputStream.java": {
        "modified": [
          [
            169
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testCodec105",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64.encode(Base64.java:497)",
          "org.apache.commons.codec.binary.Base64InputStream.read(Base64InputStream.java:173)",
          "org.apache.commons.codec.binary.Base64InputStream.read(Base64InputStream.java:109)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105(Base64InputStreamTest.java:58)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "2"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base64.java": {
        "modified": [
          [
            827
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base64Test",
        "methodName": "testCodec112",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base64.encodeBase64(Base64.java:829)",
          "org.apache.commons.codec.binary.Base64Test.testCodec112(Base64Test.java:343)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Input array too big, the output array would be bigger (6) than the specified maxium size of 4"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/codec/language/Caverphone.java": {
        "modified": [
          [
            76
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.language.CaverphoneTest",
        "methodName": "testEndMb",
        "stackTrace": [
          "org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding(StringEncoderAbstractTest.java:38)",
          "org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings(StringEncoderAbstractTest.java:43)",
          "org.apache.commons.codec.language.CaverphoneTest.testEndMb(CaverphoneTest.java:335)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Source: mbmb expected:<M[PM]1111111> but was:<M[MP]1111111>"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/codec/net/QuotedPrintableCodec.java": {
        "modified": [
          [
            70
          ],
          [
            114
          ],
          [
            132
          ],
          [
            144
          ],
          [
            152
          ],
          [
            175
          ],
          [
            229
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.net.QuotedPrintableCodecTest",
        "methodName": "testSkipNotEncodedCRLF",
        "stackTrace": [
          "org.apache.commons.codec.net.Utils.digit16(Utils.java:44)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(QuotedPrintableCodec.java:229)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decode(QuotedPrintableCodec.java:275)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decode(QuotedPrintableCodec.java:324)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decode(QuotedPrintableCodec.java:344)",
          "org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF(QuotedPrintableCodecTest.java:300)"
        ],
        "error": "org.apache.commons.codec.DecoderException",
        "message": "Invalid URL encoding: not a valid digit (radix 16): 13"
      },
      {
        "className": "org.apache.commons.codec.net.QuotedPrintableCodecTest",
        "methodName": "testSoftLineBreakDecode",
        "stackTrace": [
          "org.apache.commons.codec.net.Utils.digit16(Utils.java:44)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(QuotedPrintableCodec.java:229)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decode(QuotedPrintableCodec.java:275)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decode(QuotedPrintableCodec.java:324)",
          "org.apache.commons.codec.net.QuotedPrintableCodec.decode(QuotedPrintableCodec.java:344)",
          "org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode(QuotedPrintableCodecTest.java:274)"
        ],
        "error": "org.apache.commons.codec.DecoderException",
        "message": "Invalid URL encoding: not a valid digit (radix 16): 13"
      },
      {
        "className": "org.apache.commons.codec.net.QuotedPrintableCodecTest",
        "methodName": "testSoftLineBreakEncode",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode(QuotedPrintableCodecTest.java:288)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...matics is the most b[="
      },
      {
        "className": "org.apache.commons.codec.net.QuotedPrintableCodecTest",
        "methodName": "testUltimateSoftBreak",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(QuotedPrintableCodecTest.java:326)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...There is no end to i[="
      },
      {
        "className": "org.apache.commons.codec.net.QuotedPrintableCodecTest",
        "methodName": "testTrailingSpecial",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(QuotedPrintableCodecTest.java:312)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<... might contain sp=3D[="
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/codec/binary/BaseNCodecInputStream.java": {
        "modified": [
          [
            142
          ],
          [
            152
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base32InputStreamTest",
        "methodName": "testSkipToEnd",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd(Base32InputStreamTest.java:528)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1> but was:<183>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base32InputStreamTest",
        "methodName": "testCodec130",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130(Base32InputStreamTest.java:63)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[ello World]> but was:<[\f\ufffd\ufffd\ufffd\ufffd"
      },
      {
        "className": "org.apache.commons.codec.binary.Base32InputStreamTest",
        "methodName": "testSkipWrongArgument",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.IllegalArgumentException"
      },
      {
        "className": "org.apache.commons.codec.binary.Base32InputStreamTest",
        "methodName": "testAvailable",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable(Base32InputStreamTest.java:156)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<8>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base32InputStreamTest",
        "methodName": "testSkipPastEnd",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd(Base32InputStreamTest.java:510)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<8>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base32InputStreamTest",
        "methodName": "testSkipBig",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(Base32InputStreamTest.java:494)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<8>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testSkipToEnd",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd(Base64InputStreamTest.java:539)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1> but was:<255>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testCodec130",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130(Base64InputStreamTest.java:73)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[ello World]> but was:<[\u0019[\u001b\u001b\ufffd\u0015\ufffd\u071b\u0019]>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testSkipWrongArgument",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.IllegalArgumentException"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testAvailable",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable(Base64InputStreamTest.java:164)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<8>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testSkipPastEnd",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd(Base64InputStreamTest.java:521)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<6> but was:<8>"
      },
      {
        "className": "org.apache.commons.codec.binary.Base64InputStreamTest",
        "methodName": "testSkipBig",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig(Base64InputStreamTest.java:488)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<6> but was:<8>"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/codec/binary/CharSequenceUtils.java": {
        "modified": [
          [
            3
          ]
        ]
      },
      "org/apache/commons/codec/binary/StringUtils.java": {
        "modified": [
          [
            70
          ]
        ]
      },
      "org/apache/commons/codec/language/DoubleMetaphone.java": {
        "modified": [
          [
            22
          ],
          [
            244
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.language.DoubleMetaphoneTest",
        "methodName": "testIsDoubleMetaphoneEqualBasic",
        "stackTrace": [
          "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(DoubleMetaphone.java:244)",
          "org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest(DoubleMetaphoneTest.java:1039)",
          "org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(DoubleMetaphoneTest.java:1136)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.codec.language.DoubleMetaphoneTest",
        "methodName": "testCodec184",
        "stackTrace": [
          "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(DoubleMetaphone.java:244)",
          "org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(DoubleMetaphoneTest.java:1065)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/codec/language/bm/Lang.java": {
        "modified": [
          [
            98
          ]
        ]
      },
      "org/apache/commons/codec/language/bm/PhoneticEngine.java": {
        "modified": [
          [
            31
          ],
          [
            338
          ],
          [
            361
          ]
        ]
      },
      "org/apache/commons/codec/language/bm/Rule.java": {
        "modified": [
          [
            158
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest",
        "methodName": "testCompatibilityWithOriginalVersion",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion(PhoneticEngineRegressionTest.java:190)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...dzn|bntsn|bnzn|vndzn[]> but was:<...dzn|bntsn|bnzn|vndzn[|vntsn]>"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/codec/language/Soundex.java": {
        "modified": [
          [
            188
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.language.SoundexTest",
        "methodName": "testHWRuleEx1",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.codec.language.SoundexTest.testHWRuleEx1(SoundexTest.java:232)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Y3[3]0> but was:<Y3[0]0>"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/codec/binary/Base32.java": {
        "modified": [
          [
            99
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.Base32Test",
        "methodName": "testCodec200",
        "stackTrace": [
          "org.apache.commons.codec.binary.Base32.<init>(Base32.java:309)",
          "org.apache.commons.codec.binary.Base32.<init>(Base32.java:193)",
          "org.apache.commons.codec.binary.Base32Test.testCodec200(Base32Test.java:158)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "pad must not be in alphabet or whitespace"
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 17,
    "changedFiles": {
      "org/apache/commons/codec/binary/StringUtils.java": {
        "modified": [
          [
            339
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.StringUtilsTest",
        "methodName": "testNewStringNullInput_CODEC229",
        "stackTrace": [
          "java.lang.String.<init>(String.java:515)",
          "org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(StringUtils.java:339)",
          "org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229(StringUtilsTest.java:151)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Codec",
    "bugId": 18,
    "changedFiles": {
      "org/apache/commons/codec/binary/StringUtils.java": {
        "modified": [
          [
            81
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.codec.binary.StringUtilsTest",
        "methodName": "testEqualsCS1",
        "stackTrace": [
          "java.lang.AbstractStringBuilder.charAt(AbstractStringBuilder.java:237)",
          "java.lang.StringBuilder.charAt(StringBuilder.java:76)",
          "org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(CharSequenceUtils.java:59)",
          "org.apache.commons.codec.binary.StringUtils.equals(StringUtils.java:81)",
          "org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS1(StringUtilsTest.java:228)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 3"
      },
      {
        "className": "org.apache.commons.codec.binary.StringUtilsTest",
        "methodName": "testEqualsCS2",
        "stackTrace": [
          "java.lang.AbstractStringBuilder.charAt(AbstractStringBuilder.java:237)",
          "java.lang.StringBuilder.charAt(StringBuilder.java:76)",
          "org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(CharSequenceUtils.java:59)",
          "org.apache.commons.codec.binary.StringUtils.equals(StringUtils.java:81)",
          "org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(StringUtilsTest.java:236)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 3"
      }
    ]
  },
  {
    "project": "Collections",
    "bugId": 25,
    "changedFiles": {
      "org/apache/commons/collections4/IteratorUtils.java": {
        "modified": [
          [
            605
          ],
          [
            626
          ],
          [
            648
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.collections4.IteratorUtilsTest",
        "methodName": "testCollatedIterator",
        "stackTrace": [
          "org.apache.commons.collections4.iterators.CollatingIterator.least(CollatingIterator.java:366)",
          "org.apache.commons.collections4.iterators.CollatingIterator.next(CollatingIterator.java:251)",
          "org.apache.commons.collections4.IteratorUtils.toList(IteratorUtils.java:1147)",
          "org.apache.commons.collections4.IteratorUtils.toList(IteratorUtils.java:1122)",
          "org.apache.commons.collections4.IteratorUtilsTest.testCollatedIterator(IteratorUtilsTest.java:943)"
        ],
        "error": "java.lang.NullPointerException",
        "message": "You must invoke setComparator() to set a comparator first."
      }
    ]
  },
  {
    "project": "Collections",
    "bugId": 26,
    "changedFiles": {
      "org/apache/commons/collections4/keyvalue/MultiKey.java": {
        "modified": [
          [
            277
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.collections4.keyvalue.MultiKeyTest",
        "methodName": "testEqualsAfterSerializationOfDerivedClass",
        "stackTrace": [
          "org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerializationOfDerivedClass(MultiKeyTest.java:292)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<0>"
      }
    ]
  },
  {
    "project": "Collections",
    "bugId": 27,
    "changedFiles": {
      "org/apache/commons/collections4/map/MultiValueMap.java": {
        "modified": [
          [
            568
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.collections4.map.MultiValueMapTest",
        "methodName": "testUnsafeDeSerialization",
        "stackTrace": [
          "org.apache.commons.collections4.map.MultiValueMapTest.testUnsafeDeSerialization(MultiValueMapTest.java:405)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "unsafe clazz accepted when de-serializing MultiValueMap"
      }
    ]
  },
  {
    "project": "Collections",
    "bugId": 28,
    "changedFiles": {
      "org/apache/commons/collections4/trie/AbstractPatriciaTrie.java": {
        "modified": [
          [
            2262
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.collections4.trie.PatriciaTrieTest",
        "methodName": "testPrefixMapClear",
        "stackTrace": [
          "org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove(AbstractPatriciaTrie.java:2405)",
          "java.util.AbstractCollection.clear(AbstractCollection.java:436)",
          "java.util.AbstractMap.clear(AbstractMap.java:297)",
          "org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapClear(PatriciaTrieTest.java:386)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
        "modified": [
          [
            346
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.CpioTestCase",
        "methodName": "testCpioUnarchive",
        "stackTrace": [
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readFully(CpioArchiveInputStream.java:293)",
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.getNextCPIOEntry(CpioArchiveInputStream.java:168)",
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.getNextEntry(CpioArchiveInputStream.java:421)",
          "org.apache.commons.compress.archivers.CpioTestCase.testCpioUnarchive(CpioTestCase.java:82)"
        ],
        "error": "java.io.EOFException",
        "message": ""
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 2,
    "changedFiles": {
      "org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java": {
        "modified": [
          [
            42
          ],
          [
            60
          ],
          [
            77
          ],
          [
            114
          ],
          [
            129
          ],
          [
            143
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.ArTestCase",
        "methodName": "testArDelete",
        "stackTrace": [
          "org.apache.commons.compress.archivers.ArTestCase.testArDelete(ArTestCase.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
        "modified": [
          [
            55
          ],
          [
            112
          ],
          [
            187
          ],
          [
            217
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.ArchiveOutputStreamTest",
        "methodName": "testFinish",
        "stackTrace": [
          "org.apache.commons.compress.archivers.ArchiveOutputStreamTest.testFinish(ArchiveOutputStreamTest.java:67)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "After putArchive should follow closeArchive"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
        "modified": [
          [
            336
          ]
        ]
      },
      "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
        "modified": [
          [
            126
          ]
        ]
      },
      "org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
        "modified": [
          [
            530
          ]
        ]
      },
      "org/apache/commons/compress/changes/ChangeSetPerformer.java": {
        "modified": [
          [
            128
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest",
        "methodName": "testJarMarker",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:158)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:119)",
          "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest.testJarMarker(JarArchiveOutputStreamTest.java:48)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testCP437FileRoundtripImplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testCP437FileRoundtripImplicitUnicodeExtra(UTF8ZipFilesTest.java:75)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testUtf8FileRoundtripImplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testUtf8FileRoundtripImplicitUnicodeExtra(UTF8ZipFilesTest.java:65)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testCP437FileRoundtripExplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testCP437FileRoundtripExplicitUnicodeExtra(UTF8ZipFilesTest.java:55)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testUtf8FileRoundtripExplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testUtf8FileRoundtripExplicitUnicodeExtra(UTF8ZipFilesTest.java:45)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testASCIIFileRoundtripImplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testASCIIFileRoundtripImplicitUnicodeExtra(UTF8ZipFilesTest.java:80)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testUtf8FileRoundtripNoEFSImplicitUnicodeExtra(UTF8ZipFilesTest.java:70)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testZipArchiveInputStreamReadsUnicodeFields",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testZipArchiveInputStreamReadsUnicodeFields(UTF8ZipFilesTest.java:183)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testASCIIFileRoundtripExplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testASCIIFileRoundtripExplicitUnicodeExtra(UTF8ZipFilesTest.java:60)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:318)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:181)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFile(UTF8ZipFilesTest.java:291)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testFileRoundtrip(UTF8ZipFilesTest.java:202)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testUtf8FileRoundtripNoEFSExplicitUnicodeExtra(UTF8ZipFilesTest.java:50)"
        ],
        "error": "java.io.IOException",
        "message": "central directory is empty, can't expand corrupt archive."
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
        "modified": [
          [
            239
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest",
        "methodName": "testRead7ZipMultiVolumeArchiveForStream",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest.testRead7ZipMultiVolumeArchiveForStream(Maven221MultiVolumeTest.java:97)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "shouldn't be able to read from truncated entry"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 6,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
        "modified": [
          [
            64
          ],
          [
            462
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest",
        "methodName": "testNotEquals",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(ZipArchiveEntryTest.java:230)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            98
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarUtilsTest",
        "methodName": "testRoundTripNames",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.checkName(TarUtilsTest.java:132)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripNames(TarUtilsTest.java:126)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<0302-0601-3[\u00b1\u00b1\u00b1F06\u00b1W220\u00b1ZB\u00b1LALALA\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1\u00b1CAN\u00b1\u00b1DC\u00b1\u00b1\u00b104\u00b1060302\u00b1]MOE.model> but was:<0302-0601-3[\uffb1\uffb1\uffb1F06\uffb1W220\uffb1ZB\uffb1LALALA\uffb1\uffb1\uffb1\uffb1\uffb1\uffb1\uffb1\uffb1\uffb1\uffb1CAN\uffb1\uffb1DC\uffb1\uffb1\uffb104\uffb1060302\uffb1]MOE.model>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            53
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarUtilsTest",
        "methodName": "testParseOctalInvalid",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(TarUtilsTest.java:66)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected IllegalArgumentException - should be at least 2 bytes long"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
        "modified": [
          [
            108
          ],
          [
            330
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest",
        "methodName": "testCount",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testCount(TarArchiveOutputStreamTest.java:55)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10240> but was:<76>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipFile.java": {
        "modified": [
          [
            808
          ],
          [
            842
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest",
        "methodName": "testReadWinZipArchive",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.assertCanRead(UTF8ZipFilesTest.java:144)",
          "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest.testReadWinZipArchive(UTF8ZipFilesTest.java:133)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "InputStream is null"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
        "modified": [
          [
            240
          ],
          [
            249
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
        "methodName": "shortTextFilesAreNoTARs",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.shortTextFilesAreNoTARs(ArchiveStreamFactoryTest.java:36)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "created an input stream for a non-archive"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
        "modified": [
          [
            198
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.TarTestCase",
        "methodName": "testCOMPRESS178",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarUtils.parseOctal(TarUtils.java:99)",
          "org.apache.commons.compress.archivers.tar.TarUtils.parseOctalOrBinary(TarUtils.java:130)",
          "org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(TarArchiveEntry.java:815)",
          "org.apache.commons.compress.archivers.tar.TarArchiveEntry.<init>(TarArchiveEntry.java:314)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:198)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextEntry(TarArchiveInputStream.java:395)",
          "org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS178(TarTestCase.java:309)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid byte 0 at offset 2 in '00{NUL}0765{NUL}' len=8"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
        "modified": [
          [
            512
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest",
        "methodName": "winzipBackSlashWorkaround",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.winzipBackSlashWorkaround(ZipArchiveInputStreamTest.java:43)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<\u00e4[/]> but was:<\u00e4[\\]>"
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipFileTest",
        "methodName": "testWinzipBackSlashWorkaround",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipFileTest.testWinzipBackSlashWorkaround(ZipFileTest.java:149)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: \u00e4\\\u00fc.txt"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            65
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
        "methodName": "workaroundForBrokenTimeHeader",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:201)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(TarArchiveInputStreamTest.java:57)"
        ],
        "error": "java.io.IOException",
        "message": "Error detected parsing the header"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
        "modified": [
          [
            669
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest",
        "methodName": "testNullCommentEqualsEmptyComment",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNullCommentEqualsEmptyComment(ZipArchiveEntryTest.java:250)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<foo> but was:<foo>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
        "modified": [
          [
            244
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
        "methodName": "aiffFilesAreNoTARs",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.aiffFilesAreNoTARs(ArchiveStreamFactoryTest.java:56)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "created an input stream for a non-archive"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 17,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            135
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
        "methodName": "testCompress197",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(TarArchiveInputStreamTest.java:134)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "COMPRESS-197: Error detected parsing the header"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 18,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
        "modified": [
          [
            457
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest",
        "methodName": "testWriteNonAsciiDirectoryNamePosixMode",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.write(TarArchiveOutputStream.java:387)",
          "java.io.OutputStream.write(OutputStream.java:75)",
          "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writePaxHeaders(TarArchiveOutputStream.java:489)",
          "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.putArchiveEntry(TarArchiveOutputStream.java:314)",
          "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiDirectoryNamePosixMode(TarArchiveOutputStreamTest.java:418)"
        ],
        "error": "java.io.IOException",
        "message": "request to write '15' bytes exceeds size in header of '0' bytes for entry './PaxHeaders.X/fvv/'"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 19,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java": {
        "modified": [
          [
            259
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipFileTest",
        "methodName": "testExcessDataInZip64ExtraField",
        "stackTrace": [
          "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.reparseCentralDirectoryData(Zip64ExtendedInformationExtraField.java:260)",
          "org.apache.commons.compress.archivers.zip.ZipFile.setSizesAndOffsetFromZip64Extra(ZipFile.java:619)",
          "org.apache.commons.compress.archivers.zip.ZipFile.readCentralDirectoryEntry(ZipFile.java:584)",
          "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:499)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:217)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:193)",
          "org.apache.commons.compress.archivers.zip.ZipFile.<init>(ZipFile.java:154)",
          "org.apache.commons.compress.archivers.zip.ZipFileTest.testExcessDataInZip64ExtraField(ZipFileTest.java:234)"
        ],
        "error": "java.util.zip.ZipException",
        "message": "central directory zip64 extended information extra field's length doesn't match central directory data.  Expected length 16 but is 28"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 20,
    "changedFiles": {
      "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
        "modified": [
          [
            331
          ],
          [
            347
          ],
          [
            361
          ],
          [
            373
          ],
          [
            387
          ],
          [
            399
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest",
        "methodName": "testCpioUnarchiveCreatedByRedlineRpm",
        "stackTrace": [
          "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setMode(CpioArchiveEntry.java:766)",
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readNewEntry(CpioArchiveInputStream.java:332)",
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.getNextCPIOEntry(CpioArchiveInputStream.java:204)",
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.getNextEntry(CpioArchiveInputStream.java:450)",
          "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest.testCpioUnarchiveCreatedByRedlineRpm(CpioArchiveInputStreamTest.java:55)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Unknown mode. Full: 1a4 Masked: 0"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 21,
    "changedFiles": {
      "org/apache/commons/compress/archivers/sevenz/SevenZOutputFile.java": {
        "modified": [
          [
            639
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testSevenEmptyFiles",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(SevenZFile.java:714)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:241)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testSevenEmptyFiles(SevenZOutputFileTest.java:183)"
        ],
        "error": "java.io.IOException",
        "message": "Unknown property 128"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testEightFilesSomeNotEmpty",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:246)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testEightFilesSomeNotEmpty(SevenZOutputFileTest.java:195)"
        ],
        "error": "java.io.IOException",
        "message": "Badly terminated header"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testSixEmptyFiles",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:246)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testSixEmptyFiles(SevenZOutputFileTest.java:175)"
        ],
        "error": "java.io.IOException",
        "message": "Badly terminated header"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testEightEmptyFiles",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(SevenZFile.java:714)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:241)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testEightEmptyFiles(SevenZOutputFileTest.java:191)"
        ],
        "error": "java.io.IOException",
        "message": "Unknown property 192"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testNineEmptyFiles",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(SevenZFile.java:728)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:241)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testNineEmptyFiles(SevenZOutputFileTest.java:199)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "0"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testSixFilesSomeNotEmpty",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:246)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testSixFilesSomeNotEmpty(SevenZOutputFileTest.java:179)"
        ],
        "error": "java.io.IOException",
        "message": "Badly terminated header"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testNineFilesSomeNotEmpty",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(SevenZFile.java:714)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:241)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testNineFilesSomeNotEmpty(SevenZOutputFileTest.java:203)"
        ],
        "error": "java.io.IOException",
        "message": "Unknown property 128"
      },
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest",
        "methodName": "testSevenFilesSomeNotEmpty",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(SevenZFile.java:714)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(SevenZFile.java:241)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:197)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.verifyCompress252(SevenZOutputFileTest.java:226)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testCompress252(SevenZOutputFileTest.java:221)",
          "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest.testSevenFilesSomeNotEmpty(SevenZOutputFileTest.java:187)"
        ],
        "error": "java.io.IOException",
        "message": "Unknown property 128"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 22,
    "changedFiles": {
      "org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
        "modified": [
          [
            67
          ],
          [
            135
          ],
          [
            199
          ],
          [
            853
          ],
          [
            871
          ],
          [
            913
          ],
          [
            942
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test",
        "methodName": "testPartialReadTruncatedData",
        "stackTrace": [
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsR(BZip2CompressorInputStream.java:384)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsGetUByte(BZip2CompressorInputStream.java:419)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.initBlock(BZip2CompressorInputStream.java:276)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartA(BZip2CompressorInputStream.java:878)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartB(BZip2CompressorInputStream.java:928)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read0(BZip2CompressorInputStream.java:222)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(BZip2CompressorInputStream.java:174)",
          "java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:385)",
          "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test.testPartialReadTruncatedData(PythonTruncatedBzip2Test.java:92)"
        ],
        "error": "java.io.IOException",
        "message": "unexpected end of stream"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 23,
    "changedFiles": {
      "org/apache/commons/compress/archivers/sevenz/Coders.java": {
        "modified": [
          [
            112
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZFileTest",
        "methodName": "testCompressedHeaderWithNonDefaultDictionarySize",
        "stackTrace": [
          "org.tukaani.xz.LZMAInputStream.initialize(Unknown Source)",
          "org.tukaani.xz.LZMAInputStream.<init>(Unknown Source)",
          "org.apache.commons.compress.archivers.sevenz.Coders$LZMADecoder.decode(Coders.java:117)",
          "org.apache.commons.compress.archivers.sevenz.Coders.addDecoder(Coders.java:48)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readEncodedHeader(SevenZFile.java:278)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(SevenZFile.java:190)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:94)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.<init>(SevenZFile.java:116)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFileTest.testCompressedHeaderWithNonDefaultDictionarySize(SevenZFileTest.java:79)"
        ],
        "error": "org.tukaani.xz.UnsupportedOptionsException",
        "message": "LZMA dictionary is too big for this implementation"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 24,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            129
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarUtilsTest",
        "methodName": "testParseOctal",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarUtils.parseOctal(TarUtils.java:132)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(TarUtilsTest.java:53)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid byte 55 at offset 11 in '777777777777' len=12"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 25,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
        "modified": [
          [
            184
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest",
        "methodName": "testReadingOfFirstStoredEntry",
        "stackTrace": [
          "org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)",
          "org.junit.Assert.internalArrayEquals(Assert.java:473)",
          "org.junit.Assert.assertArrayEquals(Assert.java:294)",
          "org.junit.Assert.assertArrayEquals(Assert.java:305)",
          "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testReadingOfFirstStoredEntry(ZipArchiveInputStreamTest.java:166)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "arrays first differed at element [0]; expected:<100> but was:<0>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 26,
    "changedFiles": {
      "org/apache/commons/compress/utils/IOUtils.java": {
        "modified": [
          [
            104
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.utils.IOUtilsTest",
        "methodName": "skipUsingRead",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.utils.IOUtilsTest.skip(IOUtilsTest.java:80)",
          "org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(IOUtilsTest.java:45)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<0>"
      },
      {
        "className": "org.apache.commons.compress.utils.IOUtilsTest",
        "methodName": "skipUsingSkipAndRead",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.utils.IOUtilsTest.skip(IOUtilsTest.java:80)",
          "org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkipAndRead(IOUtilsTest.java:58)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10> but was:<5>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 27,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            133
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarUtilsTest",
        "methodName": "testParseOctal",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarUtils.parseOctal(TarUtils.java:134)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(TarUtilsTest.java:68)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid byte 32 at offset 1 in ' {NUL}' len=2"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 28,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
        "modified": [
          [
            583
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
        "methodName": "shouldThrowAnExceptionOnTruncatedEntries",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.io.IOException"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 29,
    "changedFiles": {
      "org/apache/commons/compress/archivers/ArchiveStreamFactory.java": {
        "modified": [
          [
            297
          ],
          [
            360
          ]
        ]
      },
      "org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.java": {
        "modified": [
          [
            97
          ],
          [
            155
          ]
        ]
      },
      "org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java": {
        "modified": [
          [
            98
          ],
          [
            162
          ]
        ]
      },
      "org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.java": {
        "modified": [
          [
            80
          ],
          [
            104
          ]
        ]
      },
      "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
        "modified": [
          [
            79
          ],
          [
            142
          ]
        ]
      },
      "org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java": {
        "modified": [
          [
            90
          ],
          [
            155
          ]
        ]
      },
      "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
        "modified": [
          [
            65
          ],
          [
            184
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
        "methodName": "testEncodingInputStream",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStream(ArchiveStreamFactoryTest.java:319)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Tests failed: 20"
      },
      {
        "className": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
        "methodName": "testEncodingInputStreamAutodetect",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingInputStreamAutodetect(ArchiveStreamFactoryTest.java:302)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Tests failed: 24"
      },
      {
        "className": "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest",
        "methodName": "testEncodingOutputStream",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest.testEncodingOutputStream(ArchiveStreamFactoryTest.java:338)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Tests failed: 14"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 30,
    "changedFiles": {
      "org/apache/commons/compress/compressors/bzip2/BZip2CompressorInputStream.java": {
        "modified": [
          [
            168
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest",
        "methodName": "readOfLength0ShouldReturn0",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest.readOfLength0ShouldReturn0(BZip2CompressorInputStreamTest.java:67)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<-1>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 31,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            135
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.TarTestCase",
        "methodName": "testCOMPRESS178",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS178(TarTestCase.java:325)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected IOException"
      },
      {
        "className": "org.apache.commons.compress.archivers.tar.TarUtilsTest",
        "methodName": "testParseOctalInvalid",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(TarUtilsTest.java:108)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected IllegalArgumentException - embedded NUL"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 32,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
        "modified": [
          [
            501
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
        "methodName": "shouldReadBigGid",
        "stackTrace": [
          "java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)",
          "java.lang.Integer.parseInt(Integer.java:583)",
          "java.lang.Integer.parseInt(Integer.java:615)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.applyPaxHeadersToCurrentEntry(TarArchiveInputStream.java:501)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.paxHeaders(TarArchiveInputStream.java:431)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:311)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldReadBigGid(TarArchiveInputStreamTest.java:254)"
        ],
        "error": "java.lang.NumberFormatException",
        "message": "For input string: \"4294967294\""
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 33,
    "changedFiles": {
      "org/apache/commons/compress/compressors/CompressorStreamFactory.java": {
        "modified": [
          [
            240
          ]
        ]
      },
      "org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.java": {
        "modified": [
          [
            33
          ],
          [
            106
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.compressors.DetectCompressorTestCase",
        "methodName": "testDetection",
        "stackTrace": [
          "org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(CompressorStreamFactory.java:255)",
          "org.apache.commons.compress.compressors.DetectCompressorTestCase.getStreamFor(DetectCompressorTestCase.java:165)",
          "org.apache.commons.compress.compressors.DetectCompressorTestCase.testDetection(DetectCompressorTestCase.java:108)"
        ],
        "error": "org.apache.commons.compress.compressors.CompressorException",
        "message": "No Compressor found for the stream signature."
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 34,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/X7875_NewUnix.java": {
        "modified": [
          [
            58
          ],
          [
            146
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest",
        "methodName": "testParseReparse",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest.parseReparse(X7875_NewUnixTest.java:236)",
          "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest.testParseReparse(X7875_NewUnixTest.java:168)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<5>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 35,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            594
          ],
          [
            602
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.DetectArchiverTestCase",
        "methodName": "testCOMPRESS335",
        "stackTrace": [
          "org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveInputStream(ArchiveStreamFactory.java:397)",
          "org.apache.commons.compress.DetectArchiverTestCase.getStreamFor(DetectArchiverTestCase.java:101)",
          "org.apache.commons.compress.DetectArchiverTestCase.testCOMPRESS335(DetectArchiverTestCase.java:60)"
        ],
        "error": "org.apache.commons.compress.archivers.ArchiveException",
        "message": "No Archiver found for the stream signature"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 36,
    "changedFiles": {
      "org/apache/commons/compress/archivers/sevenz/SevenZFile.java": {
        "modified": [
          [
            902
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.sevenz.SevenZFileTest",
        "methodName": "readEntriesOfSize0",
        "stackTrace": [
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.getCurrentStream(SevenZFile.java:903)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFile.read(SevenZFile.java:898)",
          "org.apache.commons.compress.archivers.sevenz.SevenZFileTest.readEntriesOfSize0(SevenZFileTest.java:274)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "No current 7z entry (call getNextEntry() first)."
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 37,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveInputStream.java": {
        "modified": [
          [
            462
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
        "methodName": "survivesBlankLinesInPaxHeader",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.parsePaxHeaders(TarArchiveInputStream.java:474)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.paxHeaders(TarArchiveInputStream.java:444)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:319)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.survivesBlankLinesInPaxHeader(TarArchiveInputStreamTest.java:308)"
        ],
        "error": "java.lang.NegativeArraySizeException",
        "message": ""
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 38,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarArchiveEntry.java": {
        "modified": [
          [
            859
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest",
        "methodName": "survivesPaxHeaderWithNameEndingInSlash",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:286)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextEntry(TarArchiveInputStream.java:600)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.paxHeaders(TarArchiveInputStream.java:445)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:319)",
          "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.survivesPaxHeaderWithNameEndingInSlash(TarArchiveInputStreamTest.java:323)"
        ],
        "error": "java.io.IOException",
        "message": "Error detected parsing the header"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 39,
    "changedFiles": {
      "org/apache/commons/compress/utils/ArchiveUtils.java": {
        "modified": [
          [
            31
          ],
          [
            273
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.ArchiveUtilsTest",
        "methodName": "sanitizeShortensString",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.compress.ArchiveUtilsTest.sanitizeShortensString(ArchiveUtilsTest.java:82)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...23456789012345678901[...]> but was:<...23456789012345678901[234567890123456789012345678901234567890123456789]>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 40,
    "changedFiles": {
      "org/apache/commons/compress/utils/BitInputStream.java": {
        "modified": [
          [
            85
          ],
          [
            98
          ],
          [
            108
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.utils.BitInputStreamTest",
        "methodName": "littleEndianWithOverflow",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.utils.BitInputStreamTest.littleEndianWithOverflow(BitInputStreamTest.java:143)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1186> but was:<1184>"
      },
      {
        "className": "org.apache.commons.compress.utils.BitInputStreamTest",
        "methodName": "bigEndianWithOverflow",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(BitInputStreamTest.java:165)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<8274274654740644818> but was:<203824122492715986>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 41,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
        "modified": [
          [
            247
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.ZipTestCase",
        "methodName": "testListAllFilesWithNestedArchive",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.compress.archivers.ZipTestCase.testListAllFilesWithNestedArchive(ZipTestCase.java:281)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      },
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest",
        "methodName": "testThrowOnInvalidEntry",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(ZipArchiveInputStreamTest.java:243)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "IOException expected"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 42,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/UnixStat.java": {
        "modified": [
          [
            35
          ]
        ]
      },
      "org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java": {
        "modified": [
          [
            297
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest",
        "methodName": "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.junit.Assert.assertFalse(Assert.java:74)",
          "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet(ZipArchiveEntryTest.java:280)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 43,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java": {
        "modified": [
          [
            1034
          ],
          [
            1075
          ],
          [
            1171
          ],
          [
            1492
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.DataDescriptorTest",
        "methodName": "doesntWriteDataDescriptorWhenAddingRawEntries",
        "stackTrace": [
          "org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)",
          "org.junit.Assert.internalArrayEquals(Assert.java:473)",
          "org.junit.Assert.assertArrayEquals(Assert.java:294)",
          "org.junit.Assert.assertArrayEquals(Assert.java:305)",
          "org.apache.commons.compress.archivers.zip.DataDescriptorTest.doesntWriteDataDescriptorWhenAddingRawEntries(DataDescriptorTest.java:162)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "arrays first differed at element [0]; expected:<0> but was:<8>"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 44,
    "changedFiles": {
      "org/apache/commons/compress/utils/ChecksumCalculatingInputStream.java": {
        "modified": [
          [
            35
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest",
        "methodName": "testClassInstantiationWithParameterBeingNullThrowsNullPointerExceptionOne",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.NullPointerException"
      },
      {
        "className": "org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest",
        "methodName": "testClassInstantiationWithParameterBeingNullThrowsNullPointerExceptionTwo",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.NullPointerException"
      },
      {
        "className": "org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest",
        "methodName": "testClassInstantiationWithParameterBeingNullThrowsNullPointerExceptionThree",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.NullPointerException"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 45,
    "changedFiles": {
      "org/apache/commons/compress/archivers/tar/TarUtils.java": {
        "modified": [
          [
            487
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.tar.TarUtilsTest",
        "methodName": "testRoundTripOctalOrBinary8",
        "stackTrace": [
          "org.apache.commons.compress.archivers.tar.TarUtils.formatBigIntegerBinary(TarUtils.java:523)",
          "org.apache.commons.compress.archivers.tar.TarUtils.formatLongOctalOrBinaryBytes(TarUtils.java:488)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.checkRoundTripOctalOrBinary(TarUtilsTest.java:141)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary(TarUtilsTest.java:163)",
          "org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary8(TarUtilsTest.java:148)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Value -72057594037927935 is too large for 8 byte field."
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 46,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java": {
        "modified": [
          [
            529
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest",
        "methodName": "testGettersSetters",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest.testGettersSetters(X5455_ExtendedTimestampTest.java:218)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Time too big for 32 bits!"
      }
    ]
  },
  {
    "project": "Compress",
    "bugId": 47,
    "changedFiles": {
      "org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.java": {
        "modified": [
          [
            415
          ],
          [
            440
          ],
          [
            809
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest",
        "methodName": "properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.junit.Assert.assertFalse(Assert.java:74)",
          "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(ZipArchiveInputStreamTest.java:339)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/csv/ExtendedBufferedReader.java": {
        "modified": [
          [
            58
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testGetLineNumberWithCR",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR(CSVParserTest.java:510)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 2,
    "changedFiles": {
      "org/apache/commons/csv/CSVRecord.java": {
        "modified": [
          [
            85
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVRecordTest",
        "methodName": "testGetStringInconsistentRecord",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.apache.commons.csv.CSVRecord.get(CSVRecord.java:85)",
          "org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord(CSVRecordTest.java:69)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<java.lang.IllegalArgumentException> but was<java.lang.ArrayIndexOutOfBoundsException>"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/csv/Lexer.java": {
        "modified": [
          [
            111
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVLexerTest",
        "methodName": "testEscapedMySqlNullValue",
        "stackTrace": [
          "org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)",
          "org.junit.Assert.assertThat(Assert.java:865)",
          "org.junit.Assert.assertThat(Assert.java:832)",
          "org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue(CSVLexerTest.java:335)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.csv.CSVLexerTest",
        "methodName": "testEscapedCharacter",
        "stackTrace": [
          "org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)",
          "org.junit.Assert.assertThat(Assert.java:865)",
          "org.junit.Assert.assertThat(Assert.java:832)",
          "org.apache.commons.csv.CSVLexerTest.testEscapedCharacter(CSVLexerTest.java:341)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testBackslashEscaping",
        "stackTrace": [
          "org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)",
          "org.junit.Assert.internalArrayEquals(Assert.java:473)",
          "org.junit.Assert.assertArrayEquals(Assert.java:265)",
          "org.apache.commons.csv.Utils.compare(Utils.java:59)",
          "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(CSVParserTest.java:322)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Records do not match expected result (entry 8): arrays first differed at element [1]; expected:<   \"quoted \"\" [/]\" / string\"   > but was:<   \"quoted \"\" []\" / string\"   >"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/csv/CSVParser.java": {
        "modified": [
          [
            288
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testNoHeaderMap",
        "stackTrace": [
          "java.util.HashMap.putMapEntries(HashMap.java:501)",
          "java.util.LinkedHashMap.<init>(LinkedHashMap.java:384)",
          "org.apache.commons.csv.CSVParser.getHeaderMap(CSVParser.java:288)",
          "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(CSVParserTest.java:670)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/csv/CSVPrinter.java": {
        "modified": [
          [
            325
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVFormatTest",
        "methodName": "testNullRecordSeparatorCsv106",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.junit.Assert.assertFalse(Assert.java:74)",
          "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(CSVFormatTest.java:237)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 6,
    "changedFiles": {
      "org/apache/commons/csv/CSVRecord.java": {
        "modified": [
          [
            182
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVRecordTest",
        "methodName": "testToMapWithShortRecord",
        "stackTrace": [
          "org.apache.commons.csv.CSVRecord.putIn(CSVRecord.java:182)",
          "org.apache.commons.csv.CSVRecord.toMap(CSVRecord.java:212)",
          "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(CSVRecordTest.java:167)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "2"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/csv/CSVParser.java": {
        "modified": [
          [
            32
          ],
          [
            371
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testDuplicateHeaderEntries",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.IllegalStateException"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/csv/CSVFormat.java": {
        "modified": [
          [
            316
          ],
          [
            665
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVFormatTest",
        "methodName": "testDuplicateHeaderElements",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.apache.commons.csv.CSVFormat.validate(CSVFormat.java:669)",
          "org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements(CSVFormatTest.java:66)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<java.lang.IllegalArgumentException> but was<java.lang.IllegalStateException>"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/csv/CSVRecord.java": {
        "modified": [
          [
            180
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVRecordTest",
        "methodName": "testToMapWithNoHeader",
        "stackTrace": [
          "org.apache.commons.csv.CSVRecord.putIn(CSVRecord.java:180)",
          "org.apache.commons.csv.CSVRecord.toMap(CSVRecord.java:214)",
          "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(CSVRecordTest.java:175)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/csv/CSVPrinter.java": {
        "modified": [
          [
            70
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testHeader",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testHeader(CSVPrinterTest.java:495)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[C1,C2,C3"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/csv/CSVParser.java": {
        "modified": [
          [
            384
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testHeaderMissingWithNull",
        "stackTrace": [
          "org.apache.commons.csv.CSVParser.initializeHeader(CSVParser.java:384)",
          "org.apache.commons.csv.CSVParser.<init>(CSVParser.java:250)",
          "org.apache.commons.csv.CSVFormat.parse(CSVFormat.java:611)",
          "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(CSVParserTest.java:670)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/csv/CSVFormat.java": {
        "modified": [
          [
            219
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testExcelHeaderCountLessThanData",
        "stackTrace": [
          "org.apache.commons.csv.CSVParser.initializeHeader(CSVParser.java:367)",
          "org.apache.commons.csv.CSVParser.<init>(CSVParser.java:248)",
          "org.apache.commons.csv.CSVParser.parse(CSVParser.java:178)",
          "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(CSVParserTest.java:380)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "The header contains a duplicate name: \"\" in [A, B, C, , ]"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/csv/CSVFormat.java": {
        "modified": [
          [
            319
          ]
        ]
      },
      "org/apache/commons/csv/CSVPrinter.java": {
        "modified": [
          [
            139
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testMySqlNullOutput",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(CSVPrinterTest.java:331)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<\"NULL\"\t[NULL]"
      },
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testMySqlNullStringDefault",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault(CSVPrinterTest.java:319)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<\\N> but was:<null>"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/csv/CSVFormat.java": {
        "modified": [
          [
            1039
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testEscapeNull1",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testEscapeNull1(CSVPrinterTest.java:346)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\\]> but was:<[\"\\\"]>"
      },
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testEscapeNull4",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testEscapeNull4(CSVPrinterTest.java:373)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\\\\]> but was:<[\"\\\\\"]>"
      },
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testEscapeNull5",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testEscapeNull5(CSVPrinterTest.java:382)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\\\\]> but was:<[\"\\\\\"]>"
      },
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testEscapeBackslash1",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1(CSVPrinterTest.java:301)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\\]> but was:<['\\']>"
      },
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testEscapeBackslash4",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4(CSVPrinterTest.java:328)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\\\\]> but was:<['\\\\']>"
      },
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testEscapeBackslash5",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5(CSVPrinterTest.java:337)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\\\\]> but was:<['\\\\']>"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/csv/CSVFormat.java": {
        "modified": [
          [
            1189
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVPrinterTest",
        "methodName": "testDontQuoteEuroFirstChar",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar(CSVPrinterTest.java:1040)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[\u20ac],Deux"
      }
    ]
  },
  {
    "project": "Csv",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/csv/CSVParser.java": {
        "modified": [
          [
            289
          ],
          [
            357
          ],
          [
            523
          ],
          [
            571
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.csv.CSVParserTest",
        "methodName": "testIteratorSequenceBreaking",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(CSVParserTest.java:1053)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[3]> but was:<[4]>"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 1,
    "changedFiles": {
      "com/google/gson/TypeInfoFactory.java": {
        "modified": [
          [
            93
          ],
          [
            109
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.TypeVariableTest",
        "methodName": "testSingle",
        "stackTrace": [
          "com.google.gson.TypeInfoFactory.getActualType(TypeInfoFactory.java:97)",
          "com.google.gson.TypeInfoFactory.getTypeInfoForField(TypeInfoFactory.java:54)",
          "com.google.gson.ObjectNavigator.navigateClassFields(ObjectNavigator.java:156)",
          "com.google.gson.ObjectNavigator.accept(ObjectNavigator.java:131)",
          "com.google.gson.JsonSerializationContextDefault.serialize(JsonSerializationContextDefault.java:56)",
          "com.google.gson.Gson.toJsonTree(Gson.java:231)",
          "com.google.gson.Gson.toJson(Gson.java:271)",
          "com.google.gson.Gson.toJson(Gson.java:251)",
          "com.google.gson.functional.TypeVariableTest.testSingle(TypeVariableTest.java:41)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": "Expecting parameterized type, got class com.google.gson.functional.TypeVariableTest$Bar."
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 2,
    "changedFiles": {
      "com/google/gson/internal/bind/TypeAdapters.java": {
        "modified": [
          [
            833
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.DefaultTypeAdaptersTest",
        "methodName": "testJsonElementTypeMismatch",
        "stackTrace": [
          "java.lang.Class.cast(Class.java:3369)",
          "com.google.gson.Gson.fromJson(Gson.java:701)",
          "com.google.gson.functional.DefaultTypeAdaptersTest.testJsonElementTypeMismatch(DefaultTypeAdaptersTest.java:623)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "Cannot cast com.google.gson.JsonPrimitive to com.google.gson.JsonObject"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 3,
    "changedFiles": {
      "com/google/gson/internal/ConstructorConstructor.java": {
        "modified": [
          [
            36
          ],
          [
            175
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.MapTest",
        "methodName": "testConcurrentMap",
        "stackTrace": [
          "com.google.gson.functional.MapTest.testConcurrentMap(MapTest.java:188)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "java.util.LinkedHashMap cannot be cast to java.util.concurrent.ConcurrentMap"
      },
      {
        "className": "com.google.gson.functional.MapTest",
        "methodName": "testConcurrentNavigableMap",
        "stackTrace": [
          "com.google.gson.functional.MapTest.testConcurrentNavigableMap(MapTest.java:208)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "java.util.TreeMap cannot be cast to java.util.concurrent.ConcurrentNavigableMap"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 4,
    "changedFiles": {
      "com/google/gson/stream/JsonReader.java": {
        "modified": [
          [
            574
          ],
          [
            585
          ]
        ]
      },
      "com/google/gson/stream/JsonWriter.java": {
        "modified": [
          [
            325
          ],
          [
            418
          ],
          [
            435
          ],
          [
            454
          ],
          [
            466
          ],
          [
            483
          ],
          [
            495
          ],
          [
            518
          ],
          [
            613
          ],
          [
            622
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.stream.JsonReaderTest",
        "methodName": "testTopLevelValueTypeWithSkipValue",
        "stackTrace": [
          "com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1572)",
          "com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1422)",
          "com.google.gson.stream.JsonReader.doPeek(JsonReader.java:586)",
          "com.google.gson.stream.JsonReader.skipValue(JsonReader.java:1236)",
          "com.google.gson.stream.JsonReaderTest.testTopLevelValueTypeWithSkipValue(JsonReaderTest.java:1251)"
        ],
        "error": "com.google.gson.stream.MalformedJsonException",
        "message": "Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $"
      },
      {
        "className": "com.google.gson.stream.JsonReaderTest",
        "methodName": "testTopLevelValueTypes",
        "stackTrace": [
          "com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1572)",
          "com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1422)",
          "com.google.gson.stream.JsonReader.doPeek(JsonReader.java:586)",
          "com.google.gson.stream.JsonReader.nextBoolean(JsonReader.java:854)",
          "com.google.gson.stream.JsonReaderTest.testTopLevelValueTypes(JsonReaderTest.java:1224)"
        ],
        "error": "com.google.gson.stream.MalformedJsonException",
        "message": "Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 1 path $"
      },
      {
        "className": "com.google.gson.stream.JsonWriterTest",
        "methodName": "testTopLevelValueTypes",
        "stackTrace": [
          "com.google.gson.stream.JsonWriter.beforeValue(JsonWriter.java:623)",
          "com.google.gson.stream.JsonWriter.value(JsonWriter.java:466)",
          "com.google.gson.stream.JsonWriterTest.testTopLevelValueTypes(JsonWriterTest.java:31)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "JSON must start with an array or an object."
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 5,
    "changedFiles": {
      "com/google/gson/internal/bind/util/ISO8601Utils.java": {
        "modified": [
          [
            214
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.DefaultDateTypeAdapterTest",
        "methodName": "testDateDeserializationISO8601",
        "stackTrace": [
          "com.google.gson.DefaultDateTypeAdapter.deserializeToDate(DefaultDateTypeAdapter.java:107)",
          "com.google.gson.DefaultDateTypeAdapter.deserialize(DefaultDateTypeAdapter.java:84)",
          "com.google.gson.DefaultDateTypeAdapterTest.assertParsed(DefaultDateTypeAdapterTest.java:168)",
          "com.google.gson.DefaultDateTypeAdapterTest.testDateDeserializationISO8601(DefaultDateTypeAdapterTest.java:133)"
        ],
        "error": "com.google.gson.JsonSyntaxException",
        "message": "1970-01-01T01:00:00+01"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 6,
    "changedFiles": {
      "com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java": {
        "modified": [
          [
            67
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.regression.JsonAdapterNullSafeTest",
        "methodName": "testNullSafeBugDeserialize",
        "stackTrace": [
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(JsonAdapterAnnotationTypeAdapterFactory.java:67)",
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(JsonAdapterAnnotationTypeAdapterFactory.java:47)",
          "com.google.gson.Gson.getDelegateAdapter(Gson.java:498)",
          "com.google.gson.regression.JsonAdapterNullSafeTest$Device$JsonAdapterFactory.create(JsonAdapterNullSafeTest.java:58)",
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(JsonAdapterAnnotationTypeAdapterFactory.java:60)",
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(JsonAdapterAnnotationTypeAdapterFactory.java:47)",
          "com.google.gson.Gson.getAdapter(Gson.java:416)",
          "com.google.gson.Gson.fromJson(Gson.java:878)",
          "com.google.gson.Gson.fromJson(Gson.java:844)",
          "com.google.gson.Gson.fromJson(Gson.java:793)",
          "com.google.gson.Gson.fromJson(Gson.java:765)",
          "com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugDeserialize(JsonAdapterNullSafeTest.java:35)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "com.google.gson.regression.JsonAdapterNullSafeTest",
        "methodName": "testNullSafeBugSerialize",
        "stackTrace": [
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(JsonAdapterAnnotationTypeAdapterFactory.java:67)",
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(JsonAdapterAnnotationTypeAdapterFactory.java:47)",
          "com.google.gson.Gson.getDelegateAdapter(Gson.java:498)",
          "com.google.gson.regression.JsonAdapterNullSafeTest$Device$JsonAdapterFactory.create(JsonAdapterNullSafeTest.java:58)",
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(JsonAdapterAnnotationTypeAdapterFactory.java:60)",
          "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.create(JsonAdapterAnnotationTypeAdapterFactory.java:47)",
          "com.google.gson.Gson.getAdapter(Gson.java:416)",
          "com.google.gson.Gson.toJson(Gson.java:653)",
          "com.google.gson.Gson.toJson(Gson.java:640)",
          "com.google.gson.Gson.toJson(Gson.java:595)",
          "com.google.gson.Gson.toJson(Gson.java:575)",
          "com.google.gson.regression.JsonAdapterNullSafeTest.testNullSafeBugSerialize(JsonAdapterNullSafeTest.java:31)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 7,
    "changedFiles": {
      "com/google/gson/stream/JsonReader.java": {
        "modified": [
          [
            954
          ],
          [
            1182
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.MapTest",
        "methodName": "testMapDeserializationWithUnquotedLongKeys",
        "stackTrace": [
          "com.google.gson.Gson.fromJson(Gson.java:892)",
          "com.google.gson.Gson.fromJson(Gson.java:845)",
          "com.google.gson.Gson.fromJson(Gson.java:794)",
          "com.google.gson.functional.MapTest.testMapDeserializationWithUnquotedLongKeys(MapTest.java:192)"
        ],
        "error": "com.google.gson.JsonSyntaxException",
        "message": "java.lang.IllegalStateException: Expected a long but was STRING at line 1 column 2 path $."
      },
      {
        "className": "com.google.gson.functional.MapTest",
        "methodName": "testMapDeserializationWithUnquotedIntegerKeys",
        "stackTrace": [
          "com.google.gson.Gson.fromJson(Gson.java:892)",
          "com.google.gson.Gson.fromJson(Gson.java:845)",
          "com.google.gson.Gson.fromJson(Gson.java:794)",
          "com.google.gson.functional.MapTest.testMapDeserializationWithUnquotedIntegerKeys(MapTest.java:172)"
        ],
        "error": "com.google.gson.JsonSyntaxException",
        "message": "java.lang.IllegalStateException: Expected an int but was STRING at line 1 column 2 path $."
      },
      {
        "className": "com.google.gson.stream.JsonReaderTest",
        "methodName": "testPeekingUnquotedStringsPrefixedWithIntegers",
        "stackTrace": [
          "com.google.gson.stream.JsonReader.nextInt(JsonReader.java:1193)",
          "com.google.gson.stream.JsonReaderTest.testPeekingUnquotedStringsPrefixedWithIntegers(JsonReaderTest.java:502)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Expected an int but was STRING at line 1 column 2 path $[0]"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 8,
    "changedFiles": {
      "com/google/gson/internal/UnsafeAllocator.java": {
        "modified": [
          [
            23
          ],
          [
            48
          ],
          [
            71
          ],
          [
            90
          ],
          [
            110
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.internal.UnsafeAllocatorInstantiationTest",
        "methodName": "testInterfaceInstantiation",
        "stackTrace": [
          "com.google.gson.internal.UnsafeAllocatorInstantiationTest.testInterfaceInstantiation(UnsafeAllocatorInstantiationTest.java:45)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<class java.lang.reflect.InvocationTargetException> but was:<class java.lang.UnsupportedOperationException>"
      },
      {
        "className": "com.google.gson.internal.UnsafeAllocatorInstantiationTest",
        "methodName": "testAbstractClassInstantiation",
        "stackTrace": [
          "com.google.gson.internal.UnsafeAllocatorInstantiationTest.testAbstractClassInstantiation(UnsafeAllocatorInstantiationTest.java:59)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<class java.lang.reflect.InvocationTargetException> but was:<class java.lang.UnsupportedOperationException>"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 9,
    "changedFiles": {
      "com/google/gson/internal/bind/JsonTreeWriter.java": {
        "modified": [
          [
            162
          ]
        ]
      },
      "com/google/gson/internal/bind/TypeAdapters.java": {
        "modified": [
          [
            165
          ]
        ]
      },
      "com/google/gson/stream/JsonWriter.java": {
        "modified": [
          [
            476
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.stream.JsonWriterTest",
        "methodName": "testBoxedBooleans",
        "stackTrace": [
          "com.google.gson.stream.JsonWriterTest.testBoxedBooleans(JsonWriterTest.java:292)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 10,
    "changedFiles": {
      "com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java": {
        "modified": [
          [
            122
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest",
        "methodName": "testPrimitiveFieldAnnotationTakesPrecedenceOverDefault",
        "stackTrace": [
          "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault(JsonAdapterAnnotationOnFieldsTest.java:236)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"part\":[\"42\"]}> but was:<{\"part\":[42]}>"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 11,
    "changedFiles": {
      "com/google/gson/internal/bind/TypeAdapters.java": {
        "modified": [
          [
            371
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.PrimitiveTest",
        "methodName": "testNumberAsStringDeserialization",
        "stackTrace": [
          "com.google.gson.internal.bind.TypeAdapters$15.read(TypeAdapters.java:373)",
          "com.google.gson.internal.bind.TypeAdapters$15.read(TypeAdapters.java:362)",
          "com.google.gson.Gson.fromJson(Gson.java:887)",
          "com.google.gson.Gson.fromJson(Gson.java:852)",
          "com.google.gson.Gson.fromJson(Gson.java:801)",
          "com.google.gson.Gson.fromJson(Gson.java:773)",
          "com.google.gson.functional.PrimitiveTest.testNumberAsStringDeserialization(PrimitiveTest.java:162)"
        ],
        "error": "com.google.gson.JsonSyntaxException",
        "message": "Expecting number, got: STRING"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 12,
    "changedFiles": {
      "com/google/gson/internal/bind/JsonTreeReader.java": {
        "modified": [
          [
            262
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.internal.bind.JsonTreeReaderTest",
        "methodName": "testSkipValue_filledJsonObject",
        "stackTrace": [
          "com.google.gson.internal.bind.JsonTreeReader.skipValue(JsonTreeReader.java:262)",
          "com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject(JsonTreeReaderTest.java:47)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "-1"
      },
      {
        "className": "com.google.gson.internal.bind.JsonTreeReaderTest",
        "methodName": "testSkipValue_emptyJsonObject",
        "stackTrace": [
          "com.google.gson.internal.bind.JsonTreeReader.skipValue(JsonTreeReader.java:262)",
          "com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_emptyJsonObject(JsonTreeReaderTest.java:29)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "-1"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 13,
    "changedFiles": {
      "com/google/gson/stream/JsonReader.java": {
        "modified": [
          [
            731
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.stream.JsonReaderTest",
        "methodName": "testNegativeZero",
        "stackTrace": [
          "com.google.gson.stream.JsonReaderTest.testNegativeZero(JsonReaderTest.java:573)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[-]0> but was:<[]0>"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 14,
    "changedFiles": {
      "com/google/gson/internal/$Gson$Types.java": {
        "modified": [
          [
            79
          ],
          [
            90
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testDoubleSupertype",
        "stackTrace": [
          "com.google.gson.internal.bind.RecursiveTypesResolveTest.testDoubleSupertype(RecursiveTypesResolveTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<? super java.lang.Number> but was:<? super ? super java.lang.Number>"
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testIssue440WeakReference",
        "stackTrace": [
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:158)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testSubSupertype",
        "stackTrace": [
          "com.google.gson.internal.bind.RecursiveTypesResolveTest.testSubSupertype(RecursiveTypesResolveTest.java:86)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<?> but was:<? extends ? super java.lang.Number>"
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testDoubleSubtype",
        "stackTrace": [
          "com.google.gson.internal.bind.RecursiveTypesResolveTest.testDoubleSubtype(RecursiveTypesResolveTest.java:76)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<? extends java.lang.Number> but was:<? extends ? extends java.lang.Number>"
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testIssue603PrintStream",
        "stackTrace": [
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:378)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:362)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:158)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:164)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:100)",
          "com.google.gson.Gson.getAdapter(Gson.java:423)",
          "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(ReflectiveTypeAdapterFactory.java:115)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testSuperSubtype",
        "stackTrace": [
          "com.google.gson.internal.bind.RecursiveTypesResolveTest.testSuperSubtype(RecursiveTypesResolveTest.java:81)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<?> but was:<? super ? extends java.lang.Number>"
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testRecursiveResolveSimple",
        "stackTrace": [
          "com.google.gson.internal.$Gson$Types.declaringClassOf($Gson$Types.java:431)",
          "com.google.gson.internal.$Gson$Types.resolveTypeVariable($Gson$Types.java:401)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:333)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:382)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:387)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 15,
    "changedFiles": {
      "com/google/gson/stream/JsonWriter.java": {
        "modified": [
          [
            495
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.stream.JsonWriterTest",
        "methodName": "testNonFiniteDoublesWhenLenient",
        "stackTrace": [
          "com.google.gson.stream.JsonWriter.value(JsonWriter.java:496)",
          "com.google.gson.stream.JsonWriterTest.testNonFiniteDoublesWhenLenient(JsonWriterTest.java:222)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Numeric values must be finite, but was NaN"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 16,
    "changedFiles": {
      "com/google/gson/internal/$Gson$Types.java": {
        "modified": [
          [
            342
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testRecursiveTypeVariablesResolve12",
        "stackTrace": [
          "java.lang.String.lastIndexOf(String.java:1611)",
          "sun.reflect.misc.ReflectUtil.isNonPublicProxyClass(ReflectUtil.java:287)",
          "sun.reflect.misc.ReflectUtil.checkPackageAccess(ReflectUtil.java:165)",
          "sun.reflect.generics.reflectiveObjects.TypeVariableImpl.getGenericDeclaration(TypeVariableImpl.java:164)",
          "sun.reflect.generics.reflectiveObjects.TypeVariableImpl.equals(TypeVariableImpl.java:189)",
          "com.google.gson.internal.$Gson$Types.indexOf($Gson$Types.java:429)",
          "com.google.gson.internal.$Gson$Types.resolveTypeVariable($Gson$Types.java:420)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:343)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      },
      {
        "className": "com.google.gson.internal.bind.RecursiveTypesResolveTest",
        "methodName": "testRecursiveTypeVariablesResolve1",
        "stackTrace": [
          "sun.reflect.generics.repository.GenericDeclRepository.getTypeParameters(GenericDeclRepository.java:83)",
          "java.lang.Class.getTypeParameters(Class.java:715)",
          "com.google.gson.internal.$Gson$Types.resolveTypeVariable($Gson$Types.java:420)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:343)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)",
          "com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:392)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 17,
    "changedFiles": {
      "com/google/gson/DefaultDateTypeAdapter.java": {
        "modified": [
          [
            99
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.DefaultDateTypeAdapterTest",
        "methodName": "testUnexpectedToken",
        "stackTrace": [
          "com.google.gson.DefaultDateTypeAdapter.read(DefaultDateTypeAdapter.java:100)",
          "com.google.gson.DefaultDateTypeAdapter.read(DefaultDateTypeAdapter.java:40)",
          "com.google.gson.TypeAdapter.fromJson(TypeAdapter.java:260)",
          "com.google.gson.TypeAdapter.fromJson(TypeAdapter.java:273)",
          "com.google.gson.DefaultDateTypeAdapterTest.testUnexpectedToken(DefaultDateTypeAdapterTest.java:173)"
        ],
        "error": "com.google.gson.JsonParseException",
        "message": "The date should be a string value"
      },
      {
        "className": "com.google.gson.DefaultDateTypeAdapterTest",
        "methodName": "testNullValue",
        "stackTrace": [
          "com.google.gson.DefaultDateTypeAdapter.read(DefaultDateTypeAdapter.java:100)",
          "com.google.gson.DefaultDateTypeAdapter.read(DefaultDateTypeAdapter.java:40)",
          "com.google.gson.TypeAdapter.fromJson(TypeAdapter.java:260)",
          "com.google.gson.TypeAdapter.fromJson(TypeAdapter.java:273)",
          "com.google.gson.DefaultDateTypeAdapterTest.testNullValue(DefaultDateTypeAdapterTest.java:166)"
        ],
        "error": "com.google.gson.JsonParseException",
        "message": "The date should be a string value"
      }
    ]
  },
  {
    "project": "Gson",
    "bugId": 18,
    "changedFiles": {
      "com/google/gson/internal/$Gson$Types.java": {
        "modified": [
          [
            278
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.google.gson.functional.CollectionTest",
        "methodName": "testIssue1107",
        "stackTrace": [
          "com.google.gson.functional.CollectionTest.testIssue1107(CollectionTest.java:410)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "com.google.gson.internal.LinkedTreeMap cannot be cast to com.google.gson.functional.CollectionTest$SmallClass"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 1,
    "changedFiles": {
      "com/fasterxml/jackson/core/io/NumberInput.java": {
        "modified": [
          [
            295
          ],
          [
            305
          ]
        ]
      },
      "com/fasterxml/jackson/core/util/TextBuffer.java": {
        "modified": [
          [
            390
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestParserNonStandard",
        "methodName": "testAllowNaN",
        "stackTrace": [
          "com.fasterxml.jackson.test.BaseTest.verifyException(BaseTest.java:355)",
          "com.fasterxml.jackson.core.json.TestParserNonStandard._testAllowNaN(TestParserNonStandard.java:394)",
          "com.fasterxml.jackson.core.json.TestParserNonStandard.testAllowNaN(TestParserNonStandard.java:63)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([can not be represented as BigDecimal]): got one with message \"null\""
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 2,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java": {
        "modified": [
          [
            952
          ],
          [
            1081
          ],
          [
            1162
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java": {
        "modified": [
          [
            1244
          ],
          [
            1280
          ],
          [
            1407
          ],
          [
            1421
          ],
          [
            2575
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestParserErrorHandling",
        "methodName": "testMangledNumbersBytes",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestParserErrorHandling._testMangledNumbers(TestParserErrorHandling.java:93)",
          "com.fasterxml.jackson.core.json.TestParserErrorHandling.testMangledNumbersBytes(TestParserErrorHandling.java:22)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should have gotten an exception; instead got token: VALUE_NUMBER_INT"
      },
      {
        "className": "com.fasterxml.jackson.core.json.TestParserErrorHandling",
        "methodName": "testMangledNumbersChars",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestParserErrorHandling._testMangledNumbers(TestParserErrorHandling.java:93)",
          "com.fasterxml.jackson.core.json.TestParserErrorHandling.testMangledNumbersChars(TestParserErrorHandling.java:26)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should have gotten an exception; instead got token: VALUE_NUMBER_INT"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 3,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java": {
        "modified": [
          [
            125
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestLocation",
        "methodName": "testOffsetWithInputOffset",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestLocation.testOffsetWithInputOffset(TestLocation.java:68)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<3>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 4,
    "changedFiles": {
      "com/fasterxml/jackson/core/util/TextBuffer.java": {
        "modified": [
          [
            585
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.util.TestTextBuffer",
        "methodName": "testExpand",
        "stackTrace": [
          "com.fasterxml.jackson.core.util.TestTextBuffer.testExpand(TestTextBuffer.java:76)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected buffer of 262145 to expand, did not, length now 262144"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 5,
    "changedFiles": {
      "com/fasterxml/jackson/core/JsonPointer.java": {
        "modified": [
          [
            193
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.TestJsonPointer",
        "methodName": "testWonkyNumber173",
        "stackTrace": [
          "java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)",
          "java.lang.Integer.parseInt(Integer.java:580)",
          "java.lang.Integer.parseInt(Integer.java:615)",
          "com.fasterxml.jackson.core.io.NumberInput.parseInt(NumberInput.java:91)",
          "com.fasterxml.jackson.core.JsonPointer._parseIndex(JsonPointer.java:204)",
          "com.fasterxml.jackson.core.JsonPointer.<init>(JsonPointer.java:70)",
          "com.fasterxml.jackson.core.JsonPointer._parseTail(JsonPointer.java:225)",
          "com.fasterxml.jackson.core.JsonPointer.compile(JsonPointer.java:98)",
          "com.fasterxml.jackson.core.TestJsonPointer.testWonkyNumber173(TestJsonPointer.java:41)"
        ],
        "error": "java.lang.NumberFormatException",
        "message": "For input string: \"1e0\""
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 6,
    "changedFiles": {
      "com/fasterxml/jackson/core/JsonPointer.java": {
        "modified": [
          [
            193
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.TestJsonPointer",
        "methodName": "testIZeroIndex",
        "stackTrace": [
          "com.fasterxml.jackson.core.TestJsonPointer.testIZeroIndex(TestJsonPointer.java:51)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 7,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/JsonWriteContext.java": {
        "modified": [
          [
            169
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.GeneratorFailTest",
        "methodName": "testFailOnWritingStringNotFieldNameBytes",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.GeneratorFailTest._testFailOnWritingStringNotFieldName(GeneratorFailTest.java:79)",
          "com.fasterxml.jackson.core.json.GeneratorFailTest.testFailOnWritingStringNotFieldNameBytes(GeneratorFailTest.java:27)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not have let com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString() be used in place of 'writeFieldName()': output = {:\"a\""
      },
      {
        "className": "com.fasterxml.jackson.core.json.GeneratorFailTest",
        "methodName": "testFailOnWritingStringNotFieldNameChars",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.GeneratorFailTest._testFailOnWritingStringNotFieldName(GeneratorFailTest.java:79)",
          "com.fasterxml.jackson.core.json.GeneratorFailTest.testFailOnWritingStringNotFieldNameChars(GeneratorFailTest.java:32)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not have let com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString() be used in place of 'writeFieldName()': output = {:\"a\""
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 8,
    "changedFiles": {
      "com/fasterxml/jackson/core/util/TextBuffer.java": {
        "modified": [
          [
            307
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.util.TestTextBuffer",
        "methodName": "testEmpty",
        "stackTrace": [
          "com.fasterxml.jackson.core.util.TestTextBuffer.testEmpty(TestTextBuffer.java:83)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 9,
    "changedFiles": {
      "com/fasterxml/jackson/core/base/ParserMinimalBase.java": {
        "modified": [
          [
            392
          ],
          [
            400
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java": {
        "modified": [
          [
            253
          ],
          [
            266
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java": {
        "modified": [
          [
            305
          ],
          [
            319
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestJsonParser",
        "methodName": "testGetValueAsTextBytes",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestJsonParser._testGetValueAsText(TestJsonParser.java:546)",
          "com.fasterxml.jackson.core.json.TestJsonParser.testGetValueAsTextBytes(TestJsonParser.java:518)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<a> but was:<null>"
      },
      {
        "className": "com.fasterxml.jackson.core.json.TestJsonParser",
        "methodName": "testGetValueAsTextChars",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestJsonParser._testGetValueAsText(TestJsonParser.java:546)",
          "com.fasterxml.jackson.core.json.TestJsonParser.testGetValueAsTextChars(TestJsonParser.java:525)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<a> but was:<null>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 10,
    "changedFiles": {
      "com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java": {
        "modified": [
          [
            925
          ],
          [
            984
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.sym.TestByteBasedSymbols",
        "methodName": "testIssue207",
        "stackTrace": [
          "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(ByteQuadsCanonicalizer.java:853)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(UTF8StreamJsonParser.java:2340)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseEscapedName(UTF8StreamJsonParser.java:1980)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.slowParseName(UTF8StreamJsonParser.java:1867)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1651)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:740)",
          "com.fasterxml.jackson.core.sym.TestByteBasedSymbols.testIssue207(TestByteBasedSymbols.java:119)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "256"
      },
      {
        "className": "com.fasterxml.jackson.core.sym.TestSymbolTables",
        "methodName": "testCollisionsWithBytesNew187b",
        "stackTrace": [
          "com.fasterxml.jackson.core.sym.TestSymbolTables.testCollisionsWithBytesNew187b(TestSymbolTables.java:316)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<16384> but was:<32768>"
      },
      {
        "className": "com.fasterxml.jackson.core.sym.TestSymbolTables",
        "methodName": "testSyntheticWithBytesNew",
        "stackTrace": [
          "com.fasterxml.jackson.core.sym.TestSymbolTables.testSyntheticWithBytesNew(TestSymbolTables.java:82)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<8534> but was:<8524>"
      },
      {
        "className": "com.fasterxml.jackson.core.sym.TestSymbolTables",
        "methodName": "testShortNameCollisionsDirectNew",
        "stackTrace": [
          "com.fasterxml.jackson.core.sym.TestSymbolTables.testShortNameCollisionsDirectNew(TestSymbolTables.java:473)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1024> but was:<2048>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 11,
    "changedFiles": {
      "com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java": {
        "modified": [
          [
            882
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.sym.SymbolsViaParserTest",
        "methodName": "testSymbolTableExpansionBytes",
        "stackTrace": [
          "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(ByteQuadsCanonicalizer.java:824)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(UTF8StreamJsonParser.java:2340)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(UTF8StreamJsonParser.java:2185)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1691)",
          "com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:740)",
          "com.fasterxml.jackson.core.sym.SymbolsViaParserTest._testSymbolTableExpansion(SymbolsViaParserTest.java:87)",
          "com.fasterxml.jackson.core.sym.SymbolsViaParserTest.testSymbolTableExpansionBytes(SymbolsViaParserTest.java:32)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "512"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 12,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java": {
        "modified": [
          [
            622
          ],
          [
            630
          ],
          [
            773
          ],
          [
            851
          ],
          [
            917
          ],
          [
            967
          ],
          [
            2671
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java": {
        "modified": [
          [
            3622
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.LocationInObjectTest",
        "methodName": "testOffsetWithObjectFieldsUsingReader",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.LocationInObjectTest.testOffsetWithObjectFieldsUsingReader(LocationInObjectTest.java:66)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<6> but was:<1>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 13,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/JsonGeneratorImpl.java": {
        "modified": [
          [
            127
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestJsonGeneratorFeatures",
        "methodName": "testFieldNameQuotingEnabled",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestJsonGeneratorFeatures._testFieldNameQuotingEnabled(TestJsonGeneratorFeatures.java:174)",
          "com.fasterxml.jackson.core.json.TestJsonGeneratorFeatures.testFieldNameQuotingEnabled(TestJsonGeneratorFeatures.java:139)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[foo]:1}> but was:<{[\"foo\"]:1}>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 14,
    "changedFiles": {
      "com/fasterxml/jackson/core/io/IOContext.java": {
        "modified": [
          [
            274
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.io.TestIOContext",
        "methodName": "testAllocations",
        "stackTrace": [
          "com.fasterxml.jackson.core.BaseTest.verifyException(BaseTest.java:390)",
          "com.fasterxml.jackson.core.io.TestIOContext.testAllocations(TestIOContext.java:27)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([smaller than original]): got one with message \"Trying to release buffer not owned by the context\""
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 15,
    "changedFiles": {
      "com/fasterxml/jackson/core/filter/FilteringParserDelegate.java": {
        "modified": [
          [
            227
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testNotAllowMultipleMatches",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches(BasicParserFilteringTest.java:118)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<3[]> but was:<3[ 4]>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 16,
    "changedFiles": {
      "com/fasterxml/jackson/core/util/JsonParserSequence.java": {
        "modified": [
          [
            35
          ],
          [
            45
          ],
          [
            104
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.ParserSequenceTest",
        "methodName": "testInitialized",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.ParserSequenceTest.testInitialized(ParserSequenceTest.java:60)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 17,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java": {
        "modified": [
          [
            528
          ],
          [
            672
          ],
          [
            1887
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest",
        "methodName": "testRawWithSurrogatesString",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonGenerator._reportError(JsonGenerator.java:1723)",
          "com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(UTF8JsonGenerator.java:1887)",
          "com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(UTF8JsonGenerator.java:658)",
          "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:573)",
          "com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:536)",
          "com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(GeneratorBase.java:299)",
          "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest._testRawWithSurrogatesString(RawValueWithSurrogatesTest.java:82)",
          "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest.testRawWithSurrogatesString(RawValueWithSurrogatesTest.java:54)"
        ],
        "error": "com.fasterxml.jackson.core.JsonGenerationException",
        "message": "Split surrogate on writeRaw() input (last character)"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 18,
    "changedFiles": {
      "com/fasterxml/jackson/core/base/GeneratorBase.java": {
        "modified": [
          [
            53
          ],
          [
            434
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/UTF8JsonGenerator.java": {
        "modified": [
          [
            910
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java": {
        "modified": [
          [
            687
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestJsonGeneratorFeatures",
        "methodName": "testTooBigBigDecimal",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.TestJsonGeneratorFeatures.testTooBigBigDecimal(TestJsonGeneratorFeatures.java:154)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not have written without exception: 1E+10000"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 19,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java": {
        "modified": [
          [
            1418
          ]
        ]
      },
      "com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java": {
        "modified": [
          [
            1544
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.TestNumericValues",
        "methodName": "testLongerFloatingPoint",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNumber2(ReaderBasedJsonParser.java:1418)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloat(ReaderBasedJsonParser.java:1266)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(ReaderBasedJsonParser.java:1241)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:705)",
          "com.fasterxml.jackson.core.json.TestNumericValues._testLongerFloat(TestNumericValues.java:580)",
          "com.fasterxml.jackson.core.json.TestNumericValues.testLongerFloatingPoint(TestNumericValues.java:570)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "200"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 20,
    "changedFiles": {
      "com/fasterxml/jackson/core/JsonGenerator.java": {
        "modified": [
          [
            1330
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.base64.Base64GenerationTest",
        "methodName": "testBinaryAsEmbeddedObject",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(JsonGenerator.java:1330)",
          "com.fasterxml.jackson.core.base64.Base64GenerationTest.testBinaryAsEmbeddedObject(Base64GenerationTest.java:100)"
        ],
        "error": "com.fasterxml.jackson.core.JsonGenerationException",
        "message": "No native support for writing embedded objects"
      },
      {
        "className": "com.fasterxml.jackson.core.main.TestGeneratorMisc",
        "methodName": "testAsEmbedded",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(JsonGenerator.java:1330)",
          "com.fasterxml.jackson.core.main.TestGeneratorMisc.testAsEmbedded(TestGeneratorMisc.java:243)"
        ],
        "error": "com.fasterxml.jackson.core.JsonGenerationException",
        "message": "No native support for writing embedded objects"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 21,
    "changedFiles": {
      "com/fasterxml/jackson/core/filter/FilteringParserDelegate.java": {
        "modified": [
          [
            238
          ],
          [
            248
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.filter.TokenVerifyingParserFiltering330Test",
        "methodName": "testTokensSingleMatchWithPath",
        "stackTrace": [
          "com.fasterxml.jackson.core.BaseTest.assertToken(BaseTest.java:448)",
          "com.fasterxml.jackson.core.filter.TokenVerifyingParserFiltering330Test.testTokensSingleMatchWithPath(TokenVerifyingParserFiltering330Test.java:111)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected token END_OBJECT, current token null"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.TokenVerifyingParserFiltering330Test",
        "methodName": "testBasicSingleMatchFilteringWithPath",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.TokenVerifyingParserFiltering330Test.testBasicSingleMatchFilteringWithPath(TokenVerifyingParserFiltering330Test.java:62)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"ob\":{\"value\":3}[}]> but was:<{\"ob\":{\"value\":3}[]>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.TokenVerifyingParserFiltering330Test",
        "methodName": "testSkippingForSingleWithPath",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.TokenVerifyingParserFiltering330Test.testSkippingForSingleWithPath(TokenVerifyingParserFiltering330Test.java:134)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<END_OBJECT> but was:<null>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 22,
    "changedFiles": {
      "com/fasterxml/jackson/core/filter/FilteringParserDelegate.java": {
        "modified": [
          [
            417
          ],
          [
            440
          ],
          [
            575
          ],
          [
            600
          ],
          [
            717
          ],
          [
            732
          ],
          [
            771
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testSingleMatchFilteringWithPath",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testSingleMatchFilteringWithPath(BasicParserFilteringTest.java:105)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testAllowMultipleMatchesWithPath1",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testAllowMultipleMatchesWithPath1(BasicParserFilteringTest.java:166)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testAllowMultipleMatchesWithPath2",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testAllowMultipleMatchesWithPath2(BasicParserFilteringTest.java:182)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testMultipleMatchFilteringWithPath1",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testMultipleMatchFilteringWithPath1(BasicParserFilteringTest.java:194)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testMultipleMatchFilteringWithPath2",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testMultipleMatchFilteringWithPath2(BasicParserFilteringTest.java:209)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testMultipleMatchFilteringWithPath3",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testMultipleMatchFilteringWithPath3(BasicParserFilteringTest.java:222)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testSingleMatchFilteringWithoutPath",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testSingleMatchFilteringWithoutPath(BasicParserFilteringTest.java:91)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testNotAllowMultipleMatchesWithoutPath1",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatchesWithoutPath1(BasicParserFilteringTest.java:120)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testNotAllowMultipleMatchesWithoutPath2",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatchesWithoutPath2(BasicParserFilteringTest.java:134)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<2[]> but was:<2[ 4]>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testIndexMatchWithPath1",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testIndexMatchWithPath1(BasicParserFilteringTest.java:232)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testIndexMatchWithPath2",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testIndexMatchWithPath2(BasicParserFilteringTest.java:247)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest",
        "methodName": "testAllowMultipleMatchesWithoutPath",
        "stackTrace": [
          "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testAllowMultipleMatchesWithoutPath(BasicParserFilteringTest.java:150)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 23,
    "changedFiles": {
      "com/fasterxml/jackson/core/util/DefaultPrettyPrinter.java": {
        "modified": [
          [
            255
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.util.TestDefaultPrettyPrinter",
        "methodName": "testInvalidSubClass",
        "stackTrace": [
          "com.fasterxml.jackson.core.util.TestDefaultPrettyPrinter.testInvalidSubClass(TestDefaultPrettyPrinter.java:169)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not pass"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 24,
    "changedFiles": {
      "com/fasterxml/jackson/core/base/ParserBase.java": {
        "modified": [
          [
            869
          ],
          [
            887
          ]
        ]
      },
      "com/fasterxml/jackson/core/base/ParserMinimalBase.java": {
        "modified": [
          [
            565
          ],
          [
            582
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.async.AsyncNumberCoercionTest",
        "methodName": "testToLongFailing",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:704)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(ParserMinimalBase.java:582)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(ParserMinimalBase.java:577)",
          "com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong(ParserBase.java:921)",
          "com.fasterxml.jackson.core.base.ParserBase.getLongValue(ParserBase.java:663)",
          "com.fasterxml.jackson.core.testsupport.AsyncReaderWrapper.getLongValue(AsyncReaderWrapper.java:57)",
          "com.fasterxml.jackson.core.json.async.AsyncNumberCoercionTest.testToLongFailing(AsyncNumberCoercionTest.java:189)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value (9223372036854775817) out of range of long (-9223372036854775808 - 9223372036854775807)"
      },
      {
        "className": "com.fasterxml.jackson.core.json.async.AsyncNumberCoercionTest",
        "methodName": "testToIntFailing",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:704)",
          "com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt(ParserBase.java:887)",
          "com.fasterxml.jackson.core.base.ParserBase.getIntValue(ParserBase.java:649)",
          "com.fasterxml.jackson.core.testsupport.AsyncReaderWrapper.getIntValue(AsyncReaderWrapper.java:56)",
          "com.fasterxml.jackson.core.json.async.AsyncNumberCoercionTest.testToIntFailing(AsyncNumberCoercionTest.java:73)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value (2147483648) out of range of int"
      },
      {
        "className": "com.fasterxml.jackson.core.read.NumberCoercionTest",
        "methodName": "testToLongFailing",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:704)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(ParserMinimalBase.java:582)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase.reportOverflowLong(ParserMinimalBase.java:577)",
          "com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong(ParserBase.java:921)",
          "com.fasterxml.jackson.core.base.ParserBase.getLongValue(ParserBase.java:663)",
          "com.fasterxml.jackson.core.read.NumberCoercionTest.testToLongFailing(NumberCoercionTest.java:189)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value (9223372036854775817) out of range of long (-9223372036854775808 - 9223372036854775807)"
      },
      {
        "className": "com.fasterxml.jackson.core.read.NumberCoercionTest",
        "methodName": "testToIntFailing",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:704)",
          "com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt(ParserBase.java:887)",
          "com.fasterxml.jackson.core.base.ParserBase.getIntValue(ParserBase.java:649)",
          "com.fasterxml.jackson.core.read.NumberCoercionTest.testToIntFailing(NumberCoercionTest.java:68)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value (2147483648) out of range of int"
      },
      {
        "className": "com.fasterxml.jackson.core.read.NumberOverflowTest",
        "methodName": "testMaliciousLongOverflow",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:714)",
          "com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(ParserBase.java:870)",
          "com.fasterxml.jackson.core.base.ParserBase._parseSlowInt(ParserBase.java:849)",
          "com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(ParserBase.java:775)",
          "com.fasterxml.jackson.core.base.ParserBase.getLongValue(ParserBase.java:660)",
          "com.fasterxml.jackson.core.read.NumberOverflowTest.testMaliciousLongOverflow(NumberOverflowTest.java:72)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value ([Integer with 199999 digits]) out of range of long"
      },
      {
        "className": "com.fasterxml.jackson.core.read.NumberOverflowTest",
        "methodName": "testSimpleLongOverflow",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:714)",
          "com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(ParserBase.java:870)",
          "com.fasterxml.jackson.core.base.ParserBase._parseSlowInt(ParserBase.java:849)",
          "com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(ParserBase.java:775)",
          "com.fasterxml.jackson.core.base.ParserBase.getLongValue(ParserBase.java:660)",
          "com.fasterxml.jackson.core.read.NumberOverflowTest.testSimpleLongOverflow(NumberOverflowTest.java:41)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value (-9223372036854775809) out of range of long"
      },
      {
        "className": "com.fasterxml.jackson.core.read.NumberOverflowTest",
        "methodName": "testMaliciousIntOverflow",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:714)",
          "com.fasterxml.jackson.core.base.ParserBase._reportTooLongIntegral(ParserBase.java:870)",
          "com.fasterxml.jackson.core.base.ParserBase._parseSlowInt(ParserBase.java:849)",
          "com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(ParserBase.java:775)",
          "com.fasterxml.jackson.core.base.ParserBase._parseIntValue(ParserBase.java:800)",
          "com.fasterxml.jackson.core.base.ParserBase.getIntValue(ParserBase.java:646)",
          "com.fasterxml.jackson.core.read.NumberOverflowTest.testMaliciousIntOverflow(NumberOverflowTest.java:92)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value ([Integer with 199999 digits]) out of range of int"
      },
      {
        "className": "com.fasterxml.jackson.core.read.NumberParsingTest",
        "methodName": "testSimpleLong",
        "stackTrace": [
          "com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1833)",
          "com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:704)",
          "com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt(ParserBase.java:887)",
          "com.fasterxml.jackson.core.base.ParserBase.getIntValue(ParserBase.java:649)",
          "com.fasterxml.jackson.core.read.NumberParsingTest._testSimpleLong(NumberParsingTest.java:128)",
          "com.fasterxml.jackson.core.read.NumberParsingTest.testSimpleLong(NumberParsingTest.java:108)"
        ],
        "error": "com.fasterxml.jackson.core.JsonParseException",
        "message": "Numeric value (12345678907) out of range of int"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 25,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java": {
        "modified": [
          [
            1963
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.read.NonStandardUnquotedNamesTest",
        "methodName": "testUnquotedIssue510",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName2(ReaderBasedJsonParser.java:1964)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName(ReaderBasedJsonParser.java:1807)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:692)",
          "com.fasterxml.jackson.core.read.NonStandardUnquotedNamesTest.testUnquotedIssue510(NonStandardUnquotedNamesTest.java:49)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "256"
      }
    ]
  },
  {
    "project": "JacksonCore",
    "bugId": 26,
    "changedFiles": {
      "com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java": {
        "modified": [
          [
            108
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.core.json.async.AsyncLocationTest",
        "methodName": "testLocationOffsets",
        "stackTrace": [
          "com.fasterxml.jackson.core.json.async.AsyncLocationTest.testLocationOffsets(AsyncLocationTest.java:21)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<3>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 1,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java": {
        "modified": [
          [
            592
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.TestPOJOAsArray",
        "methodName": "testNullColumn",
        "stackTrace": [
          "com.fasterxml.jackson.databind.struct.TestPOJOAsArray.testNullColumn(TestPOJOAsArray.java:151)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[null,[]\"bar\"]> but was:<[null,[null,]\"bar\"]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 2,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/TokenBuffer.java": {
        "modified": [
          [
            783
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.TestConversions",
        "methodName": "testConversionOfPojos",
        "stackTrace": [
          "com.fasterxml.jackson.databind.node.TestConversions.testConversionOfPojos(TestConversions.java:263)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected Object, got POJO"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 3,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java": {
        "modified": [
          [
            66
          ],
          [
            95
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestArrayDeserialization",
        "methodName": "testStringArray",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.deserialize(StringArrayDeserializer.java:66)",
          "com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.deserialize(StringArrayDeserializer.java:18)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3051)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2146)",
          "com.fasterxml.jackson.databind.deser.TestArrayDeserialization.testStringArray(TestArrayDeserialization.java:266)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 4,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java": {
        "modified": [
          [
            59
          ],
          [
            75
          ],
          [
            93
          ],
          [
            102
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestCollectionDeserialization",
        "methodName": "testArrayIndexForExceptions",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestCollectionDeserialization.testArrayIndexForExceptions(TestCollectionDeserialization.java:224)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 5,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/AnnotatedClass.java": {
        "modified": [
          [
            658
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.introspect.TestMixinMerging",
        "methodName": "testDisappearingMixins515",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:59)",
          "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:26)",
          "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:114)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:2866)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:2323)",
          "com.fasterxml.jackson.databind.introspect.TestMixinMerging.testDisappearingMixins515(TestMixinMerging.java:48)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "No serializer found for class com.fasterxml.jackson.databind.introspect.TestMixinMerging$PersonImpl and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 6,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/StdDateFormat.java": {
        "modified": [
          [
            406
          ],
          [
            421
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestDateDeserialization",
        "methodName": "testISO8601MissingSeconds",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:55)",
          "com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:797)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(StdDeserializer.java:740)",
          "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer._parseDate(DateDeserializers.java:176)",
          "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.deserialize(DateDeserializers.java:262)",
          "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.deserialize(DateDeserializers.java:246)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3051)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2146)",
          "com.fasterxml.jackson.databind.deser.TestDateDeserialization.testISO8601MissingSeconds(TestDateDeserialization.java:193)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
        "message": "Can not construct instance of java.util.Date from String value '1997-07-16T19:20+01:00': not a valid representation (error: Failed to parse Date value '1997-07-16T19:20+01:00': Can not parse date \"1997-07-16T19:20+01:00\": not compatible with any of standard forms (\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"EEE, dd MMM yyyy HH:mm:ss zzz\", \"yyyy-MM-dd\"))"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.TestDateDeserialization",
        "methodName": "testISO8601PartialMilliseconds",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:55)",
          "com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:797)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(StdDeserializer.java:740)",
          "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer._parseDate(DateDeserializers.java:176)",
          "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.deserialize(DateDeserializers.java:262)",
          "com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.deserialize(DateDeserializers.java:246)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3051)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2146)",
          "com.fasterxml.jackson.databind.deser.TestDateDeserialization.testISO8601PartialMilliseconds(TestDateDeserialization.java:156)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
        "message": "Can not construct instance of java.util.Date from String value '2014-10-03T18:00:00.6-05:00': not a valid representation (error: Failed to parse Date value '2014-10-03T18:00:00.6-05:00': Can not parse date \"2014-10-03T18:00:00.6-05:00\": not compatible with any of standard forms (\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"EEE, dd MMM yyyy HH:mm:ss zzz\", \"yyyy-MM-dd\"))"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 7,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/TokenBuffer.java": {
        "modified": [
          [
            405
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.creators.TestCreatorsDelegating",
        "methodName": "testDelegateWithTokenBuffer",
        "stackTrace": [
          "com.fasterxml.jackson.test.BaseTest.assertToken(BaseTest.java:333)",
          "com.fasterxml.jackson.databind.creators.TestCreatorsDelegating.testDelegateWithTokenBuffer(TestCreatorsDelegating.java:132)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected token START_OBJECT, current token FIELD_NAME"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 8,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java": {
        "modified": [
          [
            283
          ],
          [
            290
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestJdkTypes",
        "methodName": "testStringBuilder",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:267)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:242)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:143)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:439)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3664)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3556)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2576)",
          "com.fasterxml.jackson.databind.deser.TestJdkTypes.testStringBuilder(TestJdkTypes.java:425)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Conflicting String creators: already had explicitly marked [constructor for java.lang.StringBuilder, annotations: [null]], encountered [constructor for java.lang.StringBuilder, annotations: [null]]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 9,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java": {
        "modified": [
          [
            27
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestMapSerialization",
        "methodName": "testClassKey",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestMapSerialization.testClassKey(TestMapSerialization.java:256)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"[]java.lang.String\":2}> but was:<{\"[class ]java.lang.String\":2}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 10,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/AnyGetterWriter.java": {
        "modified": [
          [
            24
          ],
          [
            52
          ],
          [
            75
          ],
          [
            82
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java": {
        "modified": [
          [
            395
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestAnyGetter",
        "methodName": "testIssue705",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestAnyGetter.testIssue705(TestAnyGetter.java:139)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"[stuff\":\"[key/value]]\"}> but was:<{\"[key\":\"value]\"}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 11,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/TypeFactory.java": {
        "modified": [
          [
            895
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.type.TestJavaType",
        "methodName": "testLocalType728",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TestJavaType.testLocalType728(TestJavaType.java:43)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<interface java.lang.CharSequence> but was:<class java.lang.Object>"
      },
      {
        "className": "com.fasterxml.jackson.databind.type.TestLocalType609",
        "methodName": "testLocalPartialType609",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:267)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:242)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:143)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:439)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3666)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3558)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2578)",
          "com.fasterxml.jackson.databind.type.TestLocalType609.testLocalPartialType609(TestLocalType609.java:32)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Type variable 'T' can not be resolved (with context of class com.fasterxml.jackson.databind.type.TestLocalType609$EntityContainer)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 12,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/MapDeserializer.java": {
        "modified": [
          [
            303
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestCustomDeserializers",
        "methodName": "testCustomMapValueDeser735",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestCustomDeserializers.testCustomMapValueDeser735(TestCustomDeserializers.java:370)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<100>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 13,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.java": {
        "modified": [
          [
            87
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java": {
        "modified": [
          [
            92
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.TestObjectIdDeserialization",
        "methodName": "testNullObjectId",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:210)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:177)",
          "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow(BeanPropertyMap.java:439)",
          "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._findDeserializeAndSet2(BeanPropertyMap.java:315)",
          "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(BeanPropertyMap.java:291)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:335)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId(BeanDeserializerBase.java:1045)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3562)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2578)",
          "com.fasterxml.jackson.databind.struct.TestObjectIdDeserialization.testNullObjectId(TestObjectIdDeserialization.java:464)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "(was java.lang.NullPointerException) (through reference chain: com.fasterxml.jackson.databind.struct.Identifiable[\"id\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 14,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ObjectReader.java": {
        "modified": [
          [
            1476
          ],
          [
            1577
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.convert.TestUpdateValue",
        "methodName": "testIssue744",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:51)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:817)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:958)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1324)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1302)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:249)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:136)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAsTree(ObjectReader.java:1480)",
          "com.fasterxml.jackson.databind.ObjectReader.readTree(ObjectReader.java:1022)",
          "com.fasterxml.jackson.core.JsonParser.readValueAsTree(JsonParser.java:1465)",
          "com.fasterxml.jackson.databind.convert.TestUpdateValue$DataADeserializer.deserialize(TestUpdateValue.java:76)",
          "com.fasterxml.jackson.databind.convert.TestUpdateValue$DataADeserializer.deserialize(TestUpdateValue.java:63)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:523)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(BeanPropertyMap.java:285)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:220)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1445)",
          "com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1156)",
          "com.fasterxml.jackson.databind.convert.TestUpdateValue.testIssue744(TestUpdateValue.java:222)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"i\" (class com.fasterxml.jackson.databind.convert.TestUpdateValue$DataB), not marked as ignorable (2 known properties: \"da\", \"k\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 15,
    "changedFiles": {
      "com/fasterxml/jackson/databind/JavaType.java": {
        "modified": [
          [
            302
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java": {
        "modified": [
          [
            163
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java": {
        "modified": [
          [
            370
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java": {
        "modified": [
          [
            121
          ],
          [
            161
          ],
          [
            172
          ],
          [
            180
          ],
          [
            187
          ],
          [
            224
          ],
          [
            256
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/std/StdSerializer.java": {
        "modified": [
          [
            262
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.convert.TestConvertingSerializer",
        "methodName": "testIssue731",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:59)",
          "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:26)",
          "com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.serialize(StdDelegatingSerializer.java:161)",
          "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:129)",
          "com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1052)",
          "com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(ObjectWriter.java:923)",
          "com.fasterxml.jackson.databind.convert.TestConvertingSerializer.testIssue731(TestConvertingSerializer.java:201)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "No serializer found for class com.fasterxml.jackson.databind.convert.TestConvertingSerializer$DummyBean and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 16,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/AnnotationMap.java": {
        "modified": [
          [
            112
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.mixins.MixinsWithBundlesTest",
        "methodName": "testMixinWithBundles",
        "stackTrace": [
          "com.fasterxml.jackson.databind.mixins.MixinsWithBundlesTest.testMixinWithBundles(MixinsWithBundlesTest.java:41)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"[bar]\":\"result\"}> but was:<{\"[stuff]\":\"result\"}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 17,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ObjectMapper.java": {
        "modified": [
          [
            180
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.TestJsonNode",
        "methodName": "testArrayWithDefaultTyping",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(DeserializationContext.java:854)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(AsArrayTypeDeserializer.java:134)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:93)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(AsArrayTypeDeserializer.java:68)",
          "com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer.deserializeWithType(JsonNodeDeserializer.java:144)",
          "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.deserializeWithType(JsonNodeDeserializer.java:14)",
          "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:41)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3070)",
          "com.fasterxml.jackson.databind.ObjectMapper.readTree(ObjectMapper.java:1837)",
          "com.fasterxml.jackson.databind.node.TestJsonNode.testArrayWithDefaultTyping(TestJsonNode.java:114)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Unexpected token (VALUE_NUMBER_INT), expected VALUE_STRING: need JSON String that contains type id (for subtype of com.fasterxml.jackson.databind.JsonNode)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 18,
    "changedFiles": {
      "com/fasterxml/jackson/databind/MappingIterator.java": {
        "modified": [
          [
            28
          ],
          [
            69
          ],
          [
            98
          ],
          [
            138
          ],
          [
            189
          ],
          [
            210
          ],
          [
            236
          ],
          [
            254
          ],
          [
            352
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.seq.ReadRecoveryTest",
        "methodName": "testSimpleRootRecovery",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:860)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:304)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1134)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:145)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:134)",
          "com.fasterxml.jackson.databind.MappingIterator.nextValue(MappingIterator.java:249)",
          "com.fasterxml.jackson.databind.seq.ReadRecoveryTest.testSimpleRootRecovery(ReadRecoveryTest.java:67)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not instantiate value of type [simple type, class com.fasterxml.jackson.databind.seq.ReadRecoveryTest$Bean] from Integral number (1); no single-int-arg constructor/factory method"
      },
      {
        "className": "com.fasterxml.jackson.databind.seq.ReadRecoveryTest",
        "methodName": "testRootBeans",
        "stackTrace": [
          "com.fasterxml.jackson.databind.seq.ReadRecoveryTest.testRootBeans(ReadRecoveryTest.java:41)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.fasterxml.jackson.databind.seq.ReadRecoveryTest",
        "methodName": "testSimpleArrayRecovery",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:860)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:304)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1134)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:145)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:134)",
          "com.fasterxml.jackson.databind.MappingIterator.nextValue(MappingIterator.java:249)",
          "com.fasterxml.jackson.databind.seq.ReadRecoveryTest.testSimpleArrayRecovery(ReadRecoveryTest.java:96)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not instantiate value of type [simple type, class com.fasterxml.jackson.databind.seq.ReadRecoveryTest$Bean] from Integral number (1); no single-int-arg constructor/factory method"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 19,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/TypeFactory.java": {
        "modified": [
          [
            1021
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.convert.TestMapConversions",
        "methodName": "testMapToProperties",
        "stackTrace": [
          "com.fasterxml.jackson.databind.convert.TestMapConversions.testMapToProperties(TestMapConversions.java:113)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<129> but was:<null>"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.TestMapDeserialization",
        "methodName": "testReadProperties",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestMapDeserialization.testReadProperties(TestMapDeserialization.java:574)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<123> but was:<null>"
      },
      {
        "className": "com.fasterxml.jackson.databind.type.TestTypeFactory",
        "methodName": "testProperties",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TestTypeFactory.testProperties(TestTypeFactory.java:185)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<class java.lang.String> was not:<class java.lang.Object>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 20,
    "changedFiles": {
      "com/fasterxml/jackson/databind/node/ObjectNode.java": {
        "modified": [
          [
            4
          ],
          [
            324
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.introspect.TestNamingStrategyStd",
        "methodName": "testNamingWithObjectNode",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:270)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:245)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:143)",
          "com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:406)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(StdDeserializer.java:882)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(BeanDeserializerBase.java:436)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:297)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:245)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:143)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:439)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3668)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3560)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2580)",
          "com.fasterxml.jackson.databind.introspect.TestNamingStrategyStd.testNamingWithObjectNode(TestNamingStrategyStd.java:309)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Conflicting setter definitions for property \"all\": com.fasterxml.jackson.databind.node.ObjectNode#setAll(1 params) vs com.fasterxml.jackson.databind.node.ObjectNode#setAll(1 params)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 21,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java": {
        "modified": [
          [
            4
          ],
          [
            64
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestEnumDeserialization",
        "methodName": "testEnumWithJsonPropertyRename",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestEnumDeserialization.testEnumWithJsonPropertyRename(TestEnumDeserialization.java:475)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[\"[b\",\"a]\"]> but was:<[\"[B\",\"A]\"]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 22,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java": {
        "modified": [
          [
            580
          ],
          [
            612
          ],
          [
            636
          ],
          [
            655
          ],
          [
            691
          ],
          [
            737
          ],
          [
            756
          ],
          [
            784
          ],
          [
            831
          ],
          [
            841
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java": {
        "modified": [
          [
            174
          ],
          [
            212
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestJsonValue",
        "methodName": "testJsonValueWithCustomOverride",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestJsonValue.testJsonValueWithCustomOverride(TestJsonValue.java:282)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[42]> but was:<[\"value\"]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 23,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java": {
        "modified": [
          [
            54
          ],
          [
            120
          ],
          [
            159
          ],
          [
            175
          ],
          [
            185
          ],
          [
            200
          ],
          [
            222
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestJsonSerialize2",
        "methodName": "testEmptyInclusionScalars",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestJsonSerialize2.testEmptyInclusionScalars(TestJsonSerialize2.java:237)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[]}> but was:<{[\"value\":0]}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 24,
    "changedFiles": {
      "com/fasterxml/jackson/databind/cfg/BaseSettings.java": {
        "modified": [
          [
            234
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestConfig",
        "methodName": "testDateFormatConfig",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestConfig.testDateFormatConfig(TestConfig.java:221)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<sun.util.calendar.ZoneInfo[id=\"America/Los_Angeles\",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=America/Los_Angeles,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]> but was:<sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 25,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java": {
        "modified": [
          [
            1757
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/DeserializerCache.java": {
        "modified": [
          [
            477
          ]
        ]
      },
      "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java": {
        "modified": [
          [
            177
          ]
        ]
      },
      "com/fasterxml/jackson/databind/module/SimpleAbstractTypeResolver.java": {
        "modified": [
          [
            80
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestArrayDeserialization",
        "methodName": "testByteArrayTypeOverride890",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:269)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:428)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.findDeserializer(StdDeserializer.java:947)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(BeanDeserializerBase.java:439)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:296)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:461)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3804)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3698)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2714)",
          "com.fasterxml.jackson.databind.deser.TestArrayDeserialization.testByteArrayTypeOverride890(TestArrayDeserialization.java:563)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not deserialize Class [B (of type array) as a Bean"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 26,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/BeanPropertyWriter.java": {
        "modified": [
          [
            39
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.TestJDKSerialization",
        "methodName": "testEnumHandlers",
        "stackTrace": [
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)",
          "java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1378)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)",
          "com.fasterxml.jackson.databind.TestJDKSerialization.jdkSerialize(TestJDKSerialization.java:179)",
          "com.fasterxml.jackson.databind.TestJDKSerialization.testEnumHandlers(TestJDKSerialization.java:93)"
        ],
        "error": "java.io.NotSerializableException",
        "message": "com.fasterxml.jackson.databind.ser.BeanPropertyWriter"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 27,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializer.java": {
        "modified": [
          [
            794
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestExternalId",
        "methodName": "testInverseExternalId928",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.CreatorProperty.set(CreatorProperty.java:198)",
          "com.fasterxml.jackson.databind.deser.CreatorProperty.deserializeAndSet(CreatorProperty.java:180)",
          "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(ExternalTypeHandler.java:253)",
          "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue(ExternalTypeHandler.java:119)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeUsingPropertyBasedWithExternalTypeId(BeanDeserializer.java:794)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithExternalTypeId(BeanDeserializer.java:716)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:292)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:131)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3731)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2724)",
          "com.fasterxml.jackson.databind.jsontype.TestExternalId.testInverseExternalId928(TestExternalId.java:495)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "No fallback setter/field defined: can not use creator property for com.fasterxml.jackson.databind.deser.CreatorProperty"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 28,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.java": {
        "modified": [
          [
            97
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.TestObjectNode",
        "methodName": "testIssue941",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:854)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:850)",
          "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.deserialize(JsonNodeDeserializer.java:106)",
          "com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.deserialize(JsonNodeDeserializer.java:83)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1095)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:296)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3731)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2724)",
          "com.fasterxml.jackson.databind.node.TestObjectNode.testIssue941(TestObjectNode.java:411)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not deserialize instance of com.fasterxml.jackson.databind.node.ObjectNode out of END_OBJECT token"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 29,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java": {
        "modified": [
          [
            228
          ],
          [
            251
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestExternalId",
        "methodName": "testExternalTypeIdWithNull",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:854)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:850)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:168)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:136)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:110)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromAny(AsArrayTypeDeserializer.java:68)",
          "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:550)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:518)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(ExternalTypeHandler.java:260)",
          "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue(ExternalTypeHandler.java:119)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithExternalTypeId(BeanDeserializer.java:756)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithExternalTypeId(BeanDeserializer.java:720)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:294)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3730)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2723)",
          "com.fasterxml.jackson.databind.jsontype.TestExternalId.testExternalTypeIdWithNull(TestExternalId.java:288)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not deserialize instance of com.fasterxml.jackson.databind.jsontype.TestExternalId$ValueBean out of VALUE_STRING token"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 30,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ObjectMapper.java": {
        "modified": [
          [
            2510
          ],
          [
            3426
          ]
        ]
      },
      "com/fasterxml/jackson/databind/util/TokenBuffer.java": {
        "modified": [
          [
            80
          ],
          [
            188
          ],
          [
            959
          ],
          [
            973
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestExternalId",
        "methodName": "testBigDecimal965",
        "stackTrace": [
          "com.fasterxml.jackson.databind.jsontype.TestExternalId.testBigDecimal965(TestExternalId.java:564)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected BigDecimal = -10000000000.0000000001; got back BigDecimal = -1.0E+10"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 31,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/TokenBuffer.java": {
        "modified": [
          [
            672
          ],
          [
            686
          ],
          [
            731
          ],
          [
            739
          ],
          [
            755
          ],
          [
            783
          ],
          [
            792
          ],
          [
            801
          ],
          [
            829
          ],
          [
            837
          ],
          [
            853
          ],
          [
            1091
          ],
          [
            1098
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.util.TestTokenBuffer",
        "methodName": "testOutputContext",
        "stackTrace": [
          "com.fasterxml.jackson.databind.util.TestTokenBuffer._verifyOutputContext(TestTokenBuffer.java:338)",
          "com.fasterxml.jackson.databind.util.TestTokenBuffer._verifyOutputContext(TestTokenBuffer.java:315)",
          "com.fasterxml.jackson.databind.util.TestTokenBuffer.testOutputContext(TestTokenBuffer.java:283)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected name 'b' (JsonParser), TokenBuffer had 'a'"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 32,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer.java": {
        "modified": [
          [
            221
          ],
          [
            535
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestUntypedDeserialization",
        "methodName": "testNestedUntyped989",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:857)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:853)",
          "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserialize(UntypedObjectDeserializer.java:540)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1095)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:296)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1511)",
          "com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1136)",
          "com.fasterxml.jackson.databind.deser.TestUntypedDeserialization.testNestedUntyped989(TestUntypedDeserialization.java:264)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not deserialize instance of java.lang.Object out of END_OBJECT token"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 33,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java": {
        "modified": [
          [
            748
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
        "methodName": "testUnwrappedAsPropertyIndicator",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:69)",
          "com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:32)",
          "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:130)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3559)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:2927)",
          "com.fasterxml.jackson.databind.struct.TestUnwrapped.testUnwrappedAsPropertyIndicator(TestUnwrapped.java:189)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "No serializer found for class com.fasterxml.jackson.databind.struct.TestUnwrapped$Outer and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 34,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/NumberSerializer.java": {
        "modified": [
          [
            81
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsonschema.NewSchemaTest",
        "methodName": "testSimpleNumbers",
        "stackTrace": [
          "com.fasterxml.jackson.databind.jsonschema.NewSchemaTest.testSimpleNumbers(NewSchemaTest.java:204)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...dec([numberType=BIG_[DECIMAL]])][optProp bigInt([...> but was:<...dec([numberType=BIG_[INTEGER]])][optProp bigInt([...>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 35,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java": {
        "modified": [
          [
            89
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.WrapperObjectWithObjectIdTest",
        "methodName": "testSimple",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)",
          "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(DeserializationContext.java:927)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer._deserialize(AsWrapperTypeDeserializer.java:90)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.deserializeTypedFromObject(AsWrapperTypeDeserializer.java:49)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:966)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:247)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:217)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:25)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:523)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(BeanPropertyMap.java:285)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:248)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:136)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3564)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2580)",
          "com.fasterxml.jackson.databind.jsontype.WrapperObjectWithObjectIdTest.testSimple(WrapperObjectWithObjectIdTest.java:83)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Unexpected token (FIELD_NAME), expected START_OBJECT: need JSON Object to contain As.WRAPPER_OBJECT type information for class com.fasterxml.jackson.databind.jsontype.WrapperObjectWithObjectIdTest$Computer"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 36,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/StdDateFormat.java": {
        "modified": [
          [
            250
          ],
          [
            557
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.TestStdDateFormat",
        "methodName": "testLenient",
        "stackTrace": [
          "java.text.DateFormat.setLenient(DateFormat.java:716)",
          "com.fasterxml.jackson.databind.TestStdDateFormat.testLenient(TestStdDateFormat.java:29)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 37,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/SimpleType.java": {
        "modified": [
          [
            135
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.objectid.Objecid1083Test",
        "methodName": "testSimple",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:855)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1083)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1389)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1367)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:266)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:163)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:135)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(AsPropertyTypeDeserializer.java:136)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:99)",
          "com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(AbstractDeserializer.java:142)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:279)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:249)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:26)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:490)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:260)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3788)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2779)",
          "com.fasterxml.jackson.databind.objectid.Objecid1083Test.testSimple(Objecid1083Test.java:43)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"name\" (class com.fasterxml.jackson.databind.objectid.Objecid1083Test$JsonMapSchema), not marked as ignorable (0 known properties: ])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 38,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/CollectionType.java": {
        "modified": [
          [
            4
          ],
          [
            50
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/MapType.java": {
        "modified": [
          [
            4
          ],
          [
            47
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/SimpleType.java": {
        "modified": [
          [
            116
          ],
          [
            251
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test",
        "methodName": "testExplicitMapType",
        "stackTrace": [
          "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test.testExplicitMapType(DeprecatedTypeHandling1102Test.java:85)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<class com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test$Point> but was:<class java.util.LinkedHashMap>"
      },
      {
        "className": "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test",
        "methodName": "testExplicitCollectionType",
        "stackTrace": [
          "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test.testExplicitCollectionType(DeprecatedTypeHandling1102Test.java:66)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<class com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test$Point> but was:<class java.util.LinkedHashMap>"
      },
      {
        "className": "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test",
        "methodName": "testPOJOSubType",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:855)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1083)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1389)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1367)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:266)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3788)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2817)",
          "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test.testPOJOSubType(DeprecatedTypeHandling1102Test.java:47)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"x\" (class com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test$Point3D), not marked as ignorable (one known property: \"z\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 39,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/NullifyingDeserializer.java": {
        "modified": [
          [
            35
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl",
        "methodName": "testUnknownTypeIDRecovery",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:51)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:839)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1045)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1352)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1330)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:264)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1511)",
          "com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1136)",
          "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl.testUnknownTypeIDRecovery(TestPolymorphicWithDefaultImpl.java:223)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"location\" (class com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$CallRecord), not marked as ignorable (4 known properties: \"version\", \"item\", \"item2\", \"application\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 40,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/NumberDeserializers.java": {
        "modified": [
          [
            148
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestSimpleTypes",
        "methodName": "testEmptyToNullCoercionForPrimitives",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestSimpleTypes._testEmptyToNullCoercion(TestSimpleTypes.java:280)",
          "com.fasterxml.jackson.databind.deser.TestSimpleTypes.testEmptyToNullCoercionForPrimitives(TestSimpleTypes.java:263)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not have passed"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 41,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/TypeFactory.java": {
        "modified": [
          [
            602
          ],
          [
            610
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test",
        "methodName": "testDeprecatedTypeResolution",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TypeFactory._fromAny(TypeFactory.java:1109)",
          "com.fasterxml.jackson.databind.type.TypeFactory.constructType(TypeFactory.java:566)",
          "com.fasterxml.jackson.databind.type.TypeFactory.constructType(TypeFactory.java:602)",
          "com.fasterxml.jackson.databind.interop.DeprecatedTypeHandling1102Test.testDeprecatedTypeResolution(DeprecatedTypeHandling1102Test.java:102)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Unrecognized Type: [null]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 42,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java": {
        "modified": [
          [
            284
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestJdkTypes",
        "methodName": "testLocale",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestJdkTypes.testLocale(TestJdkTypes.java:150)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<> was not:<null>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 43,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java": {
        "modified": [
          [
            7
          ],
          [
            78
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.objectid.TestObjectIdSerialization",
        "methodName": "testNullStringPropertyId",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:216)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:873)",
          "com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:61)",
          "com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:11)",
          "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.deserializeSetAndReturn(ObjectIdValueProperty.java:78)",
          "com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.deserializeAndSet(ObjectIdValueProperty.java:71)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:341)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId(BeanDeserializerBase.java:1094)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:131)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3789)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2779)",
          "com.fasterxml.jackson.databind.objectid.TestObjectIdSerialization.testNullStringPropertyId(TestObjectIdSerialization.java:316)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not deserialize instance of java.lang.String out of VALUE_NULL token"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 44,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/SimpleType.java": {
        "modified": [
          [
            132
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestSubtypes",
        "methodName": "testIssue1125WithDefault",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:855)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1083)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1389)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1367)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:266)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:163)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:135)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(AsPropertyTypeDeserializer.java:136)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:99)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1017)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:488)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:260)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3789)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2779)",
          "com.fasterxml.jackson.databind.jsontype.TestSubtypes.testIssue1125WithDefault(TestSubtypes.java:319)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"b\" (class com.fasterxml.jackson.databind.jsontype.TestSubtypes$Default1125), not marked as ignorable (2 known properties: \"a\", \"def\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 45,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java": {
        "modified": [
          [
            63
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.DateSerializationTest",
        "methodName": "testDateDefaultShape",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.DateSerializationTest.testDateDefaultShape(DateSerializationTest.java:288)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"date\":[\"1970-01-01\"]}> but was:<{\"date\":[0]}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 46,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/ReferenceType.java": {
        "modified": [
          [
            156
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.type.TestJavaType",
        "methodName": "testGenericSignature1195",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TestJavaType.testGenericSignature1195(TestJavaType.java:56)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...e<Ljava/lang/String;[>];> but was:<...e<Ljava/lang/String;[];>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 47,
    "changedFiles": {
      "com/fasterxml/jackson/databind/AnnotationIntrospector.java": {
        "modified": [
          [
            816
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestJsonSerialize",
        "methodName": "testBrokenAnnotation",
        "stackTrace": [
          "com.fasterxml.jackson.databind.BaseTest.verifyException(BaseTest.java:368)",
          "com.fasterxml.jackson.databind.ser.TestJsonSerialize.testBrokenAnnotation(TestJsonSerialize.java:152)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([types not related]): got one with message \"Failed to widen type [simple type, class java.lang.Long] with annotation (value java.lang.String), from 'getValue': Class java.lang.String not a super-type of [simple type, class java.lang.Long]\""
      },
      {
        "className": "com.fasterxml.jackson.databind.ser.TestJsonSerializeAs",
        "methodName": "testSpecializedAsIntermediate",
        "stackTrace": [
          "com.fasterxml.jackson.databind.AnnotationIntrospector.refineSerializationType(AnnotationIntrospector.java:821)",
          "com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType(PropertyBuilder.java:194)",
          "com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(PropertyBuilder.java:73)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(BeanSerializerFactory.java:805)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties(BeanSerializerFactory.java:610)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(BeanSerializerFactory.java:388)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer(BeanSerializerFactory.java:271)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(BeanSerializerFactory.java:223)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(BeanSerializerFactory.java:157)",
          "com.fasterxml.jackson.databind.SerializerProvider._createUntypedSerializer(SerializerProvider.java:1215)",
          "com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(SerializerProvider.java:1167)",
          "com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(SerializerProvider.java:490)",
          "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(SerializerProvider.java:688)",
          "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:107)",
          "com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1428)",
          "com.fasterxml.jackson.databind.ObjectWriter._configAndWriteValue(ObjectWriter.java:1129)",
          "com.fasterxml.jackson.databind.ObjectWriter.writeValueAsString(ObjectWriter.java:1001)",
          "com.fasterxml.jackson.databind.ser.TestJsonSerializeAs.testSpecializedAsIntermediate(TestJsonSerializeAs.java:118)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Failed to widen type [simple type, class com.fasterxml.jackson.databind.ser.TestJsonSerializeAs$Bean1178Base] with annotation (value com.fasterxml.jackson.databind.ser.TestJsonSerializeAs$Bean1178Abstract), from 'value': Class com.fasterxml.jackson.databind.ser.TestJsonSerializeAs$Bean1178Abstract not a super-type of [simple type, class com.fasterxml.jackson.databind.ser.TestJsonSerializeAs$Bean1178Base]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 48,
    "changedFiles": {
      "com/fasterxml/jackson/databind/DeserializationConfig.java": {
        "modified": [
          [
            780
          ]
        ]
      },
      "com/fasterxml/jackson/databind/SerializationConfig.java": {
        "modified": [
          [
            865
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestFeatures",
        "methodName": "testVisibilityFeatures",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestFeatures.testVisibilityFeatures(TestFeatures.java:300)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should find 1 property, not 2; properties = [[Property 'name'; ctors: null, field(s): null, getter(s): null, setter(s): [method com.fasterxml.jackson.databind.ser.TestFeatures$TCls#setName(1 params)][visible=true,ignore=false,explicitName=false]], [Property 'groupname'; ctors: null, field(s): [field com.fasterxml.jackson.databind.ser.TestFeatures$TCls#groupname][visible=true,ignore=false,explicitName=true], getter(s): null, setter(s): null]]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 49,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java": {
        "modified": [
          [
            50
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest",
        "methodName": "testIssue1255",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.checkUnresolvedObjectId(DefaultDeserializationContext.java:154)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3738)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2726)",
          "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest.testIssue1255(AlwaysAsReferenceFirstTest.java:32)"
        ],
        "error": "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference",
        "message": "Unresolved forward references for: Object id [1] (for com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest$Bar) at [Source: {\"bar1\":1,\"bar2\":{\"@id\":2,\"value\":3}}; line: 1, column: 10]."
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 50,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializer.java": {
        "modified": [
          [
            9
          ],
          [
            387
          ],
          [
            429
          ],
          [
            465
          ],
          [
            479
          ],
          [
            933
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.objectid.ObjectWithCreator1261Test",
        "methodName": "testObjectIds1261",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:261)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportMappingException(DeserializationContext.java:1233)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1121)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1074)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(BeanDeserializerBase.java:1362)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:173)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:149)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(MapDeserializer.java:507)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:352)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:27)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:490)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:356)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithObjectId(BeanDeserializerBase.java:1156)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:145)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(MapDeserializer.java:507)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:352)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:27)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:490)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:275)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:139)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3789)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2833)",
          "com.fasterxml.jackson.databind.objectid.ObjectWithCreator1261Test.testObjectIds1261(ObjectWithCreator1261Test.java:76)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not deserialize instance of com.fasterxml.jackson.databind.objectid.ObjectWithCreator1261Test$Child out of START_ARRAY token"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 51,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java": {
        "modified": [
          [
            184
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestCustomTypeIdResolver",
        "methodName": "testPolymorphicTypeViaCustom",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:268)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty._throwAsIOE(SettableBeanProperty.java:516)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:105)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:178)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:150)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:126)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1079)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:488)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3789)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2833)",
          "com.fasterxml.jackson.databind.jsontype.TestCustomTypeIdResolver.testPolymorphicTypeViaCustom(TestCustomTypeIdResolver.java:226)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Problem deserializing property 'options' (expected type: [simple type, class java.lang.Object]; actual type: java.util.LinkedHashMap), problem: Can not set com.fasterxml.jackson.databind.jsontype.TestCustomTypeIdResolver$Poly1Base field com.fasterxml.jackson.databind.jsontype.TestCustomTypeIdResolver$Base1270.options to java.util.LinkedHashMap"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 52,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java": {
        "modified": [
          [
            612
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java": {
        "modified": [
          [
            310
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeId999Test",
        "methodName": "testExternalTypeId",
        "stackTrace": [
          "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeId999Test.testExternalTypeId(ExternalTypeId999Test.java:47)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<foo> but was:<null>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 53,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/TypeBindings.java": {
        "modified": [
          [
            302
          ],
          [
            428
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/TypeFactory.java": {
        "modified": [
          [
            117
          ],
          [
            385
          ],
          [
            456
          ],
          [
            1160
          ],
          [
            1225
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TypeRefinementForMap1215Test",
        "methodName": "testMapRefinement",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:255)",
          "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(DeserializationContext.java:1007)",
          "com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserialize(AbstractDeserializer.java:150)",
          "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserialize(ObjectArrayDeserializer.java:196)",
          "com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserialize(ObjectArrayDeserializer.java:20)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:324)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:26)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:490)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:260)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:125)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3807)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2797)",
          "com.fasterxml.jackson.databind.jsontype.TypeRefinementForMap1215Test.testMapRefinement(TypeRefinementForMap1215Test.java:65)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not construct instance of com.fasterxml.jackson.databind.jsontype.TypeRefinementForMap1215Test$HasUniqueId, problem: abstract types either need to be mapped to concrete types, have custom deserializer, or be instantiated with additional type information"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 54,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/PropertyBuilder.java": {
        "modified": [
          [
            134
          ],
          [
            150
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestJDKAtomicTypes",
        "methodName": "testEmpty1256",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestJDKAtomicTypes.testEmpty1256(TestJDKAtomicTypes.java:268)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[]}> but was:<{[\"a\":null]}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 55,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java": {
        "modified": [
          [
            10
          ],
          [
            82
          ],
          [
            215
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.TestEnumSerialization",
        "methodName": "testEnumsWithJsonPropertyAsKey",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.TestEnumSerialization.testEnumsWithJsonPropertyAsKey(TestEnumSerialization.java:441)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"[aleph]\":\"b\"}> but was:<{\"[A]\":\"b\"}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 56,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java": {
        "modified": [
          [
            231
          ],
          [
            292
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestJdkTypes",
        "methodName": "testLocale",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestJdkTypes.testLocale(TestJdkTypes.java:148)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<en_US> but was:<en-us>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 57,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ObjectReader.java": {
        "modified": [
          [
            1441
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.seq.ReadValuesTest",
        "methodName": "testRootBeans",
        "stackTrace": [
          "com.fasterxml.jackson.core.io.UTF32Reader.reportInvalid(UTF32Reader.java:189)",
          "com.fasterxml.jackson.core.io.UTF32Reader.read(UTF32Reader.java:150)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser.loadMore(ReaderBasedJsonParser.java:180)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd(ReaderBasedJsonParser.java:2259)",
          "com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:601)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAndReadValues(ObjectReader.java:1630)",
          "com.fasterxml.jackson.databind.ObjectReader.readValues(ObjectReader.java:1441)",
          "com.fasterxml.jackson.databind.seq.ReadValuesTest._iterator(ReadValuesTest.java:71)",
          "com.fasterxml.jackson.databind.seq.ReadValuesTest._testRootBeans(ReadValuesTest.java:87)",
          "com.fasterxml.jackson.databind.seq.ReadValuesTest.testRootBeans(ReadValuesTest.java:49)"
        ],
        "error": "java.io.CharConversionException",
        "message": "Invalid UTF-32 character 0x2261223a(above 10ffff)  at char #1, byte #7)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 58,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            715
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.misc.AccessFixTest",
        "methodName": "testCauseOfThrowableIgnoral",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:290)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:269)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:477)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3908)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3803)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2797)",
          "com.fasterxml.jackson.databind.misc.AccessFixTest._testCauseOfThrowableIgnoral(AccessFixTest.java:39)",
          "com.fasterxml.jackson.databind.misc.AccessFixTest.testCauseOfThrowableIgnoral(AccessFixTest.java:29)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not access private java.lang.Throwable java.lang.Throwable.cause (from class java.lang.Throwable; failed to set access: Can not force permission: (\"java.lang.reflect.ReflectPermission\" \"suppressAccessChecks\")"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 59,
    "changedFiles": {
      "com/fasterxml/jackson/databind/JavaType.java": {
        "modified": [
          [
            140
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/CollectionLikeType.java": {
        "modified": [
          [
            136
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/MapLikeType.java": {
        "modified": [
          [
            148
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/TypeFactory.java": {
        "modified": [
          [
            428
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TypeRefinementForMapTest",
        "methodName": "testMapKeyRefinement1384",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:261)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportMappingException(DeserializationContext.java:1234)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer(DeserializerCache.java:588)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer(DeserializerCache.java:168)",
          "com.fasterxml.jackson.databind.DeserializationContext.findKeyDeserializer(DeserializationContext.java:499)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual(MapDeserializer.java:237)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(DeserializationContext.java:681)",
          "com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:445)",
          "com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(TypeDeserializerBase.java:188)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:97)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromObject(AsArrayTypeDeserializer.java:61)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType(MapDeserializer.java:387)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:497)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(BeanDeserializer.java:511)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:396)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1196)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:314)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:148)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3789)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2833)",
          "com.fasterxml.jackson.databind.jsontype.TypeRefinementForMapTest.testMapKeyRefinement1384(TypeRefinementForMapTest.java:125)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not find a (Map) Key deserializer for type [simple type, class com.fasterxml.jackson.databind.jsontype.TypeRefinementForMapTest$CompoundKey]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 60,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/JsonValueSerializer.java": {
        "modified": [
          [
            9
          ],
          [
            17
          ],
          [
            226
          ],
          [
            363
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestDefaultWithCreators",
        "methodName": "testWithCreatorAndJsonValue",
        "stackTrace": [
          "com.fasterxml.jackson.databind.jsontype.TestDefaultWithCreators.testWithCreatorAndJsonValue(TestDefaultWithCreators.java:94)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<class com.fasterxml.jackson.databind.jsontype.TestDefaultWithCreators$Bean1385> but was:<class [B>"
      },
      {
        "className": "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdTest",
        "methodName": "testWithAsValue",
        "stackTrace": [
          "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdTest.testWithAsValue(ExternalTypeIdTest.java:476)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...alue\":12345,\"type\":\"[thingy]\"}> but was:<...alue\":12345,\"type\":\"[date]\"}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 61,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ObjectMapper.java": {
        "modified": [
          [
            232
          ]
        ]
      },
      "com/fasterxml/jackson/databind/jsontype/impl/StdTypeResolverBuilder.java": {
        "modified": [
          [
            74
          ],
          [
            104
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.DefaultTypingWithPrimitivesTest",
        "methodName": "testDefaultTypingWithLong",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:379)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:339)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow(BeanDeserializerBase.java:1591)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:278)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:178)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:150)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:129)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(AsPropertyTypeDeserializer.java:174)",
          "com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla.deserializeWithType(UntypedObjectDeserializer.java:554)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(MapDeserializer.java:509)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:352)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:27)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:129)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserializeWithType(MapDeserializer.java:387)",
          "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:63)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3795)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2839)",
          "com.fasterxml.jackson.databind.jsontype.DefaultTypingWithPrimitivesTest.testDefaultTypingWithLong(DefaultTypingWithPrimitivesTest.java:38)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Class java.lang.Long not subtype of [simple type, class long] (through reference chain: java.util.HashMap[\"longAsField\"]->com.fasterxml.jackson.databind.jsontype.Data[\"key\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 62,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/CollectionDeserializer.java": {
        "modified": [
          [
            184
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.creators.ArrayDelegatorCreatorForCollectionTest",
        "methodName": "testUnmodifiable",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefault(StdValueInstantiator.java:240)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:251)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:26)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:110)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:50)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserializeWithType(CollectionDeserializer.java:312)",
          "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:63)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3807)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2797)",
          "com.fasterxml.jackson.databind.creators.ArrayDelegatorCreatorForCollectionTest.testUnmodifiable(ArrayDelegatorCreatorForCollectionTest.java:28)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "No default constructor for [collection type; class java.util.Collections$UnmodifiableSet, contains [simple type, class java.lang.Object]]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 63,
    "changedFiles": {
      "com/fasterxml/jackson/databind/JsonMappingException.java": {
        "modified": [
          [
            10
          ],
          [
            131
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.exc.ExceptionPathTest",
        "methodName": "testReferenceChainForInnerClass",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.exc.ExceptionPathTest.testReferenceChainForInnerClass(ExceptionPathTest.java:37)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<....databind.deser.exc.[ExceptionPathTest$]Outer[\"inner\"]> but was:<....databind.deser.exc.[]Outer[\"inner\"]>"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.exc.TestExceptionHandlingWithDefaultDeserialization",
        "methodName": "testShouldThrowJsonMappingExceptionWithPathReference",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.exc.TestExceptionHandlingWithDefaultDeserialization.testShouldThrowJsonMappingExceptionWithPathReference(TestExceptionHandlingWithDefaultDeserialization.java:53)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<....databind.deser.exc.[TestExceptionHandlingWithDefaultDeserialization$Foo[\"bar\"]->com.fasterxml.jackson.databind.deser.exc.TestExceptionHandlingWithDefaultDeserialization$]Bar[\"baz\"]> but was:<....databind.deser.exc.[Foo[\"bar\"]->com.fasterxml.jackson.databind.deser.exc.]Bar[\"baz\"]>"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.exc.TestExceptionHandlingWithJsonCreatorDeserialization",
        "methodName": "testShouldThrowJsonMappingExceptionWithPathReference",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.exc.TestExceptionHandlingWithJsonCreatorDeserialization.testShouldThrowJsonMappingExceptionWithPathReference(TestExceptionHandlingWithJsonCreatorDeserialization.java:64)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<....databind.deser.exc.[TestExceptionHandlingWithJsonCreatorDeserialization$Foo[\"bar\"]->com.fasterxml.jackson.databind.deser.exc.TestExceptionHandlingWithJsonCreatorDeserialization$]Bar[\"baz\"]> but was:<....databind.deser.exc.[Foo[\"bar\"]->com.fasterxml.jackson.databind.deser.exc.]Bar[\"baz\"]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 64,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/PropertyBuilder.java": {
        "modified": [
          [
            152
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.filter.JsonIncludeTest",
        "methodName": "testIssue1351",
        "stackTrace": [
          "com.fasterxml.jackson.databind.filter.JsonIncludeTest.testIssue1351(JsonIncludeTest.java:320)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{[]}> but was:<{[\"str\":null]}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 65,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java": {
        "modified": [
          [
            128
          ]
        ]
      },
      "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java": {
        "modified": [
          [
            525
          ],
          [
            558
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.KeyDeser1429Test",
        "methodName": "testDeserializeKeyViaFactory",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:74)",
          "com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(DeserializationContext.java:1389)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(DeserializationContext.java:880)",
          "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.deserializeKey(StdKeyDeserializer.java:128)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind(MapDeserializer.java:445)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:365)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:27)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2861)",
          "com.fasterxml.jackson.databind.deser.KeyDeser1429Test.testDeserializeKeyViaFactory(KeyDeser1429Test.java:39)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
        "message": "Can not deserialize Map key of type com.fasterxml.jackson.databind.deser.KeyDeser1429Test$FullName from String \"first.last\": not a valid representation, problem: wrong number of arguments"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 66,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java": {
        "modified": [
          [
            11
          ],
          [
            18
          ],
          [
            314
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer",
        "methodName": "testCustomEnumKeySerializerWithPolymorphic",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:74)",
          "com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(DeserializationContext.java:1389)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(DeserializationContext.java:880)",
          "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD.deserializeKey(StdKeyDeserializer.java:322)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBind(MapDeserializer.java:445)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:365)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:27)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:499)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:108)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:178)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:150)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(AsPropertyTypeDeserializer.java:146)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:105)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1089)",
          "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:63)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)",
          "com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer.testCustomEnumKeySerializerWithPolymorphic(TestCustomEnumKeyDeserializer.java:221)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
        "message": "Can not deserialize Map key of type com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer$SuperTypeEnum from String \"FOO\": not a valid representation: No enum constant com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer.SuperTypeEnum.}"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 67,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java": {
        "modified": [
          [
            1403
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer",
        "methodName": "testCustomEnumValueAndKeyViaModifier",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:74)",
          "com.fasterxml.jackson.databind.DeserializationContext.weirdKeyException(DeserializationContext.java:1389)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(DeserializationContext.java:880)",
          "com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.deserializeKey(StdKeyDeserializer.java:130)",
          "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.deserialize(EnumMapDeserializer.java:139)",
          "com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.deserialize(EnumMapDeserializer.java:17)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2861)",
          "com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer.testCustomEnumValueAndKeyViaModifier(TestCustomEnumKeyDeserializer.java:275)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
        "message": "Can not deserialize Map key of type com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer$KeyEnum from String \"REPlaceMENTS\": not a valid representation, problem: (com.fasterxml.jackson.databind.exc.InvalidFormatException) Can not deserialize Map key of type com.fasterxml.jackson.databind.module.TestCustomEnumKeyDeserializer$KeyEnum from String \"REPlaceMENTS\": not one of values excepted for Enum class: [rootDirectory, replacements, licenseString]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 68,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerBase.java": {
        "modified": [
          [
            1192
          ],
          [
            1220
          ],
          [
            1234
          ],
          [
            1247
          ],
          [
            1269
          ],
          [
            1291
          ],
          [
            1304
          ],
          [
            1318
          ],
          [
            1335
          ],
          [
            1399
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest",
        "methodName": "testSuccessfulDeserializationOfObjectWithChainedArrayCreators",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:270)",
          "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(DeserializationContext.java:1456)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1012)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1204)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:314)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:148)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:287)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:259)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:26)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromArray(BeanDeserializerBase.java:1337)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:174)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:150)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)",
          "com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest.testSuccessfulDeserializationOfObjectWithChainedArrayCreators(SingleValueAsArrayTest.java:74)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not construct instance of com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest$Messages: no suitable constructor found, can not deserialize from Object value (missing default constructor or creator, or perhaps need to add/enable type information?)"
      },
      {
        "className": "com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest",
        "methodName": "testWithSingleString",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:270)",
          "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(DeserializationContext.java:1456)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1012)",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator._createFromStringFallbacks(ValueInstantiator.java:370)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromString(StdValueInstantiator.java:315)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(BeanDeserializerBase.java:1279)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:159)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:150)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2861)",
          "com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest.testWithSingleString(SingleValueAsArrayTest.java:80)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not construct instance of com.fasterxml.jackson.databind.struct.SingleValueAsArrayTest$Bean1421B: no String-argument constructor/factory method to deserialize from String value ('test2')"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 69,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/CreatorCollector.java": {
        "modified": [
          [
            165
          ],
          [
            195
          ],
          [
            299
          ],
          [
            310
          ],
          [
            332
          ],
          [
            341
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.creators.Creator1476Test",
        "methodName": "testConstructorChoice",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:256)",
          "com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:993)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps(BeanDeserializerFactory.java:539)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.buildBeanDeserializer(BeanDeserializerFactory.java:228)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(BeanDeserializerFactory.java:143)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(DeserializerCache.java:406)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(DeserializerCache.java:352)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:264)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:477)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3908)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3803)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2797)",
          "com.fasterxml.jackson.databind.creators.Creator1476Test.testConstructorChoice(Creator1476Test.java:38)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Could not find creator property with name 'intField' (in class com.fasterxml.jackson.databind.creators.Creator1476Test$SimplePojo)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 70,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java": {
        "modified": [
          [
            440
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
        "methodName": "testCaseInsensitiveUnwrap",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove(BeanPropertyMap.java:450)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(BeanDeserializerBase.java:534)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:293)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:476)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3899)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3794)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)",
          "com.fasterxml.jackson.databind.struct.TestUnwrapped.testCaseInsensitiveUnwrap(TestUnwrapped.java:215)"
        ],
        "error": "java.util.NoSuchElementException",
        "message": "No entry 'businessAddress' found, can't remove"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 71,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java": {
        "modified": [
          [
            75
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestMapDeserialization",
        "methodName": "testcharSequenceKeyMap",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:284)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownKeyDeserializer(DeserializerCache.java:587)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer(DeserializerCache.java:168)",
          "com.fasterxml.jackson.databind.DeserializationContext.findKeyDeserializer(DeserializationContext.java:500)",
          "com.fasterxml.jackson.databind.deser.std.MapDeserializer.createContextual(MapDeserializer.java:231)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleSecondaryContextualization(DeserializationContext.java:685)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:482)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3908)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3803)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2816)",
          "com.fasterxml.jackson.databind.deser.TestMapDeserialization.testcharSequenceKeyMap(TestMapDeserialization.java:507)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not find a (Map) Key deserializer for type [simple type, class java.lang.CharSequence]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 72,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/InnerClassProperty.java": {
        "modified": [
          [
            93
          ],
          [
            167
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.creators.InnerClassCreatorTest",
        "methodName": "testIssue1501",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.getCreatorIndex(SettableBeanProperty.java:413)",
          "com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.assignParameter(PropertyValueBuffer.java:209)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:380)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1124)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:298)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:133)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3807)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2797)",
          "com.fasterxml.jackson.databind.creators.InnerClassCreatorTest.testIssue1501(InnerClassCreatorTest.java:30)"
        ],
        "error": "java.lang.IllegalStateException",
        "message": "Internal error: no creator index for property 'a' (of type com.fasterxml.jackson.databind.deser.impl.InnerClassProperty)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 73,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/POJOPropertiesCollector.java": {
        "modified": [
          [
            7
          ],
          [
            731
          ]
        ]
      },
      "com/fasterxml/jackson/databind/introspect/POJOPropertyBuilder.java": {
        "modified": [
          [
            644
          ],
          [
            683
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
        "methodName": "testReadOnlyAndWriteOnly",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1485)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1463)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)",
          "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest.testReadOnlyAndWriteOnly(ReadOrWriteOnlyTest.java:66)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"x\" (class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$ReadXWriteY), not marked as ignorable (one known property: \"y\"])"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest",
        "methodName": "testReadOnly935",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:62)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:834)",
          "com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:1093)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1485)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1463)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:282)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)",
          "com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest.testReadOnly935(ReadOrWriteOnlyTest.java:75)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException",
        "message": "Unrecognized field \"fullName\" (class com.fasterxml.jackson.databind.deser.ReadOrWriteOnlyTest$Pojo935), not marked as ignorable (2 known properties: \"lastName\", \"firstName\"])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 74,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java": {
        "modified": [
          [
            156
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl",
        "methodName": "testWithEmptyStringAsNullObject1533",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:270)",
          "com.fasterxml.jackson.databind.DeserializationContext.wrongTokenException(DeserializationContext.java:1376)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportWrongTokenException(DeserializationContext.java:1197)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(AsPropertyTypeDeserializer.java:157)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:88)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1089)",
          "com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:502)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:108)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:276)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:140)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3798)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2842)",
          "com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl.testWithEmptyStringAsNullObject1533(TestPolymorphicWithDefaultImpl.java:274)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Unexpected token (VALUE_STRING), expected FIELD_NAME: missing property 'type' that is to contain type id  (for class com.fasterxml.jackson.databind.jsontype.TestPolymorphicWithDefaultImpl$AsProperty)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 75,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/EnumSerializer.java": {
        "modified": [
          [
            86
          ],
          [
            104
          ],
          [
            217
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.EnumFormatShapeTest",
        "methodName": "testEnumPropertyAsNumber",
        "stackTrace": [
          "com.fasterxml.jackson.databind.struct.EnumFormatShapeTest.testEnumPropertyAsNumber(EnumFormatShapeTest.java:113)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"color\":[2]}> but was:<{\"color\":[\"GREEN\"]}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 76,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BuilderBasedDeserializer.java": {
        "modified": [
          [
            583
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
        "methodName": "testWithUnwrappedAndCreatorSingleParameterAtBeginning",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest.testWithUnwrappedAndCreatorSingleParameterAtBeginning(BuilderWithUnwrappedTest.java:176)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<John> but was:<null>"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
        "methodName": "testWithUnwrappedAndCreatorMultipleParametersAtBeginning",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest.testWithUnwrappedAndCreatorMultipleParametersAtBeginning(BuilderWithUnwrappedTest.java:215)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<John> but was:<null>"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
        "methodName": "testWithUnwrappedAndCreatorSingleParameterInMiddle",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest.testWithUnwrappedAndCreatorSingleParameterInMiddle(BuilderWithUnwrappedTest.java:191)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<30> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest",
        "methodName": "testWithUnwrappedAndCreatorMultipleParametersInMiddle",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.builder.BuilderWithUnwrappedTest.testWithUnwrappedAndCreatorMultipleParametersInMiddle(BuilderWithUnwrappedTest.java:230)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<30> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 77,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            143
          ],
          [
            842
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
        "methodName": "testIssue1599",
        "stackTrace": [
          "com.fasterxml.jackson.databind.BaseTest.verifyException(BaseTest.java:368)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest.testIssue1599(IllegalTypesCheckTest.java:35)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([Illegal type]): got one with message \"N/A"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 78,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            48
          ],
          [
            156
          ],
          [
            878
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
        "methodName": "testIssue1599",
        "stackTrace": [
          "com.fasterxml.jackson.databind.BaseTest.verifyException(BaseTest.java:367)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest.testIssue1599(IllegalTypesCheckTest.java:35)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([Illegal type]): got one with message \"N/A"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 79,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java": {
        "modified": [
          [
            579
          ]
        ]
      },
      "com/fasterxml/jackson/databind/introspect/ObjectIdInfo.java": {
        "modified": [
          [
            25
          ],
          [
            63
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.java": {
        "modified": [
          [
            432
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest",
        "methodName": "testIssue1607",
        "stackTrace": [
          "com.fasterxml.jackson.databind.objectid.AlwaysAsReferenceFirstTest.testIssue1607(AlwaysAsReferenceFirstTest.java:82)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"alwaysClass\":[1],\"alwaysProp\":2}> but was:<{\"alwaysClass\":[{\"id\":1,\"value\":13}],\"alwaysProp\":2}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 80,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java": {
        "modified": [
          [
            79
          ],
          [
            86
          ],
          [
            145
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.TestTypeNames",
        "methodName": "testBaseTypeId1616",
        "stackTrace": [
          "com.fasterxml.jackson.databind.AnnotationIntrospector._findAnnotation(AnnotationIntrospector.java:1336)",
          "com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findSubtypes(JacksonAnnotationIntrospector.java:556)",
          "com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByTypeId(StdSubtypeResolver.java:145)",
          "com.fasterxml.jackson.databind.jsontype.TestTypeNames.testBaseTypeId1616(TestTypeNames.java:47)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 81,
    "changedFiles": {
      "com/fasterxml/jackson/databind/introspect/JacksonAnnotationIntrospector.java": {
        "modified": [
          [
            764
          ],
          [
            797
          ],
          [
            831
          ],
          [
            1119
          ],
          [
            1135
          ],
          [
            1151
          ],
          [
            1457
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.introspect.TypeCoercion1592Test",
        "methodName": "testTypeCoercion1592",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:72)",
          "com.fasterxml.jackson.databind.SerializerProvider.reportBadPropertyDefinition(SerializerProvider.java:1185)",
          "com.fasterxml.jackson.databind.ser.PropertyBuilder.buildWriter(PropertyBuilder.java:103)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(BeanSerializerFactory.java:881)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanProperties(BeanSerializerFactory.java:675)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructBeanSerializer(BeanSerializerFactory.java:456)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanSerializer(BeanSerializerFactory.java:284)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory._createSerializer2(BeanSerializerFactory.java:236)",
          "com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(BeanSerializerFactory.java:170)",
          "com.fasterxml.jackson.databind.SerializerProvider._createUntypedSerializer(SerializerProvider.java:1376)",
          "com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(SerializerProvider.java:1327)",
          "com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(SerializerProvider.java:509)",
          "com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(SerializerProvider.java:712)",
          "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:308)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3881)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3195)",
          "com.fasterxml.jackson.databind.introspect.TypeCoercion1592Test.testTypeCoercion1592(TypeCoercion1592Test.java:31)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
        "message": "Invalid definition for property \"i\" (of type com.fasterxml.jackson.databind.introspect.TypeCoercion1592Test$Bean1592): Can not refine serialization type [simple type, class int] into java.lang.Integer; types not related"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 82,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            495
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.filter.IgnorePropertyOnDeserTest",
        "methodName": "testIgnoreGetterNotSetter1595",
        "stackTrace": [
          "com.fasterxml.jackson.databind.filter.IgnorePropertyOnDeserTest.testIgnoreGetterNotSetter1595(IgnorePropertyOnDeserTest.java:89)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<jack> but was:<null>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 83,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java": {
        "modified": [
          [
            119
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.filter.ProblemHandlerTest",
        "methodName": "testWeirdStringHandling",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:74)",
          "com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1410)",
          "com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.deserialize(FromStringDeserializer.java:135)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3814)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)",
          "com.fasterxml.jackson.databind.filter.ProblemHandlerTest.testWeirdStringHandling(ProblemHandlerTest.java:247)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidFormatException",
        "message": "Can not deserialize value of type java.util.UUID from String \"not a uuid!\": not a valid textual representation"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 84,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java": {
        "modified": [
          [
            29
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.type.TestTypeFactoryWithRecursiveTypes",
        "methodName": "testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TestTypeFactoryWithRecursiveTypes.testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType(TestTypeFactoryWithRecursiveTypes.java:30)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"[base\":1,\"]sub\":2}> but was:<{\"[]sub\":2}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 85,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java": {
        "modified": [
          [
            67
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.DateSerializationTest",
        "methodName": "testFormatWithoutPattern",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.DateSerializationTest.testFormatWithoutPattern(DateSerializationTest.java:316)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"date\":\"1970-01-01[X01:00:]00\"}> but was:<{\"date\":\"1970-01-01[T01:00:00.000+01]00\"}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 86,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/ResolvedRecursiveType.java": {
        "modified": [
          [
            29
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.type.RecursiveTypeTest",
        "methodName": "testSuperClassWithReferencedJavaType",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.RecursiveTypeTest.testSuperClassWithReferencedJavaType(RecursiveTypeTest.java:113)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.fasterxml.jackson.databind.type.TestTypeFactoryWithRecursiveTypes",
        "methodName": "testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TestTypeFactoryWithRecursiveTypes.testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType(TestTypeFactoryWithRecursiveTypes.java:30)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"[base\":1,\"]sub\":2}> but was:<{\"[]sub\":2}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 87,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/StdDateFormat.java": {
        "modified": [
          [
            47
          ],
          [
            65
          ],
          [
            84
          ],
          [
            102
          ],
          [
            132
          ],
          [
            514
          ],
          [
            526
          ],
          [
            597
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.TestDateDeserialization",
        "methodName": "testDateUtilISO8601NoTimezoneNonDefault",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.TestDateDeserialization.testDateUtilISO8601NoTimezoneNonDefault(TestDateDeserialization.java:277)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Wed Dec 31 16:00:00 PST 1969> but was:<Wed Dec 31 18:00:00 PST 1969>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 88,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/ClassNameIdResolver.java": {
        "modified": [
          [
            58
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.GenericTypeId1735Test",
        "methodName": "testNestedTypeCheck1735",
        "stackTrace": [
          "com.fasterxml.jackson.databind.BaseTest.verifyException(BaseTest.java:367)",
          "com.fasterxml.jackson.databind.jsontype.GenericTypeId1735Test.testNestedTypeCheck1735(GenericTypeId1735Test.java:61)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([not subtype of]): got one (of type com.fasterxml.jackson.databind.JsonMappingException) with message \"Problem deserializing property 'w' (expected type: [simple type, class com.fasterxml.jackson.databind.jsontype.GenericTypeId1735Test$Payload1735]; actual type: java.util.HashMap), problem: Can not set com.fasterxml.jackson.databind.jsontype.GenericTypeId1735Test$Payload1735 field com.fasterxml.jackson.databind.jsontype.GenericTypeId1735Test$Wrapper1735.w to java.util.HashMap"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 89,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            65
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
        "methodName": "testJDKTypes1737",
        "stackTrace": [
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._testTypes1737(IllegalTypesCheckTest.java:96)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._testTypes1737(IllegalTypesCheckTest.java:84)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest.testJDKTypes1737(IllegalTypesCheckTest.java:61)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not pass"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 90,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/ValueInstantiator.java": {
        "modified": [
          [
            72
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java": {
        "modified": [
          [
            232
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.creators.DelegatingArrayCreator1804Test",
        "methodName": "testDelegatingArray1804",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:270)",
          "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(DeserializationContext.java:1469)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1012)",
          "com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserialize(AbstractDeserializer.java:216)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3814)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)",
          "com.fasterxml.jackson.databind.creators.DelegatingArrayCreator1804Test.testDelegatingArray1804(DelegatingArrayCreator1804Test.java:38)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Can not construct instance of com.fasterxml.jackson.databind.creators.DelegatingArrayCreator1804Test$MyType: abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 91,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/DeserializerCache.java": {
        "modified": [
          [
            541
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.jdk.MapDeserializerCachingTest",
        "methodName": "testCachedSerialize",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.jdk.MapDeserializerCachingTest.testCachedSerialize(MapDeserializerCachingTest.java:49)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Not using custom key deserializer for input: {\"data\":{\"1st\":\"onedata\",\"2nd\":\"twodata\"}}; resulted in: {1st=onedata, 2nd=twodata}"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 92,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            64
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
        "methodName": "testJDKTypes1737",
        "stackTrace": [
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._testTypes1737(IllegalTypesCheckTest.java:96)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._testTypes1737(IllegalTypesCheckTest.java:84)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest.testJDKTypes1737(IllegalTypesCheckTest.java:61)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not pass"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 93,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java": {
        "modified": [
          [
            83
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
        "methodName": "testJDKTypes1872",
        "stackTrace": [
          "com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.validateSubType(SubTypeValidator.java:85)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory._validateSubType(BeanDeserializerFactory.java:866)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(BeanDeserializerFactory.java:142)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(DeserializerCache.java:403)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(DeserializerCache.java:349)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:264)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(DeserializationContext.java:443)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.createContextual(CollectionDeserializer.java:206)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.createContextual(CollectionDeserializer.java:26)",
          "com.fasterxml.jackson.databind.DeserializationContext.handlePrimaryContextualization(DeserializationContext.java:650)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve(BeanDeserializerBase.java:490)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:293)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:476)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:3915)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3810)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2858)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest.testJDKTypes1872(IllegalTypesCheckTest.java:112)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 94,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java": {
        "modified": [
          [
            23
          ],
          [
            98
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest",
        "methodName": "testC3P0Types",
        "stackTrace": [
          "com.fasterxml.jackson.databind.BaseTest.verifyException(BaseTest.java:368)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._verifyException(IllegalTypesCheckTest.java:156)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._verifySecurityException(IllegalTypesCheckTest.java:140)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._testIllegalType(IllegalTypesCheckTest.java:133)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest._testIllegalType(IllegalTypesCheckTest.java:119)",
          "com.fasterxml.jackson.databind.interop.IllegalTypesCheckTest.testC3P0Types(IllegalTypesCheckTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected an exception with one of substrings ([Illegal type]): got one with message \"Can not instantiate value of type [simple type, class com.mchange.v2.c3p0.jacksontest.ComboPooledDataSource] from String value ('/tmp/foobar.txt'); no single-String constructor/factory method"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 95,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/TypeFactory.java": {
        "modified": [
          [
            355
          ],
          [
            366
          ],
          [
            896
          ]
        ]
      },
      "com/fasterxml/jackson/databind/type/TypeParser.java": {
        "modified": [
          [
            59
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.type.TestTypeFactory",
        "methodName": "testCanonicalNames",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TypeFactory._fromVariable(TypeFactory.java:1413)",
          "com.fasterxml.jackson.databind.type.TypeFactory._fromAny(TypeFactory.java:1175)",
          "com.fasterxml.jackson.databind.type.TypeFactory._fromParamType(TypeFactory.java:1396)",
          "com.fasterxml.jackson.databind.type.TypeFactory._fromAny(TypeFactory.java:1165)",
          "com.fasterxml.jackson.databind.type.TypeFactory._resolveSuperInterfaces(TypeFactory.java:1311)",
          "com.fasterxml.jackson.databind.type.TypeFactory._fromClass(TypeFactory.java:1254)",
          "com.fasterxml.jackson.databind.type.TypeParser.parseType(TypeParser.java:59)",
          "com.fasterxml.jackson.databind.type.TypeParser.parse(TypeParser.java:32)",
          "com.fasterxml.jackson.databind.type.TypeFactory.constructFromCanonical(TypeFactory.java:536)",
          "com.fasterxml.jackson.databind.type.TestTypeFactory.testCanonicalNames(TestTypeFactory.java:237)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 96,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java": {
        "modified": [
          [
            735
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.creators.CreatorWithNamingStrategyTest",
        "methodName": "testSnakeCaseWithOneArg",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:62)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportBadPropertyDefinition(DeserializationContext.java:1446)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps(BeanDeserializerFactory.java:567)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.buildBeanDeserializer(BeanDeserializerFactory.java:227)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(BeanDeserializerFactory.java:137)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(DeserializerCache.java:411)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(DeserializerCache.java:349)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCache2(DeserializerCache.java:264)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache._createAndCacheValueDeserializer(DeserializerCache.java:244)",
          "com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializerCache.java:142)",
          "com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(DeserializationContext.java:477)",
          "com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(ObjectMapper.java:4190)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4009)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)",
          "com.fasterxml.jackson.databind.deser.creators.CreatorWithNamingStrategyTest.testSnakeCaseWithOneArg(CreatorWithNamingStrategyTest.java:49)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
        "message": "Invalid definition for property `param_name0` (of type `com.fasterxml.jackson.databind.deser.creators.CreatorWithNamingStrategyTest$OneProperty`): Could not find creator property with name 'param_name0' (known Creator properties: [paramName0])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 97,
    "changedFiles": {
      "com/fasterxml/jackson/databind/node/POJONode.java": {
        "modified": [
          [
            114
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.POJONodeTest",
        "methodName": "testPOJONodeCustomSer",
        "stackTrace": [
          "com.fasterxml.jackson.databind.node.POJONodeTest.testPOJONodeCustomSer(POJONodeTest.java:53)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...Str\":\"The value is: [Hello!]\"}}> but was:<...Str\":\"The value is: [NULL]\"}}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 98,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java": {
        "modified": [
          [
            298
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test",
        "methodName": "testExample",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)",
          "com.fasterxml.jackson.databind.DeserializationContext.instantiationException(DeserializationContext.java:1601)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapAsJsonMappingException(StdValueInstantiator.java:484)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.rewrapCtorProblem(StdValueInstantiator.java:503)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(StdValueInstantiator.java:285)",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromObjectWith(ValueInstantiator.java:229)",
          "com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(PropertyBasedCreator.java:195)",
          "com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(ExternalTypeHandler.java:302)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeUsingPropertyBasedWithExternalTypeId(BeanDeserializer.java:994)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithExternalTypeId(BeanDeserializer.java:846)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:324)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:159)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:286)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1611)",
          "com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1219)",
          "com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test.testExample(ExternalTypeIdWithEnum1328Test.java:87)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
        "message": "Cannot construct instance of `com.fasterxml.jackson.databind.jsontype.ext.ExternalTypeIdWithEnum1328Test$AnimalAndType`, problem: argument type mismatch"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 99,
    "changedFiles": {
      "com/fasterxml/jackson/databind/type/ReferenceType.java": {
        "modified": [
          [
            169
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.type.TestTypeFactory",
        "methodName": "testCanonicalNames",
        "stackTrace": [
          "com.fasterxml.jackson.databind.type.TestTypeFactory.testCanonicalNames(TestTypeFactory.java:238)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...rence<java.lang.Long[>]> but was:<...rence<java.lang.Long[]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 100,
    "changedFiles": {
      "com/fasterxml/jackson/databind/node/TreeTraversingParser.java": {
        "modified": [
          [
            363
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.TestConversions",
        "methodName": "testBase64Text",
        "stackTrace": [
          "com.fasterxml.jackson.databind.node.TestConversions.testBase64Text(TestConversions.java:189)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Failed (variant MODIFIED-FOR-URL, data length 1): Cannot access contents of TextNode as binary due to broken Base64 encoding: Unexpected end-of-String in base64 content"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 101,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/BeanDeserializer.java": {
        "modified": [
          [
            771
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.struct.TestUnwrapped",
        "methodName": "testIssue2088UnwrappedFieldsAfterLastCreatorProp",
        "stackTrace": [
          "com.fasterxml.jackson.databind.struct.TestUnwrapped.testIssue2088UnwrappedFieldsAfterLastCreatorProp(TestUnwrapped.java:254)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<4> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 102,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java": {
        "modified": [
          [
            67
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.jdk.SqlDateSerializationTest",
        "methodName": "testSqlDateConfigOverride",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.jdk.SqlDateSerializationTest.testSqlDateConfigOverride(SqlDateSerializationTest.java:104)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[\"1980+04+14\"]> but was:<[324547200000]>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 103,
    "changedFiles": {
      "com/fasterxml/jackson/databind/DatabindContext.java": {
        "modified": [
          [
            195
          ]
        ]
      },
      "com/fasterxml/jackson/databind/DeserializationContext.java": {
        "modified": [
          [
            714
          ],
          [
            1603
          ]
        ]
      },
      "com/fasterxml/jackson/databind/JsonMappingException.java": {
        "modified": [
          [
            10
          ],
          [
            339
          ],
          [
            380
          ]
        ]
      },
      "com/fasterxml/jackson/databind/SerializerProvider.java": {
        "modified": [
          [
            1341
          ],
          [
            1361
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.java": {
        "modified": [
          [
            1589
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java": {
        "modified": [
          [
            222
          ],
          [
            281
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/DeserializerCache.java": {
        "modified": [
          [
            268
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/SettableAnyProperty.java": {
        "modified": [
          [
            202
          ],
          [
            214
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/SettableBeanProperty.java": {
        "modified": [
          [
            590
          ],
          [
            611
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/std/StdDeserializer.java": {
        "modified": [
          [
            526
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/std/StdKeyDeserializer.java": {
        "modified": [
          [
            135
          ],
          [
            262
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.java": {
        "modified": [
          [
            456
          ]
        ]
      },
      "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.java": {
        "modified": [
          [
            364
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/DefaultSerializerProvider.java": {
        "modified": [
          [
            171
          ],
          [
            505
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/PropertyBuilder.java": {
        "modified": [
          [
            103
          ]
        ]
      },
      "com/fasterxml/jackson/databind/util/ClassUtil.java": {
        "modified": [
          [
            10
          ],
          [
            752
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.exc.BasicExceptionTest",
        "methodName": "testLocationAddition",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.BasicExceptionTest.testLocationAddition(BasicExceptionTest.java:127)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should only get one 'at [' marker, got 2, source: Cannot deserialize Map key of type `com.fasterxml.jackson.databind.BaseMapTest$ABC` from String \"value\": not a valid representation, problem: (com.fasterxml.jackson.databind.exc.InvalidFormatException) Cannot deserialize Map key of type `com.fasterxml.jackson.databind.BaseMapTest$ABC` from String \"value\": not one of values excepted for Enum class: [A, B, C]"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 104,
    "changedFiles": {
      "com/fasterxml/jackson/databind/util/StdDateFormat.java": {
        "modified": [
          [
            441
          ],
          [
            483
          ],
          [
            516
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest",
        "methodName": "testDateISO8601_10k",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest.serialize(DateSerializationTest.java:366)",
          "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest.testDateISO8601_10k(DateSerializationTest.java:134)"
        ],
        "error": "org.junit.ComparisonFailure",
        "message": "expected:<\"[+10]204-01-01T00:00:00.0...> but was:<\"[:]204-01-01T00:00:00.0...>"
      },
      {
        "className": "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest",
        "methodName": "testDateISO8601_BCE",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest.serialize(DateSerializationTest.java:366)",
          "com.fasterxml.jackson.databind.ser.jdk.DateSerializationTest.testDateISO8601_BCE(DateSerializationTest.java:148)"
        ],
        "error": "org.junit.ComparisonFailure",
        "message": "expected:<\"[+0000]-01-01T00:00:00.000+...> but was:<\"[0001]-01-01T00:00:00.000+...>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 105,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/JdkDeserializers.java": {
        "modified": [
          [
            22
          ],
          [
            48
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.jdk.JDKScalarsTest",
        "methodName": "testVoidDeser",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1032)",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:262)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:356)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1324)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:173)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:161)",
          "com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:136)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)",
          "com.fasterxml.jackson.databind.deser.jdk.JDKScalarsTest.testVoidDeser(JDKScalarsTest.java:863)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.MismatchedInputException",
        "message": "Cannot construct instance of `java.lang.Void` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (123)"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 106,
    "changedFiles": {
      "com/fasterxml/jackson/databind/node/TreeTraversingParser.java": {
        "modified": [
          [
            308
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.TestTreeTraversingParser",
        "methodName": "testNumberOverflowLong",
        "stackTrace": [
          "com.fasterxml.jackson.databind.node.TestTreeTraversingParser.testNumberOverflowLong(TestTreeTraversingParser.java:323)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected failure for `long` overflow"
      },
      {
        "className": "com.fasterxml.jackson.databind.node.TestTreeTraversingParser",
        "methodName": "testNumberOverflowInt",
        "stackTrace": [
          "com.fasterxml.jackson.databind.node.TestTreeTraversingParser.testNumberOverflowInt(TestTreeTraversingParser.java:282)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected failure for `int` overflow"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 107,
    "changedFiles": {
      "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java": {
        "modified": [
          [
            165
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.filter.ProblemHandlerUnknownTypeId2221Test",
        "methodName": "testWithDeserializationProblemHandler",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:365)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:302)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:116)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserializeWithType(CollectionDeserializer.java:314)",
          "com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:136)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:189)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:161)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:130)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromObject(AsPropertyTypeDeserializer.java:97)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(BeanDeserializerBase.java:1178)",
          "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:68)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)",
          "com.fasterxml.jackson.databind.deser.filter.ProblemHandlerUnknownTypeId2221Test.testWithDeserializationProblemHandler(ProblemHandlerUnknownTypeId2221Test.java:95)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "(was java.lang.NullPointerException) (through reference chain: com.fasterxml.jackson.databind.deser.filter.ProblemHandlerUnknownTypeId2221Test$GenericContent[\"innerObjects\"]->java.util.ArrayList[1])"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 108,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ObjectReader.java": {
        "modified": [
          [
            1169
          ],
          [
            1707
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.node.EmptyContentAsTreeTest",
        "methodName": "testNullFromEOFWithParserAndReader",
        "stackTrace": [
          "com.fasterxml.jackson.databind.node.EmptyContentAsTreeTest._assertNullTree(EmptyContentAsTreeTest.java:129)",
          "com.fasterxml.jackson.databind.node.EmptyContentAsTreeTest.testNullFromEOFWithParserAndReader(EmptyContentAsTreeTest.java:62)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should get `null` for reads with `JsonParser`, instead got: com.fasterxml.jackson.databind.node.MissingNode"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 109,
    "changedFiles": {
      "com/fasterxml/jackson/databind/ser/std/NumberSerializer.java": {
        "modified": [
          [
            37
          ],
          [
            58
          ],
          [
            113
          ]
        ]
      },
      "com/fasterxml/jackson/databind/ser/std/NumberSerializers.java": {
        "modified": [
          [
            5
          ],
          [
            100
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.ser.jdk.BigDecimalPlain2230Test",
        "methodName": "testBigIntegerAsPlainTest",
        "stackTrace": [
          "com.fasterxml.jackson.databind.ser.jdk.BigDecimalPlain2230Test.testBigIntegerAsPlainTest(BigDecimalPlain2230Test.java:35)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<{\"value\":\"[0.0000000005]\"}> but was:<{\"value\":\"[5E-10]\"}>"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 110,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java": {
        "modified": [
          [
            47
          ],
          [
            58
          ],
          [
            78
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.jdk.UtilCollectionsTypesTest",
        "methodName": "testUnmodifiableListFromLinkedList",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1452)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1028)",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator.createUsingDefault(ValueInstantiator.java:189)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefault(StdValueInstantiator.java:267)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.createDefaultInstance(CollectionDeserializer.java:255)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:245)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:27)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:116)",
          "com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:53)",
          "com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserializeWithType(CollectionDeserializer.java:314)",
          "com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:68)",
          "com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4013)",
          "com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3004)",
          "com.fasterxml.jackson.databind.deser.jdk.UtilCollectionsTypesTest._writeReadCollection(UtilCollectionsTypesTest.java:122)",
          "com.fasterxml.jackson.databind.deser.jdk.UtilCollectionsTypesTest.testUnmodifiableListFromLinkedList(UtilCollectionsTypesTest.java:71)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.InvalidDefinitionException",
        "message": "Cannot construct instance of `java.util.Collections$UnmodifiableList` (no Creators, like default construct, exist): no default no-arguments constructor found"
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 111,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/CreatorProperty.java": {
        "modified": [
          [
            135
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/FieldProperty.java": {
        "modified": [
          [
            93
          ],
          [
            217
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/MethodProperty.java": {
        "modified": [
          [
            84
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/ObjectIdReferenceProperty.java": {
        "modified": [
          [
            54
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/ObjectIdValueProperty.java": {
        "modified": [
          [
            55
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/impl/SetterlessProperty.java": {
        "modified": [
          [
            68
          ],
          [
            156
          ]
        ]
      },
      "com/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer.java": {
        "modified": [
          [
            43
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.jdk.JDKAtomicTypesDeserTest",
        "methodName": "testNullWithinNested",
        "stackTrace": [
          "com.fasterxml.jackson.databind.deser.jdk.JDKAtomicTypesDeserTest.testNullWithinNested(JDKAtomicTypesDeserTest.java:298)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "JacksonDatabind",
    "bugId": 112,
    "changedFiles": {
      "com/fasterxml/jackson/databind/deser/std/StringCollectionDeserializer.java": {
        "modified": [
          [
            107
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.databind.deser.creators.DelegatingArrayCreator2324Test",
        "methodName": "testDeserializeBagOfStrings",
        "stackTrace": [
          "com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)",
          "com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)",
          "com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1032)",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator.createUsingDefault(ValueInstantiator.java:189)",
          "com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefault(StdValueInstantiator.java:267)",
          "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:169)",
          "com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(StringCollectionDeserializer.java:21)",
          "com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)",
          "com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)",
          "com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1611)",
          "com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1219)",
          "com.fasterxml.jackson.databind.deser.creators.DelegatingArrayCreator2324Test.testDeserializeBagOfStrings(DelegatingArrayCreator2324Test.java:59)"
        ],
        "error": "com.fasterxml.jackson.databind.exc.MismatchedInputException",
        "message": "Cannot construct instance of `com.fasterxml.jackson.databind.deser.creators.DelegatingArrayCreator2324Test$ImmutableBag` (although at least one Creator exists): no default no-arguments constructor found"
      }
    ]
  },
  {
    "project": "JacksonXml",
    "bugId": 1,
    "changedFiles": {
      "com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java": {
        "modified": [
          [
            512
          ],
          [
            550
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test",
        "methodName": "testNestedUnwrappedLists180",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180(NestedUnwrappedLists180Test.java:72)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest",
        "methodName": "testNestedWithEmpty2",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty2(NestedUnwrappedListsTest.java:122)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      },
      {
        "className": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest",
        "methodName": "testNestedWithEmpty",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty(NestedUnwrappedListsTest.java:100)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonXml",
    "bugId": 2,
    "changedFiles": {
      "com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream.java": {
        "modified": [
          [
            62
          ],
          [
            324
          ],
          [
            340
          ],
          [
            506
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest",
        "methodName": "testMixedContent",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.misc.XmlTextTest.testMixedContent(XmlTextTest.java:70)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<27> but was:<0>"
      }
    ]
  },
  {
    "project": "JacksonXml",
    "bugId": 3,
    "changedFiles": {
      "com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser.java": {
        "modified": [
          [
            669
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest",
        "methodName": "testXmlAttributesWithNextTextValue",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest.testXmlAttributesWithNextTextValue(XmlParserNextXxxTest.java:41)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<7> but was:<null>"
      }
    ]
  },
  {
    "project": "JacksonXml",
    "bugId": 4,
    "changedFiles": {
      "com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java": {
        "modified": [
          [
            204
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.dataformat.xml.misc.RootNameTest",
        "methodName": "testDynamicRootName",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.misc.RootNameTest.testDynamicRootName(RootNameTest.java:81)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<<[rudy]/>> but was:<<[null]/>>"
      }
    ]
  },
  {
    "project": "JacksonXml",
    "bugId": 5,
    "changedFiles": {
      "com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider.java": {
        "modified": [
          [
            59
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.dataformat.xml.MapperCopyTest",
        "methodName": "testCopyWith",
        "stackTrace": [
          "com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testCopyWith(MapperCopyTest.java:89)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should NOT use name 'AnnotatedName' but 'Pojo282', xml = <AnnotatedName><a>3</a></AnnotatedName>"
      }
    ]
  },
  {
    "project": "JacksonXml",
    "bugId": 6,
    "changedFiles": {
      "com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator.java": {
        "modified": [
          [
            843
          ],
          [
            866
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization",
        "methodName": "testWith0Bytes",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:353)",
          "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:316)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:219)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:117)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:107)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)",
          "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith0Bytes(TestBinaryStreamToXMLSerialization.java:18)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Operation not supported by generator of type com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator (through reference chain: com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization$TestPojo[\"field\"])"
      },
      {
        "className": "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization",
        "methodName": "testWith2Bytes",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:353)",
          "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:316)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:219)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:117)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:107)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)",
          "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith2Bytes(TestBinaryStreamToXMLSerialization.java:30)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Operation not supported by generator of type com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator (through reference chain: com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization$TestPojo[\"field\"])"
      },
      {
        "className": "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization",
        "methodName": "testWith3Bytes",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:353)",
          "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:316)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:219)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:117)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:107)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)",
          "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith3Bytes(TestBinaryStreamToXMLSerialization.java:36)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Operation not supported by generator of type com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator (through reference chain: com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization$TestPojo[\"field\"])"
      },
      {
        "className": "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization",
        "methodName": "testWith4Bytes",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:353)",
          "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:316)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:219)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:117)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:107)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)",
          "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith4Bytes(TestBinaryStreamToXMLSerialization.java:42)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Operation not supported by generator of type com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator (through reference chain: com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization$TestPojo[\"field\"])"
      },
      {
        "className": "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization",
        "methodName": "testWith1Byte",
        "stackTrace": [
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)",
          "com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:353)",
          "com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:316)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(XmlBeanSerializerBase.java:219)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(XmlBeanSerializer.java:117)",
          "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(XmlSerializerProvider.java:107)",
          "com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)",
          "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)",
          "com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization.testWith1Byte(TestBinaryStreamToXMLSerialization.java:24)"
        ],
        "error": "com.fasterxml.jackson.databind.JsonMappingException",
        "message": "Operation not supported by generator of type com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator (through reference chain: com.fasterxml.jackson.dataformat.xml.ser.TestBinaryStreamToXMLSerialization$TestPojo[\"field\"])"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 1,
    "changedFiles": {
      "org/jsoup/nodes/Document.java": {
        "modified": [
          [
            125
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "createsStructureFromBodySnippet",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.createsStructureFromBodySnippet(ParserTest.java:110)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[foo bar baz]> but was:<[bar baz foo]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 2,
    "changedFiles": {
      "org/jsoup/parser/Parser.java": {
        "modified": [
          [
            148
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "handlesTextAfterData",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.handlesTextAfterData(ParserTest.java:138)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...dy>pre <script>inner[</script> aft]</body></html>> but was:<...dy>pre <script>inner[ aft</script>]</body></html>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 3,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            270
          ],
          [
            287
          ],
          [
            314
          ]
        ]
      },
      "org/jsoup/parser/Parser.java": {
        "modified": [
          [
            26
          ],
          [
            73
          ],
          [
            224
          ],
          [
            253
          ]
        ]
      },
      "org/jsoup/parser/Tag.java": {
        "modified": [
          [
            28
          ],
          [
            99
          ],
          [
            155
          ],
          [
            224
          ],
          [
            288
          ],
          [
            379
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testAppendRowToTable",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testAppendRowToTable(ElementTest.java:219)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...tr><td>1</td></tr><t[r><td>2</td></tr]></table>> but was:<...tr><td>1</td></tr><t[able><tr><td>2</td></tr></table]></table>>"
      },
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testPrependRowToTable",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testPrependRowToTable(ElementTest.java:227)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<table><t[r><td>2</td></tr]><tr><td>1</td></tr>...> but was:<<table><t[able><tr><td>2</td></tr></table]><tr><td>1</td></tr>...>"
      },
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "handlesNestedImplicitTable",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.handlesNestedImplicitTable(ParserTest.java:174)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...> <tr><td> <table><t[r><td>3</td> <td>4</td></tr></table> </td></tr><tr><td>5]</td></tr></table>> but was:<...> <tr><td> <table><t[d>3</td> <td>4</td></table> <tr><td>5</td></tr>]</td></tr></table>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 4,
    "changedFiles": {
      "org/jsoup/nodes/Entities.java": {
        "modified": [
          [
            64
          ],
          [
            2235
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "escape",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.escape(EntitiesTest.java:17)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...ello &amp;&lt;&gt; &[A]ring; &aring; &#960;...> but was:<...ello &amp;&lt;&gt; &[a]ring; &aring; &#960;...>"
      },
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "caseSensitive",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.caseSensitive(EntitiesTest.java:32)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<&[U]uml; &uuml; &amp; &a...> but was:<&[u]uml; &uuml; &amp; &a...>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 5,
    "changedFiles": {
      "org/jsoup/parser/Parser.java": {
        "modified": [
          [
            206
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "parsesQuiteRoughAttributes",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "org.jsoup.parser.TokenQueue.consume(TokenQueue.java:162)",
          "org.jsoup.parser.Parser.parseAttribute(Parser.java:206)",
          "org.jsoup.parser.Parser.parseStartTag(Parser.java:139)",
          "org.jsoup.parser.Parser.parse(Parser.java:84)",
          "org.jsoup.parser.Parser.parse(Parser.java:54)",
          "org.jsoup.Jsoup.parse(Jsoup.java:41)",
          "org.jsoup.parser.ParserTest.parsesQuiteRoughAttributes(ParserTest.java:45)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 14"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 6,
    "changedFiles": {
      "org/jsoup/nodes/Entities.java": {
        "modified": [
          [
            70
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.integration.ParseTest",
        "methodName": "testYahooArticle",
        "stackTrace": [
          "java.util.regex.Matcher.appendReplacement(Matcher.java:819)",
          "org.jsoup.nodes.Entities.unescape(Entities.java:70)",
          "org.jsoup.nodes.TextNode.createFromEncoded(TextNode.java:95)",
          "org.jsoup.parser.Parser.parseTextNode(Parser.java:222)",
          "org.jsoup.parser.Parser.parse(Parser.java:94)",
          "org.jsoup.parser.Parser.parse(Parser.java:54)",
          "org.jsoup.Jsoup.parse(Jsoup.java:31)",
          "org.jsoup.helper.DataUtil.parseByteData(DataUtil.java:80)",
          "org.jsoup.helper.DataUtil.load(DataUtil.java:53)",
          "org.jsoup.helper.DataUtil.load(DataUtil.java:36)",
          "org.jsoup.Jsoup.parse(Jsoup.java:74)",
          "org.jsoup.integration.ParseTest.testYahooArticle(ParseTest.java:145)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Illegal group reference: group index is missing"
      },
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "quoteReplacements",
        "stackTrace": [
          "java.util.regex.Matcher.appendReplacement(Matcher.java:809)",
          "org.jsoup.nodes.Entities.unescape(Entities.java:70)",
          "org.jsoup.nodes.EntitiesTest.quoteReplacements(EntitiesTest.java:42)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "character to be escaped is missing"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 7,
    "changedFiles": {
      "org/jsoup/nodes/Document.java": {
        "modified": [
          [
            5
          ],
          [
            113
          ],
          [
            137
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testNormalisesStructure",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTest.testNormalisesStructure(DocumentTest.java:59)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...</script><noscript><[/noscript></head><body><p>two</p><p>three</p></body]></html>> but was:<...</script><noscript><[body><p>two</p><body><p>three</p></body></body></noscript></head]></html>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 8,
    "changedFiles": {
      "org/jsoup/nodes/Node.java": {
        "modified": [
          [
            363
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "parentlessToString",
        "stackTrace": [
          "org.jsoup.nodes.Node.outerHtml(Node.java:363)",
          "org.jsoup.nodes.Node.outerHtml(Node.java:358)",
          "org.jsoup.nodes.Element.toString(Element.java:1022)",
          "org.jsoup.nodes.ElementTest.parentlessToString(ElementTest.java:422)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 9,
    "changedFiles": {
      "org/jsoup/nodes/Entities.java": {
        "modified": [
          [
            38
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "unescape",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.unescape(EntitiesTest.java:27)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...<> \u00c5 \u03c0 \u03c0 \u65b0 there &! [\u00be]> but was:<...<> \u00c5 \u03c0 \u03c0 \u65b0 there &! [&frac34;]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 10,
    "changedFiles": {
      "org/jsoup/nodes/Node.java": {
        "modified": [
          [
            173
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.NodeTest",
        "methodName": "absHandlesRelativeQuery",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.NodeTest.absHandlesRelativeQuery(NodeTest.java:49)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...tp://jsoup.org/path/[file]?foo> but was:<...tp://jsoup.org/path/[]?foo>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 11,
    "changedFiles": {
      "org/jsoup/select/Selector.java": {
        "modified": [
          [
            110
          ],
          [
            181
          ],
          [
            305
          ],
          [
            399
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "notAll",
        "stackTrace": [
          "org.jsoup.select.Selector.findElements(Selector.java:182)",
          "org.jsoup.select.Selector.select(Selector.java:111)",
          "org.jsoup.select.Selector.select(Selector.java:84)",
          "org.jsoup.nodes.Element.select(Element.java:199)",
          "org.jsoup.select.SelectorTest.notAll(SelectorTest.java:559)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query ':not(p)': unexpected token at ':not(p)'"
      },
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "testPseudoHas",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.select.SelectorTest.testPseudoHas(SelectorTest.java:424)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<0>"
      },
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "notClass",
        "stackTrace": [
          "org.jsoup.select.Selector.findElements(Selector.java:182)",
          "org.jsoup.select.Selector.select(Selector.java:128)",
          "org.jsoup.select.Selector.select(Selector.java:84)",
          "org.jsoup.nodes.Element.select(Element.java:199)",
          "org.jsoup.select.SelectorTest.notClass(SelectorTest.java:568)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query 'div:not(.left)': unexpected token at ':not(.left)'"
      },
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "notParas",
        "stackTrace": [
          "org.jsoup.select.Selector.findElements(Selector.java:182)",
          "org.jsoup.select.Selector.select(Selector.java:128)",
          "org.jsoup.select.Selector.select(Selector.java:84)",
          "org.jsoup.nodes.Element.select(Element.java:199)",
          "org.jsoup.select.SelectorTest.notParas(SelectorTest.java:545)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query 'p:not([id=1])': unexpected token at ':not([id=1])'"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 12,
    "changedFiles": {
      "org/jsoup/select/Selector.java": {
        "modified": [
          [
            139
          ],
          [
            156
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "testByAttributeRegexCombined",
        "stackTrace": [
          "org.jsoup.select.Selector.findElements(Selector.java:187)",
          "org.jsoup.select.Selector.select(Selector.java:113)",
          "org.jsoup.select.Selector.select(Selector.java:84)",
          "org.jsoup.select.Selector.combinator(Selector.java:149)",
          "org.jsoup.select.Selector.select(Selector.java:126)",
          "org.jsoup.select.Selector.select(Selector.java:84)",
          "org.jsoup.nodes.Element.select(Element.java:199)",
          "org.jsoup.select.SelectorTest.testByAttributeRegexCombined(SelectorTest.java:129)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query '=x|y]': unexpected token at '=x|y]'"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 13,
    "changedFiles": {
      "org/jsoup/nodes/Node.java": {
        "modified": [
          [
            107
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.NodeTest",
        "methodName": "handlesAbsPrefixOnHasAttr",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.nodes.NodeTest.handlesAbsPrefixOnHasAttr(NodeTest.java:59)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.nodes.NodeTest",
        "methodName": "handlesAbsPrefix",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.nodes.NodeTest.handlesAbsPrefix(NodeTest.java:39)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.select.ElementsTest",
        "methodName": "absAttr",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.select.ElementsTest.absAttr(ElementsTest.java:72)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[http://jsoup.org]> but was:<[]>"
      },
      {
        "className": "org.jsoup.select.ElementsTest",
        "methodName": "hasAbsAttr",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.select.ElementsTest.hasAbsAttr(ElementsTest.java:55)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 14,
    "changedFiles": {
      "org/jsoup/parser/Tokeniser.java": {
        "modified": [
          [
            197
          ]
        ]
      },
      "org/jsoup/parser/TokeniserState.java": {
        "modified": [
          [
            218
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "parsesUnterminatedTextarea",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.parsesUnterminatedTextarea(ParserTest.java:101)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<one[]> but was:<one[<p>two]>"
      },
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "handlesUnclosedTitle",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.handlesUnclosedTitle(ParserTest.java:560)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<One[]> but was:<One[<b>Two <p>Test</p]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 15,
    "changedFiles": {
      "org/jsoup/parser/TreeBuilderState.java": {
        "modified": [
          [
            283
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "handlesDataOnlyTags",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.handlesDataOnlyTags(ParserTest.java:163)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Hello []There> but was:<Hello ['); i++; ]There>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 16,
    "changedFiles": {
      "org/jsoup/nodes/DocumentType.java": {
        "modified": [
          [
            4
          ],
          [
            21
          ],
          [
            33
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTypeTest",
        "methodName": "outerHtmlGeneration",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTypeTest.outerHtmlGeneration(DocumentTypeTest.java:36)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<!DOCTYPE html [\"]http://www.ibm.com/d...> but was:<<!DOCTYPE html []http://www.ibm.com/d...>"
      },
      {
        "className": "org.jsoup.nodes.DocumentTypeTest",
        "methodName": "constructorValidationThrowsExceptionOnBlankName",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.IllegalArgumentException"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 17,
    "changedFiles": {
      "org/jsoup/parser/TreeBuilderState.java": {
        "modified": [
          [
            1451
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "handles0CharacterAsText",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.handles0CharacterAsText(ParserTest.java:609)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[0"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 18,
    "changedFiles": {
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            18
          ],
          [
            99
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.CharacterReaderTest",
        "methodName": "handleCarriageReturnAsLineFeed",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.CharacterReaderTest.handleCarriageReturnAsLineFeed(CharacterReaderTest.java:69)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<one []> but was:<one ["
      },
      {
        "className": "org.jsoup.parser.CharacterReaderTest",
        "methodName": "consumeToEnd",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.CharacterReaderTest.consumeToEnd(CharacterReaderTest.java:77)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<one two thre[e]> but was:<one two thre[]>"
      },
      {
        "className": "org.jsoup.parser.ParserTest",
        "methodName": "handlesNewlinesAndWhitespaceInTag",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.ParserTest.handlesNewlinesAndWhitespaceInTag(ParserTest.java:619)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<a href=\"one\" []id=\"two\"></a>> but was:<<a href=\"one\" [=\"\" ]id=\"two\"></a>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 19,
    "changedFiles": {
      "org/jsoup/safety/Whitelist.java": {
        "modified": [
          [
            342
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.safety.CleanerTest",
        "methodName": "handlesCustomProtocols",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.safety.CleanerTest.handlesCustomProtocols(CleanerTest.java:123)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<img [src=\"cid:12345\" />"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 20,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            98
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "discardsSpuriousByteOrderMark",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.DataUtilTest.discardsSpuriousByteOrderMark(DataUtilTest.java:32)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[One]> but was:<[]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 21,
    "changedFiles": {
      "org/jsoup/select/CombiningEvaluator.java": {
        "modified": [
          [
            64
          ]
        ]
      },
      "org/jsoup/select/QueryParser.java": {
        "modified": [
          [
            58
          ],
          [
            101
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "handlesCommasInSelector",
        "stackTrace": [
          "java.util.regex.Pattern.error(Pattern.java:1969)",
          "java.util.regex.Pattern.clazz(Pattern.java:2562)",
          "java.util.regex.Pattern.sequence(Pattern.java:2077)",
          "java.util.regex.Pattern.expr(Pattern.java:2010)",
          "java.util.regex.Pattern.compile(Pattern.java:1702)",
          "java.util.regex.Pattern.<init>(Pattern.java:1352)",
          "java.util.regex.Pattern.compile(Pattern.java:1028)",
          "org.jsoup.select.QueryParser.matches(QueryParser.java:262)",
          "org.jsoup.select.QueryParser.findElements(QueryParser.java:144)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:71)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:37)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:64)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:37)",
          "org.jsoup.select.Selector.<init>(Selector.java:66)",
          "org.jsoup.select.Selector.select(Selector.java:79)",
          "org.jsoup.nodes.Element.select(Element.java:255)",
          "org.jsoup.select.SelectorTest.handlesCommasInSelector(SelectorTest.java:594)"
        ],
        "error": "java.util.regex.PatternSyntaxException",
        "message": "Unclosed character class near index 3"
      },
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "mixCombinatorGroup",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.select.SelectorTest.mixCombinatorGroup(SelectorTest.java:329)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 22,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            434
          ],
          [
            447
          ],
          [
            462
          ]
        ]
      },
      "org/jsoup/nodes/Node.java": {
        "modified": [
          [
            444
          ],
          [
            470
          ]
        ]
      },
      "org/jsoup/select/Elements.java": {
        "modified": [
          [
            22
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "elementIsNotASiblingOfItself",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.nodes.ElementTest.elementIsNotASiblingOfItself(ElementTest.java:538)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      },
      {
        "className": "org.jsoup.nodes.NodeTest",
        "methodName": "nodeIsNotASiblingOfItself",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.nodes.NodeTest.nodeIsNotASiblingOfItself(NodeTest.java:206)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      },
      {
        "className": "org.jsoup.nodes.NodeTest",
        "methodName": "orphanNodeReturnsNullForSiblingElements",
        "stackTrace": [
          "org.jsoup.nodes.Node.siblingNodes(Node.java:445)",
          "org.jsoup.nodes.NodeTest.orphanNodeReturnsNullForSiblingElements(NodeTest.java:190)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 23,
    "changedFiles": {
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            118
          ]
        ]
      },
      "org/jsoup/parser/Tokeniser.java": {
        "modified": [
          [
            135
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "letterDigitEntities",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.letterDigitEntities(EntitiesTest.java:60)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[&sup1;&sup2;&sup3;&frac14;&frac12;&]frac34;> but was:<[\u22831;\u22832;\u22833;&amp;frac14;&amp;frac12;&amp;]frac34;>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 24,
    "changedFiles": {
      "org/jsoup/parser/TokeniserState.java": {
        "modified": [
          [
            558
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesQuotesInCommentsInScripts",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.handlesQuotesInCommentsInScripts(HtmlParserTest.java:690)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...ocument.write('</scr['] + 'ipt>');"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 25,
    "changedFiles": {
      "org/jsoup/parser/Tag.java": {
        "modified": [
          [
            218
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "preservesSpaceInTextArea",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.preservesSpaceInTextArea(HtmlParserTest.java:184)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<One["
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 26,
    "changedFiles": {
      "org/jsoup/safety/Cleaner.java": {
        "modified": [
          [
            43
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.safety.CleanerTest",
        "methodName": "handlesFramesets",
        "stackTrace": [
          "org.jsoup.safety.Cleaner.copySafeNodes(Cleaner.java:73)",
          "org.jsoup.safety.Cleaner.clean(Cleaner.java:43)",
          "org.jsoup.safety.CleanerTest.handlesFramesets(CleanerTest.java:176)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 27,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            132
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "testCharset",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.DataUtilTest.testCharset(DataUtilTest.java:15)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[utf]-8> but was:<[UTF]-8>"
      },
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "testQuotedCharset",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.DataUtilTest.testQuotedCharset(DataUtilTest.java:24)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[utf]-8> but was:<[UTF]-8>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 28,
    "changedFiles": {
      "org/jsoup/nodes/Entities.java": {
        "modified": [
          [
            4
          ],
          [
            61
          ],
          [
            103
          ]
        ]
      },
      "org/jsoup/parser/Parser.java": {
        "modified": [
          [
            133
          ]
        ]
      },
      "org/jsoup/parser/Tokeniser.java": {
        "modified": [
          [
            136
          ],
          [
            238
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "unescape",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.unescape(EntitiesTest.java:27)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Hello &<> \u00ae \u00c5 [&angst] \u03c0 \u03c0 \u65b0 there &! \u00be \u00a9 ...> but was:<Hello &<> \u00ae \u00c5 [\u00c5] \u03c0 \u03c0 \u65b0 there &! \u00be \u00a9 ...>"
      },
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "noSpuriousDecodes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.noSpuriousDecodes(EntitiesTest.java:65)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...tp://www.foo.com?a=1[&num_rooms=1&children=0&int]=VA&b=2> but was:<...tp://www.foo.com?a=1[#_rooms=1&children=0\u222b]=VA&b=2>"
      },
      {
        "className": "org.jsoup.parser.AttributeParseTest",
        "methodName": "moreAttributeUnescapes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.AttributeParseTest.moreAttributeUnescapes(AttributeParseTest.java:67)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...23&mid-size=true&ok=[&wr]> but was:<...23&mid-size=true&ok=[\u2240]>"
      },
      {
        "className": "org.jsoup.parser.AttributeParseTest",
        "methodName": "strictAttributeUnescapes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.AttributeParseTest.strictAttributeUnescapes(AttributeParseTest.java:60)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<?foo=bar[&mid]&lt=true> but was:<?foo=bar[\u2223]&lt=true>"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "doesNotFindShortestMatchingEntity",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.doesNotFindShortestMatchingEntity(HtmlParserTest.java:729)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<One [&amp;clubsuit]e; \u2663> but was:<One [\u2663]e; \u2663>"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "relaxedBaseEntityMatchAndStrictExtendedMatch",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.relaxedBaseEntityMatchAndStrictExtendedMatch(HtmlParserTest.java:737)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<&amp; &quot; &reg; &[amp;icy &amp;hopf] &icy; &hopf;> but was:<&amp; &quot; &reg; &[icy; &hopf;] &icy; &hopf;>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 29,
    "changedFiles": {
      "org/jsoup/nodes/Document.java": {
        "modified": [
          [
            4
          ],
          [
            69
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testTitles",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTest.testTitles(DocumentTest.java:37)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Hello[ there] now> but was:<Hello["
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 30,
    "changedFiles": {
      "org/jsoup/safety/Cleaner.java": {
        "modified": [
          [
            6
          ],
          [
            70
          ],
          [
            84
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.safety.CleanerTest",
        "methodName": "testIsValid",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.junit.Assert.assertFalse(Assert.java:74)",
          "org.jsoup.safety.CleanerTest.testIsValid(CleanerTest.java:99)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 31,
    "changedFiles": {
      "org/jsoup/parser/Token.java": {
        "modified": [
          [
            171
          ]
        ]
      },
      "org/jsoup/parser/TokeniserState.java": {
        "modified": [
          [
            1094
          ]
        ]
      },
      "org/jsoup/parser/XmlTreeBuilder.java": {
        "modified": [
          [
            67
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "handlesXmlDeclarationAsDeclaration",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.XmlTreeBuilderTest.handlesXmlDeclarationAsDeclaration(XmlTreeBuilderTest.java:100)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<[?xml encoding='UTF-8' ?]> <body> One </body>...> but was:<<[!--?xml encoding='UTF-8' ?--]> <body> One </body>...>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 32,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            1138
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testClonesClassnames",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.nodes.ElementTest.testClonesClassnames(ElementTest.java:493)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 33,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            162
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesKnownEmptyBlocks",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.handlesKnownEmptyBlocks(HtmlParserTest.java:331)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...src=\"/foo\"></script>[<div id=\"2\"><img /><img /></div><a id=\"3\"></a><i></i><foo /><foo>One</foo> <hr /> hr text <hr />] hr text two> but was:<...src=\"/foo\"></script>[&lt;div id=2&gt;&lt;img /&gt;&lt;img&gt;&lt;/div&gt;&lt;a id=3 /&gt;&lt;i /&gt;&lt;foo /&gt;&lt;foo&gt;One&lt;/foo&gt; &lt;hr /&gt; hr text &lt;hr&gt;] hr text two>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 34,
    "changedFiles": {
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            91
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.CharacterReaderTest",
        "methodName": "nextIndexOfUnmatched",
        "stackTrace": [
          "org.jsoup.parser.CharacterReader.nextIndexOf(CharacterReader.java:92)",
          "org.jsoup.parser.CharacterReaderTest.nextIndexOfUnmatched(CharacterReaderTest.java:100)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "8"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesUnclosedCdataAtEOF",
        "stackTrace": [
          "org.jsoup.parser.CharacterReader.nextIndexOf(CharacterReader.java:92)",
          "org.jsoup.parser.CharacterReader.consumeTo(CharacterReader.java:112)",
          "org.jsoup.parser.TokeniserState$67.read(TokeniserState.java:1634)",
          "org.jsoup.parser.Tokeniser.read(Tokeniser.java:42)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:47)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:41)",
          "org.jsoup.parser.HtmlTreeBuilder.parse(HtmlTreeBuilder.java:38)",
          "org.jsoup.parser.Parser.parse(Parser.java:90)",
          "org.jsoup.Jsoup.parse(Jsoup.java:58)",
          "org.jsoup.parser.HtmlParserTest.handlesUnclosedCdataAtEOF(HtmlParserTest.java:293)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "11"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 35,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            726
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesUnclosedAnchors",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.handlesUnclosedAnchors(HtmlParserTest.java:529)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...com/\">Link</a>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 36,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            10
          ],
          [
            19
          ],
          [
            87
          ],
          [
            161
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "shouldCorrectCharsetForDuplicateCharsetString",
        "stackTrace": [
          "java.nio.charset.Charset.checkName(Charset.java:315)",
          "java.nio.charset.Charset.lookup2(Charset.java:484)",
          "java.nio.charset.Charset.lookup(Charset.java:464)",
          "java.nio.charset.Charset.isSupported(Charset.java:505)",
          "org.jsoup.helper.DataUtil.getCharsetFromContentType(DataUtil.java:161)",
          "org.jsoup.helper.DataUtilTest.shouldCorrectCharsetForDuplicateCharsetString(DataUtilTest.java:51)"
        ],
        "error": "java.nio.charset.IllegalCharsetNameException",
        "message": "charset=iso-8859-1"
      },
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "shouldNotThrowExceptionOnEmptyCharset",
        "stackTrace": [
          "java.nio.charset.Charset.checkName(Charset.java:303)",
          "java.nio.charset.Charset.lookup2(Charset.java:484)",
          "java.nio.charset.Charset.lookup(Charset.java:464)",
          "java.nio.charset.Charset.isSupported(Charset.java:505)",
          "org.jsoup.helper.DataUtil.getCharsetFromContentType(DataUtil.java:161)",
          "org.jsoup.helper.DataUtilTest.shouldNotThrowExceptionOnEmptyCharset(DataUtilTest.java:40)"
        ],
        "error": "java.nio.charset.IllegalCharsetNameException",
        "message": ""
      },
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "testQuotedCharset",
        "stackTrace": [
          "java.nio.charset.Charset.checkName(Charset.java:315)",
          "java.nio.charset.Charset.lookup2(Charset.java:484)",
          "java.nio.charset.Charset.lookup(Charset.java:464)",
          "java.nio.charset.Charset.isSupported(Charset.java:505)",
          "org.jsoup.helper.DataUtil.getCharsetFromContentType(DataUtil.java:161)",
          "org.jsoup.helper.DataUtilTest.testQuotedCharset(DataUtilTest.java:28)"
        ],
        "error": "java.nio.charset.IllegalCharsetNameException",
        "message": "'UTF-8'"
      },
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags",
        "stackTrace": [
          "java.nio.charset.Charset.checkName(Charset.java:315)",
          "java.nio.charset.Charset.lookup2(Charset.java:484)",
          "java.nio.charset.Charset.lookup(Charset.java:464)",
          "java.nio.charset.Charset.isSupported(Charset.java:505)",
          "org.jsoup.helper.DataUtil.getCharsetFromContentType(DataUtil.java:161)",
          "org.jsoup.helper.DataUtilTest.shouldSelectFirstCharsetOnWeirdMultileCharsetsInMetaTags(DataUtilTest.java:46)"
        ],
        "error": "java.nio.charset.IllegalCharsetNameException",
        "message": "ISO-8859-1,"
      },
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "shouldReturnNullForIllegalCharsetNames",
        "stackTrace": [
          "java.nio.charset.Charset.checkName(Charset.java:315)",
          "java.nio.charset.Charset.lookup2(Charset.java:484)",
          "java.nio.charset.Charset.lookup(Charset.java:464)",
          "java.nio.charset.Charset.isSupported(Charset.java:505)",
          "org.jsoup.helper.DataUtil.getCharsetFromContentType(DataUtil.java:161)",
          "org.jsoup.helper.DataUtilTest.shouldReturnNullForIllegalCharsetNames(DataUtilTest.java:56)"
        ],
        "error": "java.nio.charset.IllegalCharsetNameException",
        "message": "$HJKDF\u00a7$/("
      },
      {
        "className": "org.jsoup.integration.ParseTest",
        "methodName": "testBrokenHtml5CharsetWithASingleDoubleQuote",
        "stackTrace": [
          "java.nio.charset.Charset.checkName(Charset.java:315)",
          "java.nio.charset.Charset.lookup2(Charset.java:484)",
          "java.nio.charset.Charset.lookup(Charset.java:464)",
          "java.nio.charset.Charset.forName(Charset.java:528)",
          "org.jsoup.helper.DataUtil.parseByteData(DataUtil.java:94)",
          "org.jsoup.helper.DataUtil.load(DataUtil.java:55)",
          "org.jsoup.Jsoup.parse(Jsoup.java:118)",
          "org.jsoup.integration.ParseTest.testBrokenHtml5CharsetWithASingleDoubleQuote(ParseTest.java:149)"
        ],
        "error": "java.nio.charset.IllegalCharsetNameException",
        "message": "UTF-8\""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 37,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            1101
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testNotPretty",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testNotPretty(ElementTest.java:247)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<["
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 38,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            455
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "convertsImageToImg",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.convertsImageToImg(HtmlParserTest.java:807)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<img />"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 39,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            119
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "discardsSpuriousByteOrderMarkWhenNoCharsetSet",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.DataUtilTest.discardsSpuriousByteOrderMarkWhenNoCharsetSet(DataUtilTest.java:42)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[One]> but was:<[]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 40,
    "changedFiles": {
      "org/jsoup/nodes/DocumentType.java": {
        "modified": [
          [
            22
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTypeTest",
        "methodName": "constructorValidationOkWithBlankName",
        "stackTrace": [
          "org.jsoup.helper.Validate.notEmpty(Validate.java:92)",
          "org.jsoup.nodes.DocumentType.<init>(DocumentType.java:22)",
          "org.jsoup.nodes.DocumentTypeTest.constructorValidationOkWithBlankName(DocumentTypeTest.java:15)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "String must not be empty"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesInvalidDoctypes",
        "stackTrace": [
          "org.jsoup.helper.Validate.notEmpty(Validate.java:92)",
          "org.jsoup.nodes.DocumentType.<init>(DocumentType.java:22)",
          "org.jsoup.parser.HtmlTreeBuilderState$1.process(HtmlTreeBuilderState.java:24)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:111)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:48)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:41)",
          "org.jsoup.parser.HtmlTreeBuilder.parse(HtmlTreeBuilder.java:54)",
          "org.jsoup.parser.Parser.parse(Parser.java:90)",
          "org.jsoup.Jsoup.parse(Jsoup.java:58)",
          "org.jsoup.parser.HtmlParserTest.handlesInvalidDoctypes(HtmlParserTest.java:812)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "String must not be empty"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 41,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            1175
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testHashAndEquals",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testHashAndEquals(ElementTest.java:785)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected: org.jsoup.nodes.Element<<p class=\"one\">One</p>> but was: org.jsoup.nodes.Element<<p class=\"one\">One</p>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 42,
    "changedFiles": {
      "org/jsoup/nodes/FormElement.java": {
        "modified": [
          [
            80
          ],
          [
            99
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.FormElementTest",
        "methodName": "createsFormData",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.nodes.FormElementTest.createsFormData(FormElementTest.java:38)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<6> but was:<7>"
      },
      {
        "className": "org.jsoup.nodes.FormElementTest",
        "methodName": "usesOnForCheckboxValueIfNoValueSet",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.FormElementTest.usesOnForCheckboxValueIfNoValueSet(FormElementTest.java:122)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[on]> but was:<[]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 43,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            574
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testElementSiblingIndexSameContent",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.nodes.ElementTest.testElementSiblingIndexSameContent(ElementTest.java:156)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testGetSiblingsWithDuplicateContent",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testGetSiblingsWithDuplicateContent(ElementTest.java:127)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[]is> but was:<[th]is>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 44,
    "changedFiles": {
      "org/jsoup/parser/TreeBuilder.java": {
        "modified": [
          [
            61
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "testInvalidTableContents",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.jsoup.parser.HtmlParserTest.testInvalidTableContents(HtmlParserTest.java:864)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Search text did not come after comment"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 45,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            394
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "testReinsertionModeForThCelss",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.parser.HtmlParserTest.testReinsertionModeForThCelss(HtmlParserTest.java:877)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<5>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 46,
    "changedFiles": {
      "org/jsoup/nodes/Entities.java": {
        "modified": [
          [
            118
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testShiftJisRoundtrip",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.jsoup.nodes.DocumentTest.testShiftJisRoundtrip(DocumentTest.java:406)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Should not have contained a '?'."
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 47,
    "changedFiles": {
      "org/jsoup/nodes/Entities.java": {
        "modified": [
          [
            122
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.EntitiesTest",
        "methodName": "escapesGtInXmlAttributesButNotInHtml",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.EntitiesTest.escapesGtInXmlAttributesButNotInHtml(EntitiesTest.java:102)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<a title=\"[&lt;p>One&lt;]/p>\">One</a>> but was:<<a title=\"[<p>One<]/p>\">One</a>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 48,
    "changedFiles": {
      "org/jsoup/helper/HttpConnection.java": {
        "modified": [
          [
            773
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.HttpConnectionTest",
        "methodName": "sameHeadersCombineWithComma",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.HttpConnectionTest.sameHeadersCombineWithComma(HttpConnectionTest.java:63)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<no-cache[, no-store]> but was:<no-cache[]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 49,
    "changedFiles": {
      "org/jsoup/nodes/Node.java": {
        "modified": [
          [
            445
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "appendMustCorrectlyMoveChildrenInsideOneParentElement",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.appendMustCorrectlyMoveChildrenInsideOneParentElement(ElementTest.java:878)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...><div3>Check</div3><[div4></div4><div1></div1><div2></div2><]/body>> but was:<...><div3>Check</div3><[]/body>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 50,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            93
          ],
          [
            126
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "supportsBOMinFiles",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.helper.DataUtilTest.supportsBOMinFiles(DataUtilTest.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 51,
    "changedFiles": {
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            300
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "testSupportsNonAsciiTags",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.testSupportsNonAsciiTags(HtmlParserTest.java:891)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[Yes]> but was:<[]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 52,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            112
          ]
        ]
      },
      "org/jsoup/nodes/XmlDeclaration.java": {
        "modified": [
          [
            46
          ]
        ]
      },
      "org/jsoup/parser/XmlTreeBuilder.java": {
        "modified": [
          [
            4
          ],
          [
            76
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testMetaCharsetUpdateXmlNoCharset",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlNoCharset(DocumentTest.java:355)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<....0\" encoding=\"UTF-8\"[?]>"
      },
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testMetaCharsetUpdateXmlIso8859",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlIso8859(DocumentTest.java:337)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...ncoding=\"ISO-8859-1\"[?]>"
      },
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testMetaCharsetUpdateXmlUtf8",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlUtf8(DocumentTest.java:319)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<....0\" encoding=\"UTF-8\"[?]>"
      },
      {
        "className": "org.jsoup.nodes.DocumentTest",
        "methodName": "testMetaCharsetUpdateXmlDisabledNoChanges",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlDisabledNoChanges(DocumentTest.java:379)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...encoding=\"dontTouch\"[?]>"
      },
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "handlesXmlDeclarationAsDeclaration",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.XmlTreeBuilderTest.handlesXmlDeclarationAsDeclaration(XmlTreeBuilderTest.java:108)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<?xml encoding=[\"UTF-8\"]?> <body> One </body...> but was:<<?xml encoding=['UTF-8' ]?> <body> One </body...>"
      },
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "testDetectCharsetEncodingDeclaration",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.XmlTreeBuilderTest.testDetectCharsetEncodingDeclaration(XmlTreeBuilderTest.java:141)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[ISO-8859-1]> but was:<[UTF-8]>"
      },
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "testParseDeclarationAttributes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.XmlTreeBuilderTest.testParseDeclarationAttributes(XmlTreeBuilderTest.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[1]> but was:<[]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 53,
    "changedFiles": {
      "org/jsoup/parser/TokenQueue.java": {
        "modified": [
          [
            265
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "attributeWithBrackets",
        "stackTrace": [
          "org.jsoup.select.QueryParser.findElements(QueryParser.java:196)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:65)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:39)",
          "org.jsoup.select.Selector.<init>(Selector.java:84)",
          "org.jsoup.select.Selector.select(Selector.java:106)",
          "org.jsoup.nodes.Element.select(Element.java:286)",
          "org.jsoup.select.SelectorTest.attributeWithBrackets(SelectorTest.java:668)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query 'div[data='End]'': unexpected token at '''"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 54,
    "changedFiles": {
      "org/jsoup/helper/W3CDom.java": {
        "modified": [
          [
            126
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.W3CDomTest",
        "methodName": "handlesInvalidAttributeNames",
        "stackTrace": [
          "com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.createAttribute(CoreDocumentImpl.java:611)",
          "com.sun.org.apache.xerces.internal.dom.ElementImpl.setAttribute(ElementImpl.java:498)",
          "org.jsoup.helper.W3CDom$W3CBuilder.copyAttributes(W3CDom.java:126)",
          "org.jsoup.helper.W3CDom$W3CBuilder.head(W3CDom.java:92)",
          "org.jsoup.select.NodeTraversor.traverse(NodeTraversor.java:31)",
          "org.jsoup.helper.W3CDom.convert(W3CDom.java:66)",
          "org.jsoup.helper.W3CDom.fromJsoup(W3CDom.java:46)",
          "org.jsoup.helper.W3CDomTest.handlesInvalidAttributeNames(W3CDomTest.java:93)"
        ],
        "error": "org.w3c.dom.DOMException",
        "message": "INVALID_CHARACTER_ERR: An invalid or illegal XML character is specified."
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 55,
    "changedFiles": {
      "org/jsoup/parser/TokeniserState.java": {
        "modified": [
          [
            883
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.AttributeParseTest",
        "methodName": "dropsSlashFromAttributeName",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.jsoup.parser.AttributeParseTest.dropsSlashFromAttributeName(AttributeParseTest.java:97)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "SelfClosingStartTag ignores last character"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 56,
    "changedFiles": {
      "org/jsoup/nodes/DocumentType.java": {
        "modified": [
          [
            15
          ],
          [
            31
          ],
          [
            41
          ],
          [
            58
          ]
        ]
      },
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            23
          ]
        ]
      },
      "org/jsoup/parser/Token.java": {
        "modified": [
          [
            35
          ],
          [
            46
          ],
          [
            56
          ]
        ]
      },
      "org/jsoup/parser/TokeniserState.java": {
        "modified": [
          [
            1195
          ]
        ]
      },
      "org/jsoup/parser/XmlTreeBuilder.java": {
        "modified": [
          [
            100
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.DocumentTypeTest",
        "methodName": "testRoundTrip",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.DocumentTypeTest.testRoundTrip(DocumentTypeTest.java:54)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<!DOCTYPE html [SYSTEM ]\"exampledtdfile.dtd\"...> but was:<<!DOCTYPE html []\"exampledtdfile.dtd\"...>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 57,
    "changedFiles": {
      "org/jsoup/nodes/Attributes.java": {
        "modified": [
          [
            125
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testChainedRemoveAttributes",
        "stackTrace": [
          "java.util.LinkedHashMap$LinkedHashIterator.nextNode(LinkedHashMap.java:719)",
          "java.util.LinkedHashMap$LinkedKeyIterator.next(LinkedHashMap.java:742)",
          "org.jsoup.nodes.Attributes.removeIgnoreCase(Attributes.java:123)",
          "org.jsoup.nodes.Node.removeAttr(Node.java:128)",
          "org.jsoup.nodes.ElementTest.testChainedRemoveAttributes(ElementTest.java:966)"
        ],
        "error": "java.util.ConcurrentModificationException",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 58,
    "changedFiles": {
      "org/jsoup/Jsoup.java": {
        "modified": [
          [
            250
          ]
        ]
      },
      "org/jsoup/parser/Parser.java": {
        "modified": [
          [
            129
          ]
        ]
      },
      "org/jsoup/safety/Cleaner.java": {
        "modified": [
          [
            17
          ],
          [
            78
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.safety.CleanerTest",
        "methodName": "testIsValidBodyHtml",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.junit.Assert.assertFalse(Assert.java:74)",
          "org.jsoup.safety.CleanerTest.testIsValidBodyHtml(CleanerTest.java:160)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.safety.CleanerTest",
        "methodName": "testIsValidDocument",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.junit.Assert.assertFalse(Assert.java:74)",
          "org.jsoup.safety.CleanerTest.testIsValidDocument(CleanerTest.java:175)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 59,
    "changedFiles": {
      "org/jsoup/parser/Token.java": {
        "modified": [
          [
            107
          ],
          [
            116
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesControlCodeInAttributeName",
        "stackTrace": [
          "org.jsoup.helper.Validate.notEmpty(Validate.java:92)",
          "org.jsoup.nodes.Attribute.<init>(Attribute.java:35)",
          "org.jsoup.parser.Token$Tag.newAttribute(Token.java:109)",
          "org.jsoup.parser.Token$Tag.finaliseTag(Token.java:128)",
          "org.jsoup.parser.Tokeniser.emitTagPending(Tokeniser.java:206)",
          "org.jsoup.parser.TokeniserState$40.read(TokeniserState.java:815)",
          "org.jsoup.parser.Tokeniser.read(Tokeniser.java:50)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:49)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:43)",
          "org.jsoup.parser.HtmlTreeBuilder.parse(HtmlTreeBuilder.java:56)",
          "org.jsoup.parser.Parser.parse(Parser.java:100)",
          "org.jsoup.Jsoup.parse(Jsoup.java:58)",
          "org.jsoup.parser.HtmlParserTest.handlesControlCodeInAttributeName(HtmlParserTest.java:946)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "String must not be empty"
      },
      {
        "className": "org.jsoup.safety.CleanerTest",
        "methodName": "handlesControlCharactersAfterTagName",
        "stackTrace": [
          "org.jsoup.helper.Validate.notEmpty(Validate.java:92)",
          "org.jsoup.nodes.Attribute.<init>(Attribute.java:35)",
          "org.jsoup.nodes.BooleanAttribute.<init>(BooleanAttribute.java:12)",
          "org.jsoup.parser.Token$Tag.newAttribute(Token.java:114)",
          "org.jsoup.parser.Token$Tag.finaliseTag(Token.java:128)",
          "org.jsoup.parser.Tokeniser.emitTagPending(Tokeniser.java:206)",
          "org.jsoup.parser.TokeniserState$35.read(TokeniserState.java:614)",
          "org.jsoup.parser.Tokeniser.read(Tokeniser.java:50)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:49)",
          "org.jsoup.parser.HtmlTreeBuilder.parseFragment(HtmlTreeBuilder.java:103)",
          "org.jsoup.parser.Parser.parseFragment(Parser.java:115)",
          "org.jsoup.parser.Parser.parseBodyFragment(Parser.java:157)",
          "org.jsoup.Jsoup.parseBodyFragment(Jsoup.java:148)",
          "org.jsoup.Jsoup.clean(Jsoup.java:198)",
          "org.jsoup.Jsoup.clean(Jsoup.java:215)",
          "org.jsoup.safety.CleanerTest.handlesControlCharactersAfterTagName(CleanerTest.java:283)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "String must not be empty"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 60,
    "changedFiles": {
      "org/jsoup/parser/TokenQueue.java": {
        "modified": [
          [
            289
          ]
        ]
      },
      "org/jsoup/select/QueryParser.java": {
        "modified": [
          [
            38
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.QueryParserTest",
        "methodName": "testParsesSingleQuoteInContains",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.jsoup.select.Selector$SelectorParseException"
      },
      {
        "className": "org.jsoup.select.QueryParserTest",
        "methodName": "exceptionOnUncloseAttribute",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.jsoup.helper.Validate.notEmpty(Validate.java:92)",
          "org.jsoup.select.Evaluator$AttributeKeyPair.<init>(Evaluator.java:303)",
          "org.jsoup.select.Evaluator$AttributeWithValue.<init>(Evaluator.java:175)",
          "org.jsoup.select.QueryParser.byAttribute(QueryParser.java:244)",
          "org.jsoup.select.QueryParser.findElements(QueryParser.java:150)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:65)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:39)",
          "org.jsoup.select.QueryParser.combinator(QueryParser.java:81)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:61)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:39)",
          "org.jsoup.select.QueryParserTest.exceptionOnUncloseAttribute(QueryParserTest.java:44)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.jsoup.select.Selector$SelectorParseException> but was<java.lang.IllegalArgumentException>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 61,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            1092
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.ElementsTest",
        "methodName": "hasClassCaseInsensitive",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.select.ElementsTest.hasClassCaseInsensitive(ElementsTest.java:104)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "testByClassCaseInsensitive",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.select.SelectorTest.testByClassCaseInsensitive(SelectorTest.java:56)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3> but was:<1>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 62,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            764
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "caseSensitiveParseTree",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.caseSensitiveParseTree(HtmlParserTest.java:955)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<r> <X> A <[/X> <y> B </y]> </r>> but was:<<r> <X> A <[y> B </y> </X]> </r>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 63,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            227
          ]
        ]
      },
      "org/jsoup/parser/Tokeniser.java": {
        "modified": [
          [
            36
          ],
          [
            44
          ],
          [
            76
          ],
          [
            124
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "selfClosingOnNonvoidIsError",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.selfClosingOnNonvoidIsError(HtmlParserTest.java:983)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<18: [Tag cannot be self closing; not a void tag]> but was:<18: [Self closing flag not acknowledged]>"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "selfClosingVoidIsNotAnError",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.parser.HtmlParserTest.selfClosingVoidIsNotAnError(HtmlParserTest.java:971)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<2>"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "tracksErrorsWhenRequested",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.tracksErrorsWhenRequested(HtmlParserTest.java:699)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<50: [Tag cannot be self closing; not a void tag]> but was:<50: [Self closing flag not acknowledged]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 64,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            1489
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesKnownEmptyStyle",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.handlesKnownEmptyStyle(HtmlParserTest.java:376)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...ead><style></style><[meta name=\"foo\"></head><body>One]</body></html>> but was:<...ead><style></style><[/head><body>&lt;meta name=foo&gt;&lt;/head&gt;&lt;body&gt;One&lt;/body&gt;&lt;/html&gt;]</body></html>>"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesKnownEmptyNoFrames",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.handlesKnownEmptyNoFrames(HtmlParserTest.java:370)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...oframes></noframes><[meta name=\"foo\"></head><body>One]</body></html>> but was:<...oframes></noframes><[/head><body>&lt;meta name=foo&gt;&lt;/head&gt;&lt;body&gt;One&lt;/body&gt;&lt;/html&gt;]</body></html>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 65,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            360
          ]
        ]
      },
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            1036
          ],
          [
            1096
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "testTemplateInsideTable",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.parser.HtmlParserTest.testTemplateInsideTable(HtmlParserTest.java:1045)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 66,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            89
          ],
          [
            1402
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testNextElementSiblingAfterClone",
        "stackTrace": [
          "org.jsoup.nodes.ElementTest.testNextElementSiblingAfterClone(ElementTest.java:1235)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 67,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            42
          ],
          [
            468
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "handlesDeepStack",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.parser.HtmlParserTest.handlesDeepStack(HtmlParserTest.java:924)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 68,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            468
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "testHandlesDeepSpans",
        "stackTrace": [
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:282)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.TreeBuilder.processStartTag(TreeBuilder.java:66)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:707)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)",
          "org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:137)",
          "org.jsoup.parser.HtmlTreeBuilderState$7.process(HtmlTreeBuilderState.java:708)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 69,
    "changedFiles": {
      "org/jsoup/nodes/FormElement.java": {
        "modified": [
          [
            49
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.FormElementTest",
        "methodName": "removeFormElement",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.nodes.FormElementTest.removeFormElement(FormElementTest.java:164)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 70,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            1091
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testKeepsPreTextAtDepth",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testKeepsPreTextAtDepth(ElementTest.java:110)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<code["
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 71,
    "changedFiles": {
      "org/jsoup/nodes/PseudoTextElement.java": {
        "modified": [
          [
            3
          ]
        ]
      },
      "org/jsoup/select/Evaluator.java": {
        "modified": [
          [
            9
          ],
          [
            754
          ]
        ]
      },
      "org/jsoup/select/QueryParser.java": {
        "modified": [
          [
            203
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "splitOnBr",
        "stackTrace": [
          "org.jsoup.select.QueryParser.findElements(QueryParser.java:204)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:71)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:42)",
          "org.jsoup.select.Selector.select(Selector.java:91)",
          "org.jsoup.nodes.Element.select(Element.java:363)",
          "org.jsoup.select.SelectorTest.splitOnBr(SelectorTest.java:790)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query 'p:matchText': unexpected token at ':matchText'"
      },
      {
        "className": "org.jsoup.select.SelectorTest",
        "methodName": "textAsElements",
        "stackTrace": [
          "org.jsoup.select.QueryParser.findElements(QueryParser.java:204)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:71)",
          "org.jsoup.select.QueryParser.parse(QueryParser.java:42)",
          "org.jsoup.select.Selector.select(Selector.java:91)",
          "org.jsoup.nodes.Element.select(Element.java:363)",
          "org.jsoup.select.SelectorTest.textAsElements(SelectorTest.java:775)"
        ],
        "error": "org.jsoup.select.Selector$SelectorParseException",
        "message": "Could not parse query 'p:matchText:first-child': unexpected token at ':matchText:first-child'"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 72,
    "changedFiles": {
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            427
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.CharacterReaderTest",
        "methodName": "consumeToNonexistentEndWhenAtAnd",
        "stackTrace": [
          "java.lang.String.<init>(String.java:196)",
          "org.jsoup.parser.CharacterReader.cacheString(CharacterReader.java:440)",
          "org.jsoup.parser.CharacterReader.consumeToEnd(CharacterReader.java:255)",
          "org.jsoup.parser.CharacterReader.consumeTo(CharacterReader.java:167)",
          "org.jsoup.parser.CharacterReaderTest.consumeToNonexistentEndWhenAtAnd(CharacterReaderTest.java:265)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: -1"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "commentAtEnd",
        "stackTrace": [
          "java.lang.String.<init>(String.java:196)",
          "org.jsoup.parser.CharacterReader.cacheString(CharacterReader.java:440)",
          "org.jsoup.parser.CharacterReader.consumeToEnd(CharacterReader.java:255)",
          "org.jsoup.parser.CharacterReader.consumeTo(CharacterReader.java:167)",
          "org.jsoup.parser.TokeniserState$43.read(TokeniserState.java:903)",
          "org.jsoup.parser.Tokeniser.read(Tokeniser.java:45)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:51)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:45)",
          "org.jsoup.parser.Parser.parse(Parser.java:107)",
          "org.jsoup.Jsoup.parse(Jsoup.java:58)",
          "org.jsoup.parser.HtmlParserTest.commentAtEnd(HtmlParserTest.java:1088)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: -1"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 73,
    "changedFiles": {
      "org/jsoup/helper/W3CDom.java": {
        "modified": [
          [
            22
          ],
          [
            73
          ],
          [
            116
          ],
          [
            144
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.W3CDomTest",
        "methodName": "namespacePreservation",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.W3CDomTest.namespacePreservation(W3CDomTest.java:116)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<http://[www.w3.org/1999/xhtml]> but was:<http://[example.com/clip]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 74,
    "changedFiles": {
      "org/jsoup/helper/StringUtil.java": {
        "modified": [
          [
            131
          ],
          [
            165
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "testNormalizesInvisiblesInText",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.testNormalizesInvisiblesInText(ElementTest.java:1212)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<This[isonelong]word> but was:<This[\u00adis\u200bone\u200clong\u200d]word>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 75,
    "changedFiles": {
      "org/jsoup/nodes/Attributes.java": {
        "modified": [
          [
            319
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.ElementTest",
        "methodName": "booleanAttributeOutput",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.ElementTest.booleanAttributeOutput(ElementTest.java:1318)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<...mg src=\"foo\" noshade[] nohref async autofo...> but was:<...mg src=\"foo\" noshade[=\"\"] nohref async autofo...>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 76,
    "changedFiles": {
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            382
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "preSkipsFirstNewline",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.preSkipsFirstNewline(HtmlParserTest.java:1164)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 77,
    "changedFiles": {
      "org/jsoup/parser/XmlTreeBuilder.java": {
        "modified": [
          [
            117
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "normalizesDiscordantTags",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.XmlTreeBuilderTest.normalizesDiscordantTags(XmlTreeBuilderTest.java:197)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<div>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 78,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            4
          ],
          [
            151
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.integration.ConnectTest",
        "methodName": "handlesEmptyStreamDuringParseRead",
        "stackTrace": [
          "org.jsoup.parser.CharacterReader.bufferUp(CharacterReader.java:63)",
          "org.jsoup.parser.CharacterReader.current(CharacterReader.java:93)",
          "org.jsoup.parser.TokeniserState$1.read(TokeniserState.java:12)",
          "org.jsoup.parser.Tokeniser.read(Tokeniser.java:45)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:51)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:45)",
          "org.jsoup.parser.Parser.parseInput(Parser.java:39)",
          "org.jsoup.helper.DataUtil.parseInputStream(DataUtil.java:151)",
          "org.jsoup.helper.HttpConnection$Response.parse(HttpConnection.java:837)",
          "org.jsoup.integration.ConnectTest.handlesEmptyStreamDuringParseRead(ConnectTest.java:400)"
        ],
        "error": "org.jsoup.UncheckedIOException",
        "message": "java.io.IOException: Underlying input stream returned zero bytes"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 79,
    "changedFiles": {
      "org/jsoup/nodes/LeafNode.java": {
        "modified": [
          [
            5
          ],
          [
            94
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.TextNodeTest",
        "methodName": "testLeadNodesHaveNoChildren",
        "stackTrace": [
          "org.jsoup.nodes.LeafNode.ensureChildNodes(LeafNode.java:94)",
          "org.jsoup.nodes.Node.childNodes(Node.java:209)",
          "org.jsoup.nodes.TextNodeTest.testLeadNodesHaveNoChildren(TextNodeTest.java:82)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": "Leaf Nodes do not have child nodes."
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 80,
    "changedFiles": {
      "org/jsoup/parser/XmlTreeBuilder.java": {
        "modified": [
          [
            91
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "handlesDodgyXmlDecl",
        "stackTrace": [
          "java.util.ArrayList.rangeCheck(ArrayList.java:659)",
          "java.util.ArrayList.get(ArrayList.java:435)",
          "org.jsoup.nodes.Element.child(Element.java:254)",
          "org.jsoup.parser.XmlTreeBuilder.insert(XmlTreeBuilder.java:91)",
          "org.jsoup.parser.XmlTreeBuilder.process(XmlTreeBuilder.java:49)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:52)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:45)",
          "org.jsoup.parser.Parser.parseInput(Parser.java:34)",
          "org.jsoup.Jsoup.parse(Jsoup.java:45)",
          "org.jsoup.parser.XmlTreeBuilderTest.handlesDodgyXmlDecl(XmlTreeBuilderTest.java:227)"
        ],
        "error": "java.lang.IndexOutOfBoundsException",
        "message": "Index: 0, Size: 0"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 81,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            5
          ],
          [
            136
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.DataUtilTest",
        "methodName": "supportsXmlCharsetDeclaration",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.helper.DataUtilTest.supportsXmlCharsetDeclaration(DataUtilTest.java:178)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<Hell[\u00f6 W\u00f6]rld!> but was:<Hell[\ufffd W\ufffd]rld!>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 82,
    "changedFiles": {
      "org/jsoup/helper/DataUtil.java": {
        "modified": [
          [
            171
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "fallbackToUtfIfCantEncode",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.fallbackToUtfIfCantEncode(HtmlParserTest.java:1207)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[UTF-8]> but was:<[ISO-2022-CN]>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 83,
    "changedFiles": {
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            254
          ]
        ]
      },
      "org/jsoup/parser/TokeniserState.java": {
        "modified": [
          [
            161
          ],
          [
            564
          ],
          [
            581
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "parsesQuiteRoughAttributes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.parsesQuiteRoughAttributes(HtmlParserTest.java:66)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<p =a>One<a[></a></p><p><a>Something</a></p><a]>Else</a>> but was:<<p =a>One<a[ <p>Something</a></p><a <p]>Else</a>>"
      },
      {
        "className": "org.jsoup.parser.TokeniserStateTest",
        "methodName": "handlesLessInTagThanAsNewTag",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.TokeniserStateTest.handlesLessInTagThanAsNewTag(TokeniserStateTest.java:207)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<p[></p><p></p><div id=\"one\"><span>Two</span></div]>> but was:<<p[ <p<div id=\"one\" <span>Two</p]>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 84,
    "changedFiles": {
      "org/jsoup/helper/W3CDom.java": {
        "modified": [
          [
            91
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.W3CDomTest",
        "methodName": "treatsUndeclaredNamespaceAsLocalName",
        "stackTrace": [
          "com.sun.org.apache.xerces.internal.dom.ElementNSImpl.setName(ElementNSImpl.java:153)",
          "com.sun.org.apache.xerces.internal.dom.ElementNSImpl.<init>(ElementNSImpl.java:84)",
          "com.sun.org.apache.xerces.internal.dom.CoreDocumentImpl.createElementNS(CoreDocumentImpl.java:2121)",
          "org.jsoup.helper.W3CDom$W3CBuilder.head(W3CDom.java:91)",
          "org.jsoup.select.NodeTraversor.traverse(NodeTraversor.java:45)",
          "org.jsoup.helper.W3CDom.convert(W3CDom.java:63)",
          "org.jsoup.helper.W3CDom.fromJsoup(W3CDom.java:44)",
          "org.jsoup.helper.W3CDomTest.treatsUndeclaredNamespaceAsLocalName(W3CDomTest.java:144)"
        ],
        "error": "org.w3c.dom.DOMException",
        "message": "NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces."
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 85,
    "changedFiles": {
      "org/jsoup/nodes/Attribute.java": {
        "modified": [
          [
            44
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.AttributeTest",
        "methodName": "validatesKeysNotEmpty",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.IllegalArgumentException"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 86,
    "changedFiles": {
      "org/jsoup/nodes/Comment.java": {
        "modified": [
          [
            78
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "handlesLTinScript",
        "stackTrace": [
          "java.util.ArrayList.rangeCheck(ArrayList.java:659)",
          "java.util.ArrayList.get(ArrayList.java:435)",
          "org.jsoup.nodes.Element.child(Element.java:253)",
          "org.jsoup.nodes.Comment.asXmlDeclaration(Comment.java:79)",
          "org.jsoup.parser.XmlTreeBuilder.insert(XmlTreeBuilder.java:95)",
          "org.jsoup.parser.XmlTreeBuilder.process(XmlTreeBuilder.java:55)",
          "org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:56)",
          "org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:47)",
          "org.jsoup.parser.Parser.parseInput(Parser.java:31)",
          "org.jsoup.Jsoup.parse(Jsoup.java:45)",
          "org.jsoup.parser.XmlTreeBuilderTest.handlesLTinScript(XmlTreeBuilderTest.java:245)"
        ],
        "error": "java.lang.IndexOutOfBoundsException",
        "message": "Index: 0, Size: 0"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 87,
    "changedFiles": {
      "org/jsoup/nodes/Element.java": {
        "modified": [
          [
            140
          ]
        ]
      },
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            315
          ],
          [
            337
          ],
          [
            347
          ],
          [
            355
          ],
          [
            378
          ],
          [
            420
          ],
          [
            476
          ],
          [
            517
          ],
          [
            569
          ],
          [
            581
          ],
          [
            618
          ],
          [
            649
          ],
          [
            689
          ]
        ]
      },
      "org/jsoup/parser/HtmlTreeBuilderState.java": {
        "modified": [
          [
            315
          ],
          [
            339
          ],
          [
            353
          ],
          [
            372
          ],
          [
            398
          ],
          [
            531
          ],
          [
            574
          ],
          [
            598
          ],
          [
            633
          ],
          [
            662
          ],
          [
            675
          ],
          [
            699
          ],
          [
            711
          ],
          [
            721
          ],
          [
            731
          ],
          [
            745
          ],
          [
            768
          ],
          [
            887
          ],
          [
            897
          ],
          [
            926
          ],
          [
            954
          ],
          [
            1007
          ],
          [
            1018
          ],
          [
            1089
          ],
          [
            1173
          ],
          [
            1240
          ],
          [
            1269
          ],
          [
            1296
          ],
          [
            1383
          ]
        ]
      },
      "org/jsoup/parser/Tag.java": {
        "modified": [
          [
            4
          ],
          [
            17
          ],
          [
            28
          ],
          [
            43
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "preservedCaseLinksCantNest",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.preservedCaseLinksCantNest(HtmlParserTest.java:1135)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<A> ONE <[/A> <A> Two] </A>> but was:<<A> ONE <[A> Two </A>] </A>>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 88,
    "changedFiles": {
      "org/jsoup/nodes/Attribute.java": {
        "modified": [
          [
            80
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.AttributeTest",
        "methodName": "booleanAttributesAreEmptyStringValues",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.nodes.AttributeTest.booleanAttributesAreEmptyStringValues(AttributeTest.java:38)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<> but was:<null>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 89,
    "changedFiles": {
      "org/jsoup/nodes/Attribute.java": {
        "modified": [
          [
            88
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.AttributeTest",
        "methodName": "settersOnOrphanAttribute",
        "stackTrace": [
          "org.jsoup.nodes.Attribute.setValue(Attribute.java:88)",
          "org.jsoup.nodes.AttributeTest.settersOnOrphanAttribute(AttributeTest.java:44)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 90,
    "changedFiles": {
      "org/jsoup/helper/HttpConnection.java": {
        "modified": [
          [
            424
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.helper.HttpConnectionTest",
        "methodName": "handlesHeaderEncodingOnRequest",
        "stackTrace": [
          "org.jsoup.helper.HttpConnection$Base.looksLikeUtf8(HttpConnection.java:427)",
          "org.jsoup.helper.HttpConnection$Base.fixHeaderEncoding(HttpConnection.java:389)",
          "org.jsoup.helper.HttpConnection$Base.addHeader(HttpConnection.java:375)",
          "org.jsoup.helper.HttpConnectionTest.handlesHeaderEncodingOnRequest(HttpConnectionTest.java:256)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "1"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 91,
    "changedFiles": {
      "org/jsoup/UncheckedIOException.java": {
        "modified": [
          [
            10
          ]
        ]
      },
      "org/jsoup/parser/CharacterReader.java": {
        "modified": [
          [
            37
          ],
          [
            452
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.integration.ConnectTest",
        "methodName": "testBinaryThrowsExceptionWhenTypeIgnored",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.integration.ConnectTest.testBinaryThrowsExceptionWhenTypeIgnored(ConnectTest.java:509)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.integration.ConnectTest",
        "methodName": "testBinaryResultThrows",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.integration.ConnectTest.testBinaryResultThrows(ConnectTest.java:526)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.jsoup.integration.ParseTest",
        "methodName": "testBinaryThrowsException",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.jsoup.integration.ParseTest.testBinaryThrowsException(ParseTest.java:79)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 92,
    "changedFiles": {
      "org/jsoup/nodes/Attributes.java": {
        "modified": [
          [
            6
          ],
          [
            118
          ],
          [
            239
          ],
          [
            397
          ]
        ]
      },
      "org/jsoup/parser/HtmlTreeBuilder.java": {
        "modified": [
          [
            199
          ]
        ]
      },
      "org/jsoup/parser/ParseSettings.java": {
        "modified": [
          [
            38
          ]
        ]
      },
      "org/jsoup/parser/Token.java": {
        "modified": [
          [
            116
          ]
        ]
      },
      "org/jsoup/parser/XmlTreeBuilder.java": {
        "modified": [
          [
            78
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "retainsAttributesOfDifferentCaseIfSensitive",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.retainsAttributesOfDifferentCaseIfSensitive(HtmlParserTest.java:74)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<p One=\"[One\" one=\"Three\" two=\"Four]\" Two=\"Six\">Text</p>> but was:<<p One=\"[Two\" one=\"Three\" two=\"Five]\" Two=\"Six\">Text</p>>"
      },
      {
        "className": "org.jsoup.parser.HtmlParserTest",
        "methodName": "dropsDuplicateAttributes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.HtmlParserTest.dropsDuplicateAttributes(HtmlParserTest.java:64)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<p one=\"[One\" two=\"two]\">Text</p>> but was:<<p one=\"[Four\" one=\"Two\" two=\"two\" one=\"Three\" two=\"Five]\">Text</p>>"
      },
      {
        "className": "org.jsoup.parser.XmlTreeBuilderTest",
        "methodName": "dropsDuplicateAttributes",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.jsoup.parser.XmlTreeBuilderTest.dropsDuplicateAttributes(XmlTreeBuilderTest.java:255)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<<p One=\"[One\" ONE=\"Two\" one=\"Three\" two=\"Six]\" Two=\"Eight\">Text</...> but was:<<p One=\"[Four\" ONE=\"Five\" one=\"Three\" two=\"Seven]\" Two=\"Eight\">Text</...>"
      }
    ]
  },
  {
    "project": "Jsoup",
    "bugId": 93,
    "changedFiles": {
      "org/jsoup/nodes/FormElement.java": {
        "modified": [
          [
            89
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.jsoup.nodes.FormElementTest",
        "methodName": "createsFormData",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.jsoup.nodes.FormElementTest.createsFormData(FormElementTest.java:39)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<6> but was:<7>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            116
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java": {
        "modified": [
          [
            376
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testGetNode",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathNodeType(JXPathTestCase.java:224)",
          "org.apache.commons.jxpath.ri.model.dom.DOMModelTest.testGetNode(DOMModelTest.java:68)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testGetNode",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathNodeType(JXPathTestCase.java:224)",
          "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest.testGetNode(JDOMModelTest.java:65)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 2,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/Expression.java": {
        "modified": [
          [
            19
          ],
          [
            77
          ],
          [
            88
          ],
          [
            145
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.ExtensionFunctionTest",
        "methodName": "testNodeSetReturn",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValueIterator(JXPathTestCase.java:158)",
          "org.apache.commons.jxpath.ri.compiler.ExtensionFunctionTest.testNodeSetReturn(ExtensionFunctionTest.java:342)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating value iterator <test:nodeSet()> expected:<[Nested: Name 1, Nested: Name 2]> but was:<[[/beans[1], /beans[2]]]>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/beans/NullPropertyPointer.java": {
        "modified": [
          [
            19
          ],
          [
            109
          ],
          [
            138
          ],
          [
            224
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.beans.BadlyImplementedFactoryTest",
        "methodName": "testBadFactoryImplementation",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.beans.BadlyImplementedFactoryTest.testBadFactoryImplementation(BadlyImplementedFactoryTest.java:64)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            296
          ],
          [
            311
          ],
          [
            632
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java": {
        "modified": [
          [
            240
          ],
          [
            249
          ],
          [
            436
          ],
          [
            756
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.XMLSpaceTest",
        "methodName": "testPreserveDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.doTest(XMLSpaceTest.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.testPreserveDOM(XMLSpaceTest.java:67)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<foo> but was:< foo >"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.XMLSpaceTest",
        "methodName": "testNestedJDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.doTest(XMLSpaceTest.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.testNestedJDOM(XMLSpaceTest.java:91)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<> but was:<foo;bar; baz >"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.XMLSpaceTest",
        "methodName": "testNestedWithCommentsJDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.doTest(XMLSpaceTest.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.testNestedWithCommentsJDOM(XMLSpaceTest.java:95)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<> but was:<foo;bar; baz >"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.XMLSpaceTest",
        "methodName": "testPreserveJDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.doTest(XMLSpaceTest.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.testPreserveJDOM(XMLSpaceTest.java:87)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<foo> but was:< foo >"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.XMLSpaceTest",
        "methodName": "testNestedDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.doTest(XMLSpaceTest.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.testNestedDOM(XMLSpaceTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<foo"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.XMLSpaceTest",
        "methodName": "testNestedWithCommentsDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.doTest(XMLSpaceTest.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLSpaceTest.testNestedWithCommentsDOM(XMLSpaceTest.java:75)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<foo"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/NodePointer.java": {
        "modified": [
          [
            665
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.VariableTest",
        "methodName": "testUnionOfVariableAndNode",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.NodePointer.compareNodePointers(NodePointer.java:665)",
          "org.apache.commons.jxpath.ri.model.NodePointer.compareNodePointers(NodePointer.java:653)",
          "org.apache.commons.jxpath.ri.model.NodePointer.compareNodePointers(NodePointer.java:653)",
          "org.apache.commons.jxpath.ri.model.NodePointer.compareTo(NodePointer.java:639)",
          "java.util.ComparableTimSort.countRunAndMakeAscending(ComparableTimSort.java:320)",
          "java.util.ComparableTimSort.sort(ComparableTimSort.java:188)",
          "java.util.Arrays.sort(Arrays.java:1312)",
          "java.util.Arrays.sort(Arrays.java:1506)",
          "java.util.ArrayList.sort(ArrayList.java:1464)",
          "java.util.Collections.sort(Collections.java:143)",
          "org.apache.commons.jxpath.ri.EvalContext.constructIterator(EvalContext.java:176)",
          "org.apache.commons.jxpath.ri.EvalContext.hasNext(EvalContext.java:100)",
          "org.apache.commons.jxpath.ri.compiler.VariableTest.testUnionOfVariableAndNode(VariableTest.java:286)"
        ],
        "error": "org.apache.commons.jxpath.JXPathException",
        "message": "Cannot compare pointers that do not belong to the same tree: '' and '$var'"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 6,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java": {
        "modified": [
          [
            57
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.VariableTest",
        "methodName": "testIterateVariable",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)",
          "org.apache.commons.jxpath.ri.compiler.VariableTest.testIterateVariable(VariableTest.java:278)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <$d = 'a'> expected:<true> but was:<false>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreOperationGreaterThan.java": {
        "modified": [
          [
            19
          ],
          [
            33
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/compiler/CoreOperationGreaterThanOrEqual.java": {
        "modified": [
          [
            19
          ],
          [
            34
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/compiler/CoreOperationLessThan.java": {
        "modified": [
          [
            19
          ],
          [
            33
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/compiler/CoreOperationLessThanOrEqual.java": {
        "modified": [
          [
            19
          ],
          [
            34
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java": {
        "modified": [
          [
            19
          ],
          [
            31
          ],
          [
            39
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.CoreOperationTest",
        "methodName": "testNodeSetOperations",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:63)",
          "org.apache.commons.jxpath.ri.compiler.CoreOperationTest.testNodeSetOperations(CoreOperationTest.java:100)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <$array > 0> expected:<true> but was:<false>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java": {
        "modified": [
          [
            76
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.CoreOperationTest",
        "methodName": "testNan",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:63)",
          "org.apache.commons.jxpath.ri.compiler.CoreOperationTest.testNan(CoreOperationTest.java:116)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <$nan > $nan> expected:<false> but was:<true>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java": {
        "modified": [
          [
            37
          ],
          [
            121
          ],
          [
            134
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/compiler/CoreOperationEqual.java": {
        "modified": [
          [
            19
          ],
          [
            32
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/compiler/CoreOperationNotEqual.java": {
        "modified": [
          [
            19
          ],
          [
            29
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.CoreOperationTest",
        "methodName": "testNan",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:63)",
          "org.apache.commons.jxpath.ri.compiler.CoreOperationTest.testNan(CoreOperationTest.java:121)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <$nan = $nan> expected:<false> but was:<true>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java": {
        "modified": [
          [
            42
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.CoreOperationTest",
        "methodName": "testEmptyNodeSetOperations",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:63)",
          "org.apache.commons.jxpath.ri.compiler.CoreOperationTest.testEmptyNodeSetOperations(CoreOperationTest.java:120)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating </idonotexist >= 0> expected:<false> but was:<true>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java": {
        "modified": [
          [
            22
          ],
          [
            111
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java": {
        "modified": [
          [
            23
          ],
          [
            52
          ],
          [
            114
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testNamespaceMapping",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testNamespaceMapping(XMLModelTestCase.java:800)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <vendor[1]/product[1]/rate:amount[1]/@rate:discount> expected:<10%> but was:<20%>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testNamespaceMapping",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(JXPathContextReferenceImpl.java:355)",
          "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(JXPathContextReferenceImpl.java:289)",
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:54)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testNamespaceMapping(XMLModelTestCase.java:800)"
        ],
        "error": "org.apache.commons.jxpath.JXPathNotFoundException",
        "message": "No value for xpath: vendor[1]/product[1]/rate:amount[1]/@rate:discount"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            108
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest",
        "methodName": "testElementDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(JXPathContextReferenceImpl.java:355)",
          "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(JXPathContextReferenceImpl.java:289)",
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:54)",
          "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.doTest(ExternalXMLNamespaceTest.java:54)",
          "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.doTestElement(ExternalXMLNamespaceTest.java:62)",
          "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.testElementDOM(ExternalXMLNamespaceTest.java:70)"
        ],
        "error": "org.apache.commons.jxpath.JXPathNotFoundException",
        "message": "No value for xpath: /ElementA/B:ElementB"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/NamespaceResolver.java": {
        "modified": [
          [
            47
          ],
          [
            108
          ],
          [
            116
          ],
          [
            132
          ],
          [
            139
          ],
          [
            159
          ],
          [
            200
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            29
          ],
          [
            61
          ],
          [
            189
          ],
          [
            415
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest",
        "methodName": "testCreateAndSetAttributeDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(JXPathContextReferenceImpl.java:479)",
          "org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(JXPathContextReferenceImpl.java:467)",
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathCreatePathAndSetValue(JXPathTestCase.java:108)",
          "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.doTestCreateAndSetAttribute(ExternalXMLNamespaceTest.java:70)",
          "org.apache.commons.jxpath.ri.model.ExternalXMLNamespaceTest.testCreateAndSetAttributeDOM(ExternalXMLNamespaceTest.java:83)"
        ],
        "error": "org.apache.commons.jxpath.JXPathException",
        "message": "Unknown namespace prefix: A"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreFunction.java": {
        "modified": [
          [
            656
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.CoreFunctionTest",
        "methodName": "testCoreFunctions",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)",
          "org.apache.commons.jxpath.ri.compiler.CoreFunctionTest.testCoreFunctions(CoreFunctionTest.java:126)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <round('NaN')> expected:<NaN> but was:<0.0>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/axes/UnionContext.java": {
        "modified": [
          [
            20
          ],
          [
            56
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testUnion",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testUnion(XMLModelTestCase.java:834)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating </vendor[1]/contact[4] | /vendor[1]/contact[1]> expected:<John> but was:<Jack Black>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testUnion",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:55)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testUnion(XMLModelTestCase.java:834)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating </vendor[1]/contact[4] | /vendor[1]/contact[1]> expected:<John> but was:<Jack Black>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            147
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java": {
        "modified": [
          [
            391
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testAxisFollowing",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathPointer(JXPathTestCase.java:125)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisFollowing(XMLModelTestCase.java:644)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Evaluating pointer <//location[2]/following::node()[2]> expected:<...vendor[1]/product[1][]> but was:<...vendor[1]/product[1][/product:name[1]]>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testAxisPreceding",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathPointer(JXPathTestCase.java:125)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisPreceding(XMLModelTestCase.java:474)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Evaluating pointer <//location[2]/preceding::node()[3]> expected:<...ndor[1]/location[1]/[employeeCount[1]/text()][1]> but was:<...ndor[1]/location[1]/[address][1]>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testAxisFollowing",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathPointer(JXPathTestCase.java:125)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisFollowing(XMLModelTestCase.java:644)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Evaluating pointer <//location[2]/following::node()[2]> expected:<...vendor[1]/product[1][]> but was:<...vendor[1]/product[1][/product:name[1]]>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testAxisPreceding",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathPointer(JXPathTestCase.java:125)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisPreceding(XMLModelTestCase.java:474)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Evaluating pointer <//location[2]/preceding::node()[3]> expected:<...ndor[1]/location[1]/[employeeCount[1]/text()][1]> but was:<...ndor[1]/location[1]/[address][1]>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 17,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMAttributeIterator.java": {
        "modified": [
          [
            84
          ],
          [
            155
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/jdom/JDOMAttributeIterator.java": {
        "modified": [
          [
            70
          ],
          [
            82
          ],
          [
            117
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testAxisAttribute",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValueIterator(JXPathTestCase.java:158)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisAttribute(XMLModelTestCase.java:555)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating value iterator <vendor/product/price:amount/@*> expected:<[10%, 20%]> but was:<[20%]>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testAxisAttribute",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValueIterator(JXPathTestCase.java:158)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisAttribute(XMLModelTestCase.java:555)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating value iterator <vendor/product/price:amount/@*> expected:<[10%, 20%]> but was:<[20%]>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 18,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/axes/AttributeContext.java": {
        "modified": [
          [
            19
          ],
          [
            33
          ],
          [
            75
          ],
          [
            91
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.dom.DOMModelTest",
        "methodName": "testAxisAttribute",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValueIterator(JXPathTestCase.java:158)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisAttribute(XMLModelTestCase.java:562)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating value iterator <vendor/product/price:amount/attribute::node()> expected:<[10%, 20%]> but was:<[]>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.jdom.JDOMModelTest",
        "methodName": "testAxisAttribute",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValueIterator(JXPathTestCase.java:158)",
          "org.apache.commons.jxpath.ri.model.XMLModelTestCase.testAxisAttribute(XMLModelTestCase.java:562)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating value iterator <vendor/product/price:amount/attribute::node()> expected:<[10%, 20%]> but was:<[]>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 19,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            560
          ]
        ]
      },
      "org/apache/commons/jxpath/ri/model/jdom/JDOMNodePointer.java": {
        "modified": [
          [
            696
          ],
          [
            709
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.AliasedNamespaceIterationTest",
        "methodName": "testIterateJDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathPointerIterator(JXPathTestCase.java:176)",
          "org.apache.commons.jxpath.ri.model.AliasedNamespaceIterationTest.doTestIterate(AliasedNamespaceIterationTest.java:50)",
          "org.apache.commons.jxpath.ri.model.AliasedNamespaceIterationTest.testIterateJDOM(AliasedNamespaceIterationTest.java:58)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating pointer iterator </a:doc/a:elem> expected:<[/a:doc[1]/a:elem[1], /a:doc[1]/a:elem[2]]> but was:<[/a:doc[1]/a:elem[1], /a:doc[1]/a:elem[1]]>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.AliasedNamespaceIterationTest",
        "methodName": "testIterateDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathPointerIterator(JXPathTestCase.java:176)",
          "org.apache.commons.jxpath.ri.model.AliasedNamespaceIterationTest.doTestIterate(AliasedNamespaceIterationTest.java:50)",
          "org.apache.commons.jxpath.ri.model.AliasedNamespaceIterationTest.testIterateDOM(AliasedNamespaceIterationTest.java:54)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating pointer iterator </a:doc/a:elem> expected:<[/a:doc[1]/a:elem[1], /a:doc[1]/a:elem[2]]> but was:<[/a:doc[1]/a:elem[1], /a:doc[1]/a:elem[1]]>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 20,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/compiler/CoreOperationRelationalExpression.java": {
        "modified": [
          [
            88
          ],
          [
            138
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.compiler.JXPath149Test",
        "methodName": "testComplexOperationWithVariables",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:52)",
          "org.apache.commons.jxpath.ri.compiler.JXPath149Test.testComplexOperationWithVariables(JXPath149Test.java:29)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <$a + $b <= $c> expected:<true> but was:<false>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 21,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/beans/PropertyPointer.java": {
        "modified": [
          [
            152
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.JXPath151Test",
        "methodName": "testMapValueEquality",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValue(JXPathTestCase.java:52)",
          "org.apache.commons.jxpath.ri.model.JXPath151Test.testMapValueEquality(JXPath151Test.java:43)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating <map/b != map/a> expected:<true> but was:<false>"
      },
      {
        "className": "org.apache.commons.jxpath.ri.model.MixedModelTest",
        "methodName": "testNull",
        "stackTrace": [
          "org.apache.commons.jxpath.JXPathTestCase.assertXPathValueIterator(JXPathTestCase.java:155)",
          "org.apache.commons.jxpath.ri.model.MixedModelTest.testNull(MixedModelTest.java:315)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Evaluating value iterator <$testnull/nothing[1]> expected:<[null]> but was:<[]>"
      }
    ]
  },
  {
    "project": "JxPath",
    "bugId": 22,
    "changedFiles": {
      "org/apache/commons/jxpath/ri/model/dom/DOMNodePointer.java": {
        "modified": [
          [
            689
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.jxpath.ri.model.JXPath154Test",
        "methodName": "testInnerEmptyNamespaceDOM",
        "stackTrace": [
          "org.apache.commons.jxpath.ri.model.JXPath154Test.doTest(JXPath154Test.java:17)",
          "org.apache.commons.jxpath.ri.model.JXPath154Test.testInnerEmptyNamespaceDOM(JXPath154Test.java:21)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:</b:foo[1]/[test[1]]> but was:</b:foo[1]/[node()[2]]>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            467
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "TestLang747",
        "stackTrace": [
          "java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)",
          "java.lang.Integer.parseInt(Integer.java:583)",
          "java.lang.Integer.valueOf(Integer.java:740)",
          "java.lang.Integer.decode(Integer.java:1197)",
          "org.apache.commons.lang3.math.NumberUtils.createInteger(NumberUtils.java:684)",
          "org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:474)",
          "org.apache.commons.lang3.math.NumberUtilsTest.TestLang747(NumberUtilsTest.java:256)"
        ],
        "error": "java.lang.NumberFormatException",
        "message": "For input string: \"80000000\""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            593
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testStringCreateNumberEnsureNoPrecisionLoss",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.lang3.math.NumberUtilsTest.testStringCreateNumberEnsureNoPrecisionLoss(NumberUtilsTest.java:129)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/lang3/text/translate/LookupTranslator.java": {
        "modified": [
          [
            31
          ],
          [
            46
          ],
          [
            77
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.text.translate.LookupTranslatorTest",
        "methodName": "testLang882",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882(LookupTranslatorTest.java:48)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Incorrect codepoint consumption expected:<3> but was:<0>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/lang3/LocaleUtils.java": {
        "modified": [
          [
            97
          ],
          [
            128
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.LocaleUtilsTest",
        "methodName": "testLang865",
        "stackTrace": [
          "org.apache.commons.lang3.LocaleUtils.toLocale(LocaleUtils.java:99)",
          "org.apache.commons.lang3.LocaleUtilsTest.assertValidToLocale(LocaleUtilsTest.java:119)",
          "org.apache.commons.lang3.LocaleUtilsTest.testLang865(LocaleUtilsTest.java:505)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid locale format: _GB"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 6,
    "changedFiles": {
      "org/apache/commons/lang3/text/translate/CharSequenceTranslator.java": {
        "modified": [
          [
            95
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringUtilsTest",
        "methodName": "testEscapeSurrogatePairs",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "java.lang.Character.codePointAt(Character.java:4884)",
          "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:95)",
          "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:59)",
          "org.apache.commons.lang3.StringEscapeUtils.escapeCsv(StringEscapeUtils.java:556)",
          "org.apache.commons.lang3.StringUtilsTest.testEscapeSurrogatePairs(StringUtilsTest.java:2187)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 2"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            452
          ],
          [
            721
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testCreateNumber",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:242)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected NumberFormatException"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/lang3/time/FastDatePrinter.java": {
        "modified": [
          [
            1098
          ],
          [
            1112
          ],
          [
            1134
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.FastDateFormat_PrinterTest",
        "methodName": "testCalendarTimezoneRespected",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected(FastDatePrinterTest.java:286)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2:58PM [IC]T> but was:<2:58PM [PS]T>"
      },
      {
        "className": "org.apache.commons.lang3.time.FastDatePrinterTest",
        "methodName": "testCalendarTimezoneRespected",
        "stackTrace": [
          "org.junit.Assert.assertEquals(Assert.java:115)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected(FastDatePrinterTest.java:286)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2:58PM [IC]T> but was:<2:58PM [PS]T>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/lang3/time/FastDateParser.java": {
        "modified": [
          [
            144
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.FastDateFormat_ParserTest",
        "methodName": "testLANG_832",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:393)",
          "org.apache.commons.lang3.time.FastDateParserTest.testLANG_832(FastDateParserTest.java:348)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Parsed dates should be equal expected:<null> but was:<Fri Jan 02 21:00:00 PST 1970>"
      },
      {
        "className": "org.apache.commons.lang3.time.FastDateParserTest",
        "methodName": "testLANG_832",
        "stackTrace": [
          "org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:382)",
          "org.apache.commons.lang3.time.FastDateParserTest.testLANG_832(FastDateParserTest.java:348)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected FDF failure, but got Fri Jan 02 21:00:00 PST 1970 for ['d'd',d3] using d(\\p{IsNd}++)"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/lang3/time/FastDateParser.java": {
        "modified": [
          [
            304
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.FastDateFormat_ParserTest",
        "methodName": "testLANG_831",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:388)",
          "org.apache.commons.lang3.time.FastDateParserTest.testLANG_831(FastDateParserTest.java:348)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Parsed dates should be equal expected:<null> but was:<Mon Mar 02 21:00:00 PST 1970>"
      },
      {
        "className": "org.apache.commons.lang3.time.FastDateParserTest",
        "methodName": "testLANG_831",
        "stackTrace": [
          "org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:377)",
          "org.apache.commons.lang3.time.FastDateParserTest.testLANG_831(FastDateParserTest.java:348)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected FDF failure, but got Mon Mar 02 21:00:00 PST 1970 for [M E,3  Tue] using (\\p{IsNd}++)\\s*+(Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/lang3/RandomStringUtils.java": {
        "modified": [
          [
            245
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.RandomStringUtilsTest",
        "methodName": "testLANG807",
        "stackTrace": [
          "org.apache.commons.lang3.RandomStringUtilsTest.testLANG807(RandomStringUtilsTest.java:139)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Message (bound must be positive) must contain 'start'"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/lang3/RandomStringUtils.java": {
        "modified": [
          [
            230
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.RandomStringUtilsTest",
        "methodName": "testExceptions",
        "stackTrace": [
          "org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:248)",
          "org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:321)",
          "org.apache.commons.lang3.RandomStringUtilsTest.testExceptions(RandomStringUtilsTest.java:148)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "1362891502"
      },
      {
        "className": "org.apache.commons.lang3.RandomStringUtilsTest",
        "methodName": "testLANG805",
        "stackTrace": [
          "org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:248)",
          "org.apache.commons.lang3.RandomStringUtilsTest.testLANG805(RandomStringUtilsTest.java:130)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "1981969472"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/lang3/SerializationUtils.java": {
        "modified": [
          [
            239
          ],
          [
            252
          ],
          [
            268
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.SerializationUtilsTest",
        "methodName": "testPrimitiveTypeClassSerialization",
        "stackTrace": [
          "org.apache.commons.lang3.SerializationUtils.clone(SerializationUtils.java:99)",
          "org.apache.commons.lang3.SerializationUtilsTest.testPrimitiveTypeClassSerialization(SerializationUtilsTest.java:373)"
        ],
        "error": "org.apache.commons.lang3.SerializationException",
        "message": "ClassNotFoundException while reading cloned object data"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/lang3/StringUtils.java": {
        "modified": [
          [
            788
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testEquals",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals(StringUtilsEqualsIndexOfTest.java:490)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/lang3/reflect/TypeUtils.java": {
        "modified": [
          [
            219
          ],
          [
            675
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.reflect.TypeUtilsTest",
        "methodName": "testGetTypeArguments",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.junit.Assert.assertEquals(Assert.java:542)",
          "org.apache.commons.lang3.reflect.TypeUtilsTest.testGetTypeArguments(TypeUtilsTest.java:505)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "org.apache.commons.lang3.reflect.TypeUtilsTest",
        "methodName": "testIsAssignable",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertFalse(Assert.java:64)",
          "org.apache.commons.lang3.reflect.TypeUtilsTest.testIsAssignable(TypeUtilsTest.java:344)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "type class org.apache.commons.lang3.reflect.TypeUtilsTest$Thing not assignable to org.apache.commons.lang3.reflect.TypeUtilsTest$This<java.lang.String, java.lang.String>!"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            458
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testCreateNumber",
        "stackTrace": [
          "org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:545)",
          "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:197)"
        ],
        "error": "java.lang.NumberFormatException",
        "message": "0Xfade is not a valid number."
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 17,
    "changedFiles": {
      "org/apache/commons/lang3/text/translate/CharSequenceTranslator.java": {
        "modified": [
          [
            83
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringEscapeUtilsTest",
        "methodName": "testLang720",
        "stackTrace": [
          "org.apache.commons.lang3.StringEscapeUtilsTest.testLang720(StringEscapeUtilsTest.java:431)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<\ud842\udfb7[A]> but was:<\ud842\udfb7[?]>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 18,
    "changedFiles": {
      "org/apache/commons/lang3/time/FastDateFormat.java": {
        "modified": [
          [
            495
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.FastDateFormatTest",
        "methodName": "testFormat",
        "stackTrace": [
          "org.apache.commons.lang3.time.FastDateFormatTest.testFormat(FastDateFormatTest.java:220)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<AD AD AD AD 2003 [2003 03 20]03 January Jan 01 1 ...> but was:<AD AD AD AD 2003 [03 03 ]03 January Jan 01 1 ...>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 19,
    "changedFiles": {
      "org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java": {
        "modified": [
          [
            40
          ],
          [
            50
          ],
          [
            79
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest",
        "methodName": "testUnfinishedEntity",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(NumericEntityUnescaper.java:54)",
          "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:86)",
          "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:59)",
          "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity(NumericEntityUnescaperTest.java:51)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 19"
      },
      {
        "className": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest",
        "methodName": "testOutOfBounds",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(NumericEntityUnescaper.java:44)",
          "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:86)",
          "org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequenceTranslator.java:59)",
          "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds(NumericEntityUnescaperTest.java:41)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 7"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 20,
    "changedFiles": {
      "org/apache/commons/lang3/StringUtils.java": {
        "modified": [
          [
            3298
          ],
          [
            3383
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringUtilsTest",
        "methodName": "testJoin_ArrayChar",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtils.join(StringUtils.java:3298)",
          "org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayChar(StringUtilsTest.java:209)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsTest",
        "methodName": "testJoin_Objectarray",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtils.join(StringUtils.java:3383)",
          "org.apache.commons.lang3.StringUtils.join(StringUtils.java:3338)",
          "org.apache.commons.lang3.StringUtils.join(StringUtils.java:3230)",
          "org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray(StringUtilsTest.java:193)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 21,
    "changedFiles": {
      "org/apache/commons/lang3/time/DateUtils.java": {
        "modified": [
          [
            265
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.DateUtilsTest",
        "methodName": "testIsSameLocalTime_Cal",
        "stackTrace": [
          "org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal(DateUtilsTest.java:237)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "LANG-677"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 22,
    "changedFiles": {
      "org/apache/commons/lang3/math/Fraction.java": {
        "modified": [
          [
            583
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.FractionTest",
        "methodName": "testReducedFactory_int_int",
        "stackTrace": [
          "org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int(FractionTest.java:336)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1073741824> but was:<-2147483648>"
      },
      {
        "className": "org.apache.commons.lang3.math.FractionTest",
        "methodName": "testReduce",
        "stackTrace": [
          "org.apache.commons.lang3.math.FractionTest.testReduce(FractionTest.java:654)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1073741824> but was:<-2147483648>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 23,
    "changedFiles": {
      "org/apache/commons/lang3/text/ExtendedMessageFormat.java": {
        "modified": [
          [
            73
          ],
          [
            263
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.text.ExtendedMessageFormatTest",
        "methodName": "testEqualsHashcode",
        "stackTrace": [
          "org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode(ExtendedMessageFormatTest.java:301)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "registry, hashcode()"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 24,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            1413
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testIsNumber",
        "stackTrace": [
          "org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(NumberUtilsTest.java:1145)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "isNumber(String) LANG-664 failed"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 25,
    "changedFiles": {
      "org/apache/commons/lang3/text/translate/EntityArrays.java": {
        "modified": [
          [
            74
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.text.translate.EntityArraysTest",
        "methodName": "testISO8859_1_ESCAPE",
        "stackTrace": [
          "org.apache.commons.lang3.text.translate.EntityArraysTest.testISO8859_1_ESCAPE(EntityArraysTest.java:64)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "One or more errors detected"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 26,
    "changedFiles": {
      "org/apache/commons/lang3/time/FastDateFormat.java": {
        "modified": [
          [
            820
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.FastDateFormatTest",
        "methodName": "testLang645",
        "stackTrace": [
          "org.apache.commons.lang3.time.FastDateFormatTest.testLang645(FastDateFormatTest.java:337)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<fredag, week [53]> but was:<fredag, week [01]>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 27,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            479
          ],
          [
            489
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testCreateNumber",
        "stackTrace": [
          "java.lang.String.substring(String.java:1963)",
          "org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:489)",
          "org.apache.commons.lang3.math.NumberUtilsTest.checkCreateNumber(NumberUtilsTest.java:1146)",
          "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:216)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 4"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 28,
    "changedFiles": {
      "org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java": {
        "modified": [
          [
            63
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest",
        "methodName": "testSupplementaryUnescaping",
        "stackTrace": [
          "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping(NumericEntityUnescaperTest.java:33)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "Failed to unescape numeric entities supplementary characters expected:<[\ud803\udc22]> but was:<[\u0c22]>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 29,
    "changedFiles": {
      "org/apache/commons/lang3/SystemUtils.java": {
        "modified": [
          [
            1672
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.SystemUtilsTest",
        "methodName": "testJavaVersionAsInt",
        "stackTrace": [
          "org.apache.commons.lang3.SystemUtilsTest.testJavaVersionAsInt(SystemUtilsTest.java:210)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<0.0>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 30,
    "changedFiles": {
      "org/apache/commons/lang3/StringUtils.java": {
        "modified": [
          [
            1376
          ],
          [
            1443
          ],
          [
            1455
          ],
          [
            1497
          ],
          [
            1533
          ],
          [
            1576
          ],
          [
            1678
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsNone_CharArrayWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:327)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<true> but was:<false>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsNone_StringWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:381)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<true> but was:<false>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsAny_StringCharArrayWithBadSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:138)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<false> but was:<true>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testIndexOfAnyBut_StringStringWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:616)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsAny_StringWithBadSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:186)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<false> but was:<true>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testIndexOfAny_StringCharArrayWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:528)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testIndexOfAnyBut_StringCharArrayWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:593)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<3>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsNone_StringWithBadSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:362)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<true> but was:<false>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testIndexOfAny_StringStringWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:571)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2> but was:<0>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsNone_CharArrayWithBadSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:308)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<true> but was:<false>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 31,
    "changedFiles": {
      "org/apache/commons/lang3/StringUtils.java": {
        "modified": [
          [
            1446
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsAnyCharArrayWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:696)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<false> but was:<true>"
      },
      {
        "className": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsAnyStringWithSupplementaryChars",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:680)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<false> but was:<true>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 32,
    "changedFiles": {
      "org/apache/commons/lang3/builder/HashCodeBuilder.java": {
        "modified": [
          [
            104
          ],
          [
            152
          ],
          [
            522
          ],
          [
            538
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.builder.HashCodeBuilderTest",
        "methodName": "testReflectionObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle(HashCodeBuilderTest.java:524)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: []"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 33,
    "changedFiles": {
      "org/apache/commons/lang3/ClassUtils.java": {
        "modified": [
          [
            910
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.ClassUtilsTest",
        "methodName": "testToClass_object",
        "stackTrace": [
          "org.apache.commons.lang3.ClassUtils.toClass(ClassUtils.java:910)",
          "org.apache.commons.lang3.ClassUtilsTest.testToClass_object(ClassUtilsTest.java:910)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 34,
    "changedFiles": {
      "org/apache/commons/lang3/builder/ToStringStyle.java": {
        "modified": [
          [
            148
          ],
          [
            164
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle(ToStringBuilderTest.java:837)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionHierarchy",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy(ToStringBuilderTest.java:335)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testSelfInstanceTwoVarsReflectionObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle(ToStringBuilderTest.java:533)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionArrayCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle(ToStringBuilderTest.java:382)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionLongArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray(ToStringBuilderTest.java:243)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionArrayArrayCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle(ToStringBuilderTest.java:421)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionFloatArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray(ToStringBuilderTest.java:213)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionDoubleArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray(ToStringBuilderTest.java:288)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionBooleanArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray(ToStringBuilderTest.java:222)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionyteArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray(ToStringBuilderTest.java:186)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionDoubleArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray(ToStringBuilderTest.java:204)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionIntArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray(ToStringBuilderTest.java:252)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionLongArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray(ToStringBuilderTest.java:159)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionhortArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray(ToStringBuilderTest.java:261)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionObjectArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray(ToStringBuilderTest.java:150)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle(ToStringBuilderTest.java:550)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionBooleanArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray(ToStringBuilderTest.java:298)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testSimpleReflectionObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle(ToStringBuilderTest.java:510)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionByteArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray(ToStringBuilderTest.java:270)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionArrayCycleLevel2",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2(ToStringBuilderTest.java:399)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionArrayAndObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle(ToStringBuilderTest.java:578)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionCharArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray(ToStringBuilderTest.java:279)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionShortArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray(ToStringBuilderTest.java:177)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testSelfInstanceVarReflectionObjectCycle",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle(ToStringBuilderTest.java:521)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionIntArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray(ToStringBuilderTest.java:168)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionCharArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray(ToStringBuilderTest.java:195)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      },
      {
        "className": "org.apache.commons.lang3.builder.ToStringBuilderTest",
        "methodName": "testReflectionFloatArrayArray",
        "stackTrace": [
          "org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)",
          "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray(ToStringBuilderTest.java:233)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: {}"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 35,
    "changedFiles": {
      "org/apache/commons/lang3/ArrayUtils.java": {
        "modified": [
          [
            3295
          ],
          [
            3574
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.ArrayUtilsAddTest",
        "methodName": "testLANG571",
        "stackTrace": [
          "org.apache.commons.lang3.ArrayUtilsAddTest.testLANG571(ArrayUtilsAddTest.java:232)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "[Ljava.lang.Object; cannot be cast to [Ljava.lang.String;"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 36,
    "changedFiles": {
      "org/apache/commons/lang3/math/NumberUtils.java": {
        "modified": [
          [
            491
          ],
          [
            1388
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testCreateNumber",
        "stackTrace": [
          "org.apache.commons.lang3.math.NumberUtils.createNumber(NumberUtils.java:546)",
          "org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumber(NumberUtilsTest.java:213)"
        ],
        "error": "java.lang.NumberFormatException",
        "message": "2. is not a valid number."
      },
      {
        "className": "org.apache.commons.lang3.math.NumberUtilsTest",
        "methodName": "testIsNumber",
        "stackTrace": [
          "org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber(NumberUtilsTest.java:1138)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "isNumber(String) LANG-521 failed"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 37,
    "changedFiles": {
      "org/apache/commons/lang3/ArrayUtils.java": {
        "modified": [
          [
            2962
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.ArrayUtilsAddTest",
        "methodName": "testJira567",
        "stackTrace": [
          "java.lang.System.arraycopy(Native Method)",
          "org.apache.commons.lang3.ArrayUtils.addAll(ArrayUtils.java:2962)",
          "org.apache.commons.lang3.ArrayUtilsAddTest.testJira567(ArrayUtilsAddTest.java:40)"
        ],
        "error": "java.lang.ArrayStoreException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 38,
    "changedFiles": {
      "org/apache/commons/lang3/time/FastDateFormat.java": {
        "modified": [
          [
            872
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.time.FastDateFormatTest",
        "methodName": "testLang538",
        "stackTrace": [
          "org.apache.commons.lang3.time.FastDateFormatTest.testLang538(FastDateFormatTest.java:349)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "dateTime expected:<2009-10-16T[16]:42:16.000Z> but was:<2009-10-16T[08]:42:16.000Z>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 39,
    "changedFiles": {
      "org/apache/commons/lang3/StringUtils.java": {
        "modified": [
          [
            3676
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang3.StringUtilsTest",
        "methodName": "testReplace_StringStringArrayStringArray",
        "stackTrace": [
          "org.apache.commons.lang3.StringUtils.replaceEach(StringUtils.java:3676)",
          "org.apache.commons.lang3.StringUtils.replaceEach(StringUtils.java:3502)",
          "org.apache.commons.lang3.StringUtilsTest.testReplace_StringStringArrayStringArray(StringUtilsTest.java:1039)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 40,
    "changedFiles": {
      "org/apache/commons/lang/StringUtils.java": {
        "modified": [
          [
            1048
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.StringUtilsEqualsIndexOfTest",
        "methodName": "testContainsIgnoreCase_LocaleIndependence",
        "stackTrace": [
          "org.apache.commons.lang.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence(StringUtilsEqualsIndexOfTest.java:341)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "en: 0 \u00df SS"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 41,
    "changedFiles": {
      "org/apache/commons/lang/ClassUtils.java": {
        "modified": [
          [
            191
          ],
          [
            203
          ],
          [
            245
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.ClassUtilsTest",
        "methodName": "test_getShortClassName_Class",
        "stackTrace": [
          "org.apache.commons.lang.ClassUtilsTest.test_getShortClassName_Class(ClassUtilsTest.java:97)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<String[[]]> but was:<String[;]>"
      },
      {
        "className": "org.apache.commons.lang.ClassUtilsTest",
        "methodName": "test_getPackageName_Class",
        "stackTrace": [
          "org.apache.commons.lang.ClassUtilsTest.test_getPackageName_Class(ClassUtilsTest.java:146)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[]java.lang> but was:<[[L]java.lang>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 42,
    "changedFiles": {
      "org/apache/commons/lang/Entities.java": {
        "modified": [
          [
            828
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.StringEscapeUtilsTest",
        "methodName": "testEscapeHtmlHighUnicode",
        "stackTrace": [
          "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeHtmlHighUnicode(StringEscapeUtilsTest.java:430)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "High unicode was not escaped correctly expected:<&#[119650];> but was:<&#[55348;&#57186];>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 43,
    "changedFiles": {
      "org/apache/commons/lang/text/ExtendedMessageFormat.java": {
        "modified": [
          [
            422
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.text.ExtendedMessageFormatTest",
        "methodName": "testEscapedQuote_LANG_477",
        "stackTrace": [
          "java.util.Arrays.copyOf(Arrays.java:3332)",
          "java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124)",
          "java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649)",
          "java.lang.StringBuffer.append(StringBuffer.java:381)",
          "org.apache.commons.lang.text.ExtendedMessageFormat.appendQuotedString(ExtendedMessageFormat.java:422)",
          "org.apache.commons.lang.text.ExtendedMessageFormat.applyPattern(ExtendedMessageFormat.java:158)",
          "org.apache.commons.lang.text.ExtendedMessageFormat.<init>(ExtendedMessageFormat.java:127)",
          "org.apache.commons.lang.text.ExtendedMessageFormat.<init>(ExtendedMessageFormat.java:112)",
          "org.apache.commons.lang.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477(ExtendedMessageFormatTest.java:100)"
        ],
        "error": "java.lang.OutOfMemoryError",
        "message": "Java heap space"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 44,
    "changedFiles": {
      "org/apache/commons/lang/NumberUtils.java": {
        "modified": [
          [
            145
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.NumberUtilsTest",
        "methodName": "testLang457",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "org.apache.commons.lang.NumberUtils.createNumber(NumberUtils.java:193)",
          "org.apache.commons.lang.NumberUtilsTest.testLang457(NumberUtilsTest.java:528)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 0"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 45,
    "changedFiles": {
      "org/apache/commons/lang/WordUtils.java": {
        "modified": [
          [
            616
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.WordUtilsTest",
        "methodName": "testAbbreviate",
        "stackTrace": [
          "java.lang.String.substring(String.java:1963)",
          "org.apache.commons.lang.WordUtils.abbreviate(WordUtils.java:629)",
          "org.apache.commons.lang.WordUtilsTest.testAbbreviate(WordUtilsTest.java:390)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 15"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 46,
    "changedFiles": {
      "org/apache/commons/lang/StringEscapeUtils.java": {
        "modified": [
          [
            86
          ],
          [
            102
          ],
          [
            127
          ],
          [
            143
          ],
          [
            154
          ],
          [
            178
          ],
          [
            244
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.StringEscapeUtilsTest",
        "methodName": "testEscapeJavaWithSlash",
        "stackTrace": [
          "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(StringEscapeUtilsTest.java:113)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...tring with a slash ([]/) in it> but was:<...tring with a slash ([\\]/) in it>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 47,
    "changedFiles": {
      "org/apache/commons/lang/text/StrBuilder.java": {
        "modified": [
          [
            1186
          ],
          [
            1230
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.text.StrBuilderTest",
        "methodName": "testLang412Left",
        "stackTrace": [
          "org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadLeft(StrBuilder.java:1186)",
          "org.apache.commons.lang.text.StrBuilderTest.testLang412Left(StrBuilderTest.java:1761)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.text.StrBuilderTest",
        "methodName": "testLang412Right",
        "stackTrace": [
          "org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(StrBuilder.java:1230)",
          "org.apache.commons.lang.text.StrBuilderTest.testLang412Right(StrBuilderTest.java:1755)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 48,
    "changedFiles": {
      "org/apache/commons/lang/builder/EqualsBuilder.java": {
        "modified": [
          [
            380
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.builder.EqualsBuilderTest",
        "methodName": "testBigDecimal",
        "stackTrace": [
          "org.apache.commons.lang.builder.EqualsBuilderTest.testBigDecimal(EqualsBuilderTest.java:385)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 49,
    "changedFiles": {
      "org/apache/commons/lang/math/Fraction.java": {
        "modified": [
          [
            466
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.math.FractionTest",
        "methodName": "testReduce",
        "stackTrace": [
          "org.apache.commons.lang.math.FractionTest.testReduce(FractionTest.java:655)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<100>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 50,
    "changedFiles": {
      "org/apache/commons/lang/time/FastDateFormat.java": {
        "modified": [
          [
            285
          ],
          [
            465
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.time.FastDateFormatTest",
        "methodName": "test_changeDefault_Locale_DateInstance",
        "stackTrace": [
          "org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance(FastDateFormatTest.java:146)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<de_DE> was not:<en_US>"
      },
      {
        "className": "org.apache.commons.lang.time.FastDateFormatTest",
        "methodName": "test_changeDefault_Locale_DateTimeInstance",
        "stackTrace": [
          "org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance(FastDateFormatTest.java:166)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<de_DE> was not:<en_US>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 51,
    "changedFiles": {
      "org/apache/commons/lang/BooleanUtils.java": {
        "modified": [
          [
            682
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.BooleanUtilsTest",
        "methodName": "test_toBoolean_String",
        "stackTrace": [
          "java.lang.String.charAt(String.java:658)",
          "org.apache.commons.lang.BooleanUtils.toBoolean(BooleanUtils.java:686)",
          "org.apache.commons.lang.BooleanUtilsTest.test_toBoolean_String(BooleanUtilsTest.java:334)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 3"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 52,
    "changedFiles": {
      "org/apache/commons/lang/StringEscapeUtils.java": {
        "modified": [
          [
            236
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.StringEscapeUtilsTest",
        "methodName": "testEscapeJavaScript",
        "stackTrace": [
          "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(StringEscapeUtilsTest.java:187)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...ipt>alert(\\'aaa\\');<[\\]/script>\\';> but was:<...ipt>alert(\\'aaa\\');<[]/script>\\';>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 53,
    "changedFiles": {
      "org/apache/commons/lang/time/DateUtils.java": {
        "modified": [
          [
            643
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.time.DateUtilsTest",
        "methodName": "testRoundLang346",
        "stackTrace": [
          "org.apache.commons.lang.time.DateUtilsTest.testRoundLang346(DateUtilsTest.java:712)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Minute Round Up Failed expected:<Mon Jul 02 08:09:00 PDT 2007> but was:<Mon Jul 02 08:01:00 PDT 2007>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 54,
    "changedFiles": {
      "org/apache/commons/lang/LocaleUtils.java": {
        "modified": [
          [
            114
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testLang328",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.toLocale(LocaleUtils.java:116)",
          "org.apache.commons.lang.LocaleUtilsTest.assertValidToLocale(LocaleUtilsTest.java:140)",
          "org.apache.commons.lang.LocaleUtilsTest.testLang328(LocaleUtilsTest.java:505)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid locale format: fr__POSIX"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 55,
    "changedFiles": {
      "org/apache/commons/lang/time/StopWatch.java": {
        "modified": [
          [
            118
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.time.StopWatchTest",
        "methodName": "testLang315",
        "stackTrace": [
          "org.apache.commons.lang.time.StopWatchTest.testLang315(StopWatchTest.java:120)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 56,
    "changedFiles": {
      "org/apache/commons/lang/time/FastDateFormat.java": {
        "modified": [
          [
            140
          ],
          [
            1022
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.time.FastDateFormatTest",
        "methodName": "testLang303",
        "stackTrace": [
          "org.apache.commons.lang.SerializationUtils.serialize(SerializationUtils.java:111)",
          "org.apache.commons.lang.SerializationUtils.serialize(SerializationUtils.java:133)",
          "org.apache.commons.lang.time.FastDateFormatTest.testLang303(FastDateFormatTest.java:288)"
        ],
        "error": "org.apache.commons.lang.SerializationException",
        "message": "java.io.NotSerializableException: org.apache.commons.lang.time.FastDateFormat$PaddedNumberField"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 57,
    "changedFiles": {
      "org/apache/commons/lang/LocaleUtils.java": {
        "modified": [
          [
            223
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testAvailableLocaleSet",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testIsAvailableLocale",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testAvailableLocaleList",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testCountriesByLanguage",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testLocaleLookupList_LocaleLocale",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testLanguagesByCountry",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testToLocale_1Part",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testToLocale_2Part",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testToLocale_3Part",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testLocaleLookupList_Locale",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.lang.LocaleUtilsTest",
        "methodName": "testConstructor",
        "stackTrace": [
          "org.apache.commons.lang.LocaleUtils.isAvailableLocale(LocaleUtils.java:223)",
          "org.apache.commons.lang.LocaleUtilsTest.setUp(LocaleUtilsTest.java:82)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 58,
    "changedFiles": {
      "org/apache/commons/lang/math/NumberUtils.java": {
        "modified": [
          [
            454
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.math.NumberUtilsTest",
        "methodName": "testLang300",
        "stackTrace": [
          "org.apache.commons.lang.math.NumberUtils.createNumber(NumberUtils.java:464)",
          "org.apache.commons.lang.math.NumberUtilsTest.testLang300(NumberUtilsTest.java:1371)"
        ],
        "error": "java.lang.NumberFormatException",
        "message": "1l is not a valid number."
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 59,
    "changedFiles": {
      "org/apache/commons/lang/text/StrBuilder.java": {
        "modified": [
          [
            884
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.text.StrBuilderAppendInsertTest",
        "methodName": "testLang299",
        "stackTrace": [
          "java.lang.String.getChars(String.java:826)",
          "org.apache.commons.lang.text.StrBuilder.appendFixedWidthPadRight(StrBuilder.java:884)",
          "org.apache.commons.lang.text.StrBuilderAppendInsertTest.testLang299(StrBuilderAppendInsertTest.java:602)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 60,
    "changedFiles": {
      "org/apache/commons/lang/text/StrBuilder.java": {
        "modified": [
          [
            1673
          ],
          [
            1730
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.text.StrBuilderTest",
        "methodName": "testLang295",
        "stackTrace": [
          "org.apache.commons.lang.text.StrBuilderTest.testLang295(StrBuilderTest.java:1748)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "The contains(char) method is looking beyond the end of the string"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 61,
    "changedFiles": {
      "org/apache/commons/lang/text/StrBuilder.java": {
        "modified": [
          [
            1776
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.text.StrBuilderTest",
        "methodName": "testIndexOfLang294",
        "stackTrace": [
          "org.apache.commons.lang.text.StrBuilderTest.testIndexOfLang294(StrBuilderTest.java:1741)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1> but was:<6>"
      },
      {
        "className": "org.apache.commons.lang.text.StrBuilderTest",
        "methodName": "testLang294",
        "stackTrace": [
          "java.lang.System.arraycopy(Native Method)",
          "org.apache.commons.lang.text.StrBuilder.deleteImpl(StrBuilder.java:1114)",
          "org.apache.commons.lang.text.StrBuilder.deleteAll(StrBuilder.java:1188)",
          "org.apache.commons.lang.text.StrBuilderTest.testLang294(StrBuilderTest.java:1734)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 62,
    "changedFiles": {
      "org/apache/commons/lang/Entities.java": {
        "modified": [
          [
            850
          ],
          [
            920
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.EntitiesTest",
        "methodName": "testNumberOverflow",
        "stackTrace": [
          "org.apache.commons.lang.EntitiesTest.doTestUnescapeEntity(EntitiesTest.java:101)",
          "org.apache.commons.lang.EntitiesTest.testNumberOverflow(EntitiesTest.java:201)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[&#12345678;]> but was:<[\u614e]>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 63,
    "changedFiles": {
      "org/apache/commons/lang/time/DurationFormatUtils.java": {
        "modified": [
          [
            306
          ],
          [
            432
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.time.DurationFormatUtilsTest",
        "methodName": "testJiraLang281",
        "stackTrace": [
          "org.apache.commons.lang.time.DurationFormatUtilsTest.testJiraLang281(DurationFormatUtilsTest.java:436)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[09]> but was:<[-2]>"
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 64,
    "changedFiles": {
      "org/apache/commons/lang/enums/ValuedEnum.java": {
        "modified": [
          [
            183
          ],
          [
            192
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.enums.ValuedEnumTest",
        "methodName": "testCompareTo_otherEnumType",
        "stackTrace": [
          "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherEnumType(ValuedEnumTest.java:108)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Lang",
    "bugId": 65,
    "changedFiles": {
      "org/apache/commons/lang/time/DateUtils.java": {
        "modified": [
          [
            624
          ],
          [
            631
          ],
          [
            709
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.lang.time.DateUtilsTest",
        "methodName": "testTruncateLang59",
        "stackTrace": [
          "org.apache.commons.lang.time.DateUtilsTest.testTruncateLang59(DateUtilsTest.java:927)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Truncate Calendar.SECOND expected:<Sun Oct 31 01:02:03 MDT 2004> but was:<Sun Oct 31 01:02:03 MST 2004>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 1,
    "changedFiles": {
      "org/apache/commons/math3/fraction/BigFraction.java": {
        "modified": [
          [
            306
          ]
        ]
      },
      "org/apache/commons/math3/fraction/Fraction.java": {
        "modified": [
          [
            215
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.fraction.BigFractionTest",
        "methodName": "testDigitLimitConstructor",
        "stackTrace": [
          "org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:306)",
          "org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:356)",
          "org.apache.commons.math3.fraction.BigFractionTest.testDigitLimitConstructor(BigFractionTest.java:159)"
        ],
        "error": "org.apache.commons.math3.fraction.FractionConversionException",
        "message": "illegal state: Overflow trying to convert 0.5 to fraction (2,499,999,794/4,999,999,587)"
      },
      {
        "className": "org.apache.commons.math3.fraction.FractionTest",
        "methodName": "testDigitLimitConstructor",
        "stackTrace": [
          "org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:215)",
          "org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:144)",
          "org.apache.commons.math3.fraction.FractionTest.testDigitLimitConstructor(FractionTest.java:134)"
        ],
        "error": "org.apache.commons.math3.fraction.FractionConversionException",
        "message": "illegal state: Overflow trying to convert 0.5 to fraction (2,499,999,794/4,999,999,587)"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 2,
    "changedFiles": {
      "org/apache/commons/math3/distribution/HypergeometricDistribution.java": {
        "modified": [
          [
            268
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.distribution.HypergeometricDistributionTest",
        "methodName": "testMath1021",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.math3.distribution.HypergeometricDistributionTest.testMath1021(HypergeometricDistributionTest.java:297)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "sample=-50"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 3,
    "changedFiles": {
      "org/apache/commons/math3/util/MathArrays.java": {
        "modified": [
          [
            821
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.util.MathArraysTest",
        "methodName": "testLinearCombinationWithSingleElementArray",
        "stackTrace": [
          "org.apache.commons.math3.util.MathArrays.linearCombination(MathArrays.java:846)",
          "org.apache.commons.math3.util.MathArraysTest.testLinearCombinationWithSingleElementArray(MathArraysTest.java:591)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "1"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 4,
    "changedFiles": {
      "org/apache/commons/math3/geometry/euclidean/threed/SubLine.java": {
        "modified": [
          [
            114
          ]
        ]
      },
      "org/apache/commons/math3/geometry/euclidean/twod/SubLine.java": {
        "modified": [
          [
            118
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.geometry.euclidean.threed.SubLineTest",
        "methodName": "testIntersectionNotIntersecting",
        "stackTrace": [
          "org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Line.java:114)",
          "org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Line.java:129)",
          "org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(SubLine.java:116)",
          "org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionNotIntersecting(SubLineTest.java:160)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.geometry.euclidean.twod.SubLineTest",
        "methodName": "testIntersectionParallel",
        "stackTrace": [
          "org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(Line.java:182)",
          "org.apache.commons.math3.geometry.euclidean.twod.SubLine.intersection(SubLine.java:120)",
          "org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionParallel(SubLineTest.java:151)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 5,
    "changedFiles": {
      "org/apache/commons/math3/complex/Complex.java": {
        "modified": [
          [
            305
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.complex.ComplexTest",
        "methodName": "testReciprocalZero",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.math3.complex.ComplexTest.testReciprocalZero(ComplexTest.java:334)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 6,
    "changedFiles": {
      "org/apache/commons/math3/optim/BaseOptimizer.java": {
        "modified": [
          [
            51
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java": {
        "modified": [
          [
            214
          ],
          [
            277
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
        "modified": [
          [
            388
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java": {
        "modified": [
          [
            191
          ],
          [
            227
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer.java": {
        "modified": [
          [
            158
          ],
          [
            175
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer.java": {
        "modified": [
          [
            106
          ],
          [
            160
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java": {
        "modified": [
          [
            322
          ],
          [
            489
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest",
        "methodName": "testTrivial",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testTrivial(NonLinearConjugateGradientOptimizerTest.java:141)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testConstrainedRosen",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testConstrainedRosen(CMAESOptimizerTest.java:348)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testElliRotated",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testElliRotated(CMAESOptimizerTest.java:183)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testEllipse",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testEllipse(CMAESOptimizerTest.java:168)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testTwoAxes",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testTwoAxes(CMAESOptimizerTest.java:228)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testCigar",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testCigar(CMAESOptimizerTest.java:198)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testRosen",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testRosen(CMAESOptimizerTest.java:132)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testRastrigin",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testRastrigin(CMAESOptimizerTest.java:333)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testDiagonalRosen",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testDiagonalRosen(CMAESOptimizerTest.java:363)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testSsDiffPow",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testSsDiffPow(CMAESOptimizerTest.java:303)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testMaximize",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testMaximize(CMAESOptimizerTest.java:148)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testAckley",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testAckley(CMAESOptimizerTest.java:318)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testCigTab",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testCigTab(CMAESOptimizerTest.java:243)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testDiffPow",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testDiffPow(CMAESOptimizerTest.java:288)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testSphere",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testSphere(CMAESOptimizerTest.java:258)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testTablet",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testTablet(CMAESOptimizerTest.java:273)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest",
        "methodName": "testCigarWithBoundaries",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.doTest(CMAESOptimizerTest.java:514)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testCigarWithBoundaries(CMAESOptimizerTest.java:213)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest",
        "methodName": "testSumSinc",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.doTest(PowellOptimizerTest.java:266)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.testSumSinc(PowellOptimizerTest.java:75)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest",
        "methodName": "testMaximize1",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMaximize1(SimplexOptimizerMultiDirectionalTest.java:108)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest",
        "methodName": "testMaximize2",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMaximize2(SimplexOptimizerMultiDirectionalTest.java:129)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest",
        "methodName": "testMinimize1",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMinimize1(SimplexOptimizerMultiDirectionalTest.java:66)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest",
        "methodName": "testMinimize2",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMinimize2(SimplexOptimizerMultiDirectionalTest.java:87)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest",
        "methodName": "testMaximize1",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMaximize1(SimplexOptimizerNelderMeadTest.java:113)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest",
        "methodName": "testMaximize2",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMaximize2(SimplexOptimizerNelderMeadTest.java:134)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest",
        "methodName": "testMinimize1",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMinimize1(SimplexOptimizerNelderMeadTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest",
        "methodName": "testMinimize2",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMinimize2(SimplexOptimizerNelderMeadTest.java:92)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest",
        "methodName": "testGetIterations",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.testGetIterations(AbstractLeastSquaresOptimizerAbstractTest.java:131)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest",
        "methodName": "testGetIterations",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizerAbstractTest.testGetIterations(AbstractLeastSquaresOptimizerAbstractTest.java:131)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 7,
    "changedFiles": {
      "org/apache/commons/math3/ode/AbstractIntegrator.java": {
        "modified": [
          [
            346
          ],
          [
            357
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest",
        "methodName": "testEventsScheduling",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest$SchedulingChecker.g(DormandPrince853IntegratorTest.java:389)",
          "org.apache.commons.math3.ode.events.EventState.evaluateStep(EventState.java:224)",
          "org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:323)",
          "org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:303)",
          "org.apache.commons.math3.ode.AbstractIntegrator.integrate(AbstractIntegrator.java:228)",
          "org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testEventsScheduling(DormandPrince853IntegratorTest.java:365)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 8,
    "changedFiles": {
      "org/apache/commons/math3/distribution/DiscreteDistribution.java": {
        "modified": [
          [
            181
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.distribution.DiscreteRealDistributionTest",
        "methodName": "testIssue942",
        "stackTrace": [
          "org.apache.commons.math3.distribution.DiscreteDistribution.sample(DiscreteDistribution.java:190)",
          "org.apache.commons.math3.distribution.DiscreteRealDistributionTest.testIssue942(DiscreteRealDistributionTest.java:212)"
        ],
        "error": "java.lang.ArrayStoreException",
        "message": "org.apache.commons.math3.distribution.DiscreteRealDistributionTest$2"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 9,
    "changedFiles": {
      "org/apache/commons/math3/geometry/euclidean/threed/Line.java": {
        "modified": [
          [
            87
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.geometry.euclidean.threed.LineTest",
        "methodName": "testRevert",
        "stackTrace": [
          "org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)",
          "org.junit.Assert.assertArrayEquals(Assert.java:419)",
          "org.junit.Assert.assertArrayEquals(Assert.java:430)",
          "org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert(LineTest.java:144)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "arrays first differed at element [0]; expected:<0.028581782127907646> but was:<0.028581782243293483>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 10,
    "changedFiles": {
      "org/apache/commons/math3/analysis/differentiation/DSCompiler.java": {
        "modified": [
          [
            1419
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest",
        "methodName": "testAtan2SpecialCases",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases(DerivativeStructureTest.java:816)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<NaN>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 11,
    "changedFiles": {
      "org/apache/commons/math3/distribution/MultivariateNormalDistribution.java": {
        "modified": [
          [
            183
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.distribution.MultivariateNormalDistributionTest",
        "methodName": "testUnivariateDistribution",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution(MultivariateNormalDistributionTest.java:151)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.34456358187863456> but was:<0.8636928167451191>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 12,
    "changedFiles": {
      "org/apache/commons/math3/random/BitsStreamGenerator.java": {
        "modified": [
          [
            19
          ],
          [
            29
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.distribution.GammaDistributionTest",
        "methodName": "testDistributionClone",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testDistributionClone(RealDistributionAbstractTest.java:394)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10.688186123440644> but was:<13.675503685260901>"
      },
      {
        "className": "org.apache.commons.math3.distribution.LogNormalDistributionTest",
        "methodName": "testDistributionClone",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testDistributionClone(RealDistributionAbstractTest.java:394)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<23.951334711900845> but was:<1.9236285029185378>"
      },
      {
        "className": "org.apache.commons.math3.distribution.NormalDistributionTest",
        "methodName": "testDistributionClone",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testDistributionClone(RealDistributionAbstractTest.java:394)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3.176024051402272> but was:<0.6542132477988758>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 13,
    "changedFiles": {
      "org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
        "modified": [
          [
            562
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.fitting.PolynomialFitterTest",
        "methodName": "testLargeSample",
        "stackTrace": [
          "org.apache.commons.math3.linear.DiagonalMatrix.getData(DiagonalMatrix.java:204)",
          "org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(TriDiagonalTransformer.java:69)",
          "org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(EigenDecomposition.java:561)",
          "org.apache.commons.math3.linear.EigenDecomposition.<init>(EigenDecomposition.java:122)",
          "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.squareRoot(AbstractLeastSquaresOptimizer.java:562)",
          "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.setUp(AbstractLeastSquaresOptimizer.java:508)",
          "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(BaseAbstractMultivariateVectorOptimizer.java:239)",
          "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimizeInternal(AbstractLeastSquaresOptimizer.java:496)",
          "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(AbstractLeastSquaresOptimizer.java:423)",
          "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(AbstractLeastSquaresOptimizer.java:62)",
          "org.apache.commons.math3.optimization.fitting.CurveFitter.fit(CurveFitter.java:189)",
          "org.apache.commons.math3.optimization.fitting.CurveFitter.fit(CurveFitter.java:153)",
          "org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit(PolynomialFitter.java:110)",
          "org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(PolynomialFitterTest.java:241)"
        ],
        "error": "java.lang.OutOfMemoryError",
        "message": "Java heap space"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 14,
    "changedFiles": {
      "org/apache/commons/math3/optim/nonlinear/vector/Weight.java": {
        "modified": [
          [
            43
          ]
        ]
      },
      "org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java": {
        "modified": [
          [
            267
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.fitting.PolynomialFitterTest",
        "methodName": "testLargeSample",
        "stackTrace": [
          "org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(BlockRealMatrix.java:271)",
          "org.apache.commons.math3.linear.BlockRealMatrix.<init>(BlockRealMatrix.java:107)",
          "org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(MatrixUtils.java:81)",
          "org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>(Weight.java:43)",
          "org.apache.commons.math3.fitting.CurveFitter.fit(CurveFitter.java:172)",
          "org.apache.commons.math3.fitting.CurveFitter.fit(CurveFitter.java:136)",
          "org.apache.commons.math3.fitting.PolynomialFitter.fit(PolynomialFitter.java:68)",
          "org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample(PolynomialFitterTest.java:238)"
        ],
        "error": "java.lang.OutOfMemoryError",
        "message": "Java heap space"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 15,
    "changedFiles": {
      "org/apache/commons/math3/util/FastMath.java": {
        "modified": [
          [
            313
          ],
          [
            1541
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.util.FastMathTest",
        "methodName": "testMath904",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.util.FastMathTest.testMath904(FastMathTest.java:164)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1.0> but was:<1.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 16,
    "changedFiles": {
      "org/apache/commons/math3/util/FastMath.java": {
        "modified": [
          [
            82
          ],
          [
            394
          ],
          [
            455
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.util.FastMathTest",
        "methodName": "testMath905LargePositive",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.util.FastMathTest.testMath905LargePositive(FastMathTest.java:172)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<Infinity>"
      },
      {
        "className": "org.apache.commons.math3.util.FastMathTest",
        "methodName": "testMath905LargeNegative",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative(FastMathTest.java:194)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<Infinity>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 17,
    "changedFiles": {
      "org/apache/commons/math3/dfp/Dfp.java": {
        "modified": [
          [
            1603
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.dfp.DfpTest",
        "methodName": "testMultiply",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.math3.dfp.DfpTest.test(DfpTest.java:74)",
          "org.apache.commons.math3.dfp.DfpTest.testMultiply(DfpTest.java:909)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "assersion failed Multiply #37 x = NaN flags = 1"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 18,
    "changedFiles": {
      "org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
        "modified": [
          [
            932
          ],
          [
            958
          ],
          [
            990
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest",
        "methodName": "testFitAccuracyDependsOnBoundary",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testFitAccuracyDependsOnBoundary(CMAESOptimizerTest.java:477)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<11.100000000847896> but was:<8.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 19,
    "changedFiles": {
      "org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
        "modified": [
          [
            540
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest",
        "methodName": "testBoundaryRangeTooLarge",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest$2.value(CMAESOptimizerTest.java:414)",
          "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(BaseAbstractMultivariateOptimizer.java:99)",
          "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value(CMAESOptimizer.java:958)",
          "org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize(CMAESOptimizer.java:365)",
          "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(BaseAbstractMultivariateOptimizer.java:148)",
          "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(BaseAbstractMultivariateOptimizer.java:105)",
          "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(BaseAbstractMultivariateSimpleBoundsOptimizer.java:140)",
          "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testBoundaryRangeTooLarge(CMAESOptimizerTest.java:430)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.apache.commons.math3.exception.NumberIsTooLargeException> but was<org.apache.commons.math3.exception.MathIllegalStateException>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 20,
    "changedFiles": {
      "org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
        "modified": [
          [
            921
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest",
        "methodName": "testMath864",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testMath864(CMAESOptimizerTest.java:400)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Out of bounds (0.573450883035548 > 0.5)"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 21,
    "changedFiles": {
      "org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java": {
        "modified": [
          [
            69
          ],
          [
            79
          ],
          [
            124
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest",
        "methodName": "testMath789",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789(RectangularCholeskyDecompositionTest.java:108)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<0.0180652917341963>"
      },
      {
        "className": "org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest",
        "methodName": "testFullRank",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank(RectangularCholeskyDecompositionTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 22,
    "changedFiles": {
      "org/apache/commons/math3/distribution/FDistribution.java": {
        "modified": [
          [
            275
          ]
        ]
      },
      "org/apache/commons/math3/distribution/UniformRealDistribution.java": {
        "modified": [
          [
            184
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.distribution.FDistributionTest",
        "methodName": "testIsSupportLowerBoundInclusive",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testIsSupportLowerBoundInclusive(RealDistributionAbstractTest.java:351)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<false> but was:<true>"
      },
      {
        "className": "org.apache.commons.math3.distribution.UniformRealDistributionTest",
        "methodName": "testIsSupportUpperBoundInclusive",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testIsSupportUpperBoundInclusive(RealDistributionAbstractTest.java:367)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<true> but was:<false>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 23,
    "changedFiles": {
      "org/apache/commons/math3/optimization/univariate/BrentOptimizer.java": {
        "modified": [
          [
            151
          ],
          [
            234
          ],
          [
            274
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.univariate.BrentOptimizerTest",
        "methodName": "testKeepInitIfBest",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(BrentOptimizerTest.java:221)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Best point not reported"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 24,
    "changedFiles": {
      "org/apache/commons/math3/optimization/univariate/BrentOptimizer.java": {
        "modified": [
          [
            230
          ],
          [
            267
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.univariate.BrentOptimizerTest",
        "methodName": "testMath855",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath855(BrentOptimizerTest.java:213)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Best point not reported"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 25,
    "changedFiles": {
      "org/apache/commons/math3/optimization/fitting/HarmonicFitter.java": {
        "modified": [
          [
            323
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.fitting.HarmonicFitterTest",
        "methodName": "testMath844",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math3.exception.MathIllegalStateException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 26,
    "changedFiles": {
      "org/apache/commons/math3/fraction/Fraction.java": {
        "modified": [
          [
            181
          ],
          [
            209
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.fraction.FractionTest",
        "methodName": "testIntegerOverflow",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)",
          "org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "an exception should have been thrown"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 27,
    "changedFiles": {
      "org/apache/commons/math3/fraction/Fraction.java": {
        "modified": [
          [
            597
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.fraction.FractionTest",
        "methodName": "testMath835",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math3.fraction.FractionTest.testMath835(FractionTest.java:253)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2.1691754E9> but was:<-2.125791896E9>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 28,
    "changedFiles": {
      "org/apache/commons/math3/optimization/linear/SimplexSolver.java": {
        "modified": [
          [
            119
          ],
          [
            128
          ],
          [
            138
          ],
          [
            152
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.linear.SimplexSolverTest",
        "methodName": "testMath828Cycle",
        "stackTrace": [
          "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.incrementIterationsCounter(AbstractLinearOptimizer.java:128)",
          "org.apache.commons.math3.optimization.linear.SimplexSolver.doIteration(SimplexSolver.java:165)",
          "org.apache.commons.math3.optimization.linear.SimplexSolver.doOptimize(SimplexSolver.java:227)",
          "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.optimize(AbstractLinearOptimizer.java:147)",
          "org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath828Cycle(SimplexSolverTest.java:70)"
        ],
        "error": "org.apache.commons.math3.exception.MaxCountExceededException",
        "message": "illegal state: maximal count (100) exceeded"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 29,
    "changedFiles": {
      "org/apache/commons/math3/linear/OpenMapRealVector.java": {
        "modified": [
          [
            349
          ],
          [
            374
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.linear.SparseRealVectorTest",
        "methodName": "testEbeDivideMixedTypes",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)",
          "org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeDivideMixedTypes(RealVectorAbstractTest.java:595)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "entry #0, left = 0.0, right = 0.0 expected:<NaN> but was:<0.0>"
      },
      {
        "className": "org.apache.commons.math3.linear.SparseRealVectorTest",
        "methodName": "testEbeMultiplyMixedTypes",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)",
          "org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplyMixedTypes(RealVectorAbstractTest.java:580)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>"
      },
      {
        "className": "org.apache.commons.math3.linear.SparseRealVectorTest",
        "methodName": "testEbeMultiplySameType",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.apache.commons.math3.linear.RealVectorAbstractTest.doTestEbeBinaryOperation(RealVectorAbstractTest.java:519)",
          "org.apache.commons.math3.linear.RealVectorAbstractTest.testEbeMultiplySameType(RealVectorAbstractTest.java:575)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "entry #5, left = 0.0, right = Infinity expected:<NaN> but was:<0.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 30,
    "changedFiles": {
      "org/apache/commons/math3/stat/inference/MannWhitneyUTest.java": {
        "modified": [
          [
            173
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.stat.inference.MannWhitneyUTestTest",
        "methodName": "testBigDataSet",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.stat.inference.MannWhitneyUTestTest.testBigDataSet(MannWhitneyUTestTest.java:113)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 31,
    "changedFiles": {
      "org/apache/commons/math3/util/ContinuedFraction.java": {
        "modified": [
          [
            134
          ],
          [
            143
          ],
          [
            185
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "methodName": "testMath718",
        "stackTrace": [
          "org.apache.commons.math3.util.ContinuedFraction.evaluate(ContinuedFraction.java:177)",
          "org.apache.commons.math3.special.Beta.regularizedBeta(Beta.java:154)",
          "org.apache.commons.math3.special.Beta.regularizedBeta(Beta.java:129)",
          "org.apache.commons.math3.special.Beta.regularizedBeta(Beta.java:50)",
          "org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(BinomialDistribution.java:101)",
          "org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(AbstractIntegerDistribution.java:201)",
          "org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(AbstractIntegerDistribution.java:143)",
          "org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(AbstractIntegerDistribution.java:116)",
          "org.apache.commons.math3.distribution.BinomialDistributionTest.testMath718(BinomialDistributionTest.java:140)"
        ],
        "error": "org.apache.commons.math3.exception.ConvergenceException",
        "message": "illegal state: Continued fraction diverged to NaN for value 0.5"
      },
      {
        "className": "org.apache.commons.math3.distribution.FDistributionTest",
        "methodName": "testMath785",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.apache.commons.math3.distribution.FDistributionTest.testMath785(FDistributionTest.java:156)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Failing to calculate inverse cumulative probability"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 32,
    "changedFiles": {
      "org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java": {
        "modified": [
          [
            136
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest",
        "methodName": "testIssue780",
        "stackTrace": [
          "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties(PolygonsSet.java:136)",
          "org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize(AbstractRegion.java:381)",
          "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(PolyhedronsSet.java:171)",
          "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(PolyhedronsSet.java:153)",
          "org.apache.commons.math3.geometry.partitioning.BSPTree.visit(BSPTree.java:263)",
          "org.apache.commons.math3.geometry.partitioning.BSPTree.visit(BSPTree.java:262)",
          "org.apache.commons.math3.geometry.partitioning.BSPTree.visit(BSPTree.java:262)",
          "org.apache.commons.math3.geometry.partitioning.BSPTree.visit(BSPTree.java:264)",
          "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties(PolyhedronsSet.java:118)",
          "org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize(AbstractRegion.java:381)",
          "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testIssue780(PolyhedronsSetTest.java:281)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "org.apache.commons.math3.geometry.partitioning.BoundaryAttribute cannot be cast to java.lang.Boolean"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 33,
    "changedFiles": {
      "org/apache/commons/math3/optimization/linear/SimplexTableau.java": {
        "modified": [
          [
            338
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.optimization.linear.SimplexSolverTest",
        "methodName": "testMath781",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath781(SimplexSolverTest.java:45)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 34,
    "changedFiles": {
      "org/apache/commons/math3/genetics/ListPopulation.java": {
        "modified": [
          [
            209
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.genetics.ListPopulationTest",
        "methodName": "testIterator",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: java.lang.UnsupportedOperationException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 35,
    "changedFiles": {
      "org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
        "modified": [
          [
            51
          ],
          [
            65
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math3.genetics.ElitisticListPopulationTest",
        "methodName": "testChromosomeListConstructorTooLow",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math3.exception.OutOfRangeException"
      },
      {
        "className": "org.apache.commons.math3.genetics.ElitisticListPopulationTest",
        "methodName": "testConstructorTooHigh",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math3.exception.OutOfRangeException"
      },
      {
        "className": "org.apache.commons.math3.genetics.ElitisticListPopulationTest",
        "methodName": "testConstructorTooLow",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math3.exception.OutOfRangeException"
      },
      {
        "className": "org.apache.commons.math3.genetics.ElitisticListPopulationTest",
        "methodName": "testChromosomeListConstructorTooHigh",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math3.exception.OutOfRangeException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 36,
    "changedFiles": {
      "org/apache/commons/math/fraction/BigFraction.java": {
        "modified": [
          [
            686
          ],
          [
            733
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.fraction.BigFractionTest",
        "methodName": "testFloatValueForLargeNumeratorAndDenominator",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator(BigFractionTest.java:222)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<5.0> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.fraction.BigFractionTest",
        "methodName": "testDoubleValueForLargeNumeratorAndDenominator",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.fraction.BigFractionTest.testDoubleValueForLargeNumeratorAndDenominator(BigFractionTest.java:210)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<5.0> but was:<NaN>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 37,
    "changedFiles": {
      "org/apache/commons/math/complex/Complex.java": {
        "modified": [
          [
            1018
          ],
          [
            1063
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testTanhInf",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.TestUtils.assertSame(TestUtils.java:77)",
          "org.apache.commons.math.TestUtils.assertSame(TestUtils.java:85)",
          "org.apache.commons.math.complex.ComplexTest.testTanhInf(ComplexTest.java:1054)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.0> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testTan",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.TestUtils.assertEquals(TestUtils.java:95)",
          "org.apache.commons.math.complex.ComplexTest.testTan(ComplexTest.java:1002)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.0> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testTanh",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.TestUtils.assertEquals(TestUtils.java:94)",
          "org.apache.commons.math.complex.ComplexTest.testTanh(ComplexTest.java:1039)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.0> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testTanInf",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.TestUtils.assertSame(TestUtils.java:77)",
          "org.apache.commons.math.TestUtils.assertSame(TestUtils.java:86)",
          "org.apache.commons.math.complex.ComplexTest.testTanInf(ComplexTest.java:1015)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.0> but was:<NaN>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 38,
    "changedFiles": {
      "org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
        "modified": [
          [
            1660
          ],
          [
            1752
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest",
        "methodName": "testConstrainedRosenWithMoreInterpolationPoints",
        "stackTrace": [
          "org.apache.commons.math.optimization.direct.BOBYQAOptimizer.prelim(BOBYQAOptimizer.java:1752)",
          "org.apache.commons.math.optimization.direct.BOBYQAOptimizer.bobyqb(BOBYQAOptimizer.java:407)",
          "org.apache.commons.math.optimization.direct.BOBYQAOptimizer.bobyqa(BOBYQAOptimizer.java:332)",
          "org.apache.commons.math.optimization.direct.BOBYQAOptimizer.doOptimize(BOBYQAOptimizer.java:244)",
          "org.apache.commons.math.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(BaseAbstractMultivariateOptimizer.java:125)",
          "org.apache.commons.math.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(BaseAbstractMultivariateSimpleBoundsOptimizer.java:138)",
          "org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest.doTest(BOBYQAOptimizerTest.java:327)",
          "org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest.testConstrainedRosenWithMoreInterpolationPoints(BOBYQAOptimizerTest.java:255)"
        ],
        "error": "org.apache.commons.math.optimization.direct.BOBYQAOptimizer$PathIsExploredException",
        "message": "If this exception is thrown, just remove it from the code prelim (at line 1752)"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 39,
    "changedFiles": {
      "org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
        "modified": [
          [
            250
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest",
        "methodName": "testTooLargeFirstStep",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest$3.computeDerivatives(DormandPrince853IntegratorTest.java:194)",
          "org.apache.commons.math.ode.ExpandableStatefulODE.computeDerivatives(ExpandableStatefulODE.java:115)",
          "org.apache.commons.math.ode.AbstractIntegrator.computeDerivatives(AbstractIntegrator.java:265)",
          "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:262)",
          "org.apache.commons.math.ode.AbstractIntegrator.integrate(AbstractIntegrator.java:228)",
          "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testTooLargeFirstStep(DormandPrince853IntegratorTest.java:201)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 40,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java": {
        "modified": [
          [
            235
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest",
        "methodName": "testIssue716",
        "stackTrace": [
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.incrementEvaluationCount(BaseAbstractUnivariateRealSolver.java:296)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.computeObjectiveValue(BaseAbstractUnivariateRealSolver.java:153)",
          "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.doSolve(BracketingNthOrderBrentSolver.java:283)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:190)",
          "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.solve(BracketingNthOrderBrentSolver.java:394)",
          "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest.testIssue716(BracketingNthOrderBrentSolverTest.java:93)"
        ],
        "error": "org.apache.commons.math.exception.TooManyEvaluationsException",
        "message": "illegal state: maximal count (100) exceeded: evaluations"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 41,
    "changedFiles": {
      "org/apache/commons/math/stat/descriptive/moment/Variance.java": {
        "modified": [
          [
            520
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.descriptive.moment.VarianceTest",
        "methodName": "testEvaluateArraySegmentWeighted",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluateArraySegmentWeighted(UnivariateStatisticAbstractTest.java:130)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.6644508338125354> but was:<0.31909161062727365>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 42,
    "changedFiles": {
      "org/apache/commons/math/optimization/linear/SimplexTableau.java": {
        "modified": [
          [
            410
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
        "methodName": "testMath713NegativeVariable",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath713NegativeVariable(SimplexSolverTest.java:43)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 43,
    "changedFiles": {
      "org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
        "modified": [
          [
            158
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest",
        "methodName": "testOverrideMeanWithMathClass",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(SummaryStatisticsTest.java:335)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2.5> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest",
        "methodName": "testOverrideGeoMeanWithMathClass",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(SummaryStatisticsTest.java:346)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2.213363839400643> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest",
        "methodName": "testOverrideVarianceWithMathClass",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideVarianceWithMathClass(SummaryStatisticsTest.java:324)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.25> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest",
        "methodName": "testOverrideMeanWithMathClass",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass(SummaryStatisticsTest.java:335)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2.5> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest",
        "methodName": "testOverrideGeoMeanWithMathClass",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(SummaryStatisticsTest.java:346)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2.213363839400643> but was:<NaN>"
      },
      {
        "className": "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest",
        "methodName": "testOverrideVarianceWithMathClass",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideVarianceWithMathClass(SummaryStatisticsTest.java:324)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.25> but was:<NaN>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 44,
    "changedFiles": {
      "org/apache/commons/math/ode/AbstractIntegrator.java": {
        "modified": [
          [
            280
          ],
          [
            334
          ],
          [
            343
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.ode.events.EventStateTest",
        "methodName": "testIssue695",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.apache.commons.math.ode.events.EventStateTest$ResettingEvent.g(EventStateTest.java:120)",
          "org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:214)",
          "org.apache.commons.math.ode.AbstractIntegrator.acceptStep(AbstractIntegrator.java:302)",
          "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(EmbeddedRungeKuttaIntegrator.java:296)",
          "org.apache.commons.math.ode.AbstractIntegrator.integrate(AbstractIntegrator.java:213)",
          "org.apache.commons.math.ode.events.EventStateTest.testIssue695(EventStateTest.java:100)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "going backard in time! (7.796578226186635 < 10.99)"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 45,
    "changedFiles": {
      "org/apache/commons/math/linear/OpenMapRealMatrix.java": {
        "modified": [
          [
            50
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.OpenMapRealMatrixTest",
        "methodName": "testMath679",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math.exception.NumberIsTooLargeException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 46,
    "changedFiles": {
      "org/apache/commons/math/complex/Complex.java": {
        "modified": [
          [
            260
          ],
          [
            297
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testAtanI",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:577)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testDivideZero",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:233)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<(Infinity, Infinity)> but was:<(NaN, NaN)>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 47,
    "changedFiles": {
      "org/apache/commons/math/complex/Complex.java": {
        "modified": [
          [
            82
          ],
          [
            105
          ],
          [
            256
          ],
          [
            293
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testAtanI",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.complex.ComplexTest.testAtanI(ComplexTest.java:579)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testDivideZero",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:144)",
          "org.apache.commons.math.complex.ComplexTest.testDivideZero(ComplexTest.java:232)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<(NaN, NaN)> but was:<(Infinity, Infinity)>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 48,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BaseSecantSolver.java": {
        "modified": [
          [
            189
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest",
        "methodName": "testIssue631",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.incrementEvaluationCount(BaseAbstractUnivariateRealSolver.java:296)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.computeObjectiveValue(BaseAbstractUnivariateRealSolver.java:153)",
          "org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve(BaseSecantSolver.java:162)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:190)",
          "org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:118)",
          "org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:125)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:195)",
          "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631(RegulaFalsiSolverTest.java:54)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.apache.commons.math.exception.ConvergenceException> but was<org.apache.commons.math.exception.TooManyEvaluationsException>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 49,
    "changedFiles": {
      "org/apache/commons/math/linear/OpenMapRealVector.java": {
        "modified": [
          [
            345
          ],
          [
            358
          ],
          [
            370
          ],
          [
            383
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.SparseRealVectorTest",
        "methodName": "testConcurrentModification",
        "stackTrace": [
          "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(MathRuntimeException.java:373)",
          "org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.advance(OpenIntToDoubleHashMap.java:564)",
          "org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply(OpenMapRealVector.java:372)",
          "org.apache.commons.math.linear.OpenMapRealVector.ebeMultiply(OpenMapRealVector.java:33)",
          "org.apache.commons.math.linear.SparseRealVectorTest.testConcurrentModification(SparseRealVectorTest.java:1021)"
        ],
        "error": "org.apache.commons.math.MathRuntimeException$6",
        "message": "map has been modified while iterating"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 50,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BaseSecantSolver.java": {
        "modified": [
          [
            187
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest",
        "methodName": "testIssue631",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math.exception.TooManyEvaluationsException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 51,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BaseSecantSolver.java": {
        "modified": [
          [
            185
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest",
        "methodName": "testIssue631",
        "stackTrace": [
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.incrementEvaluationCount(BaseAbstractUnivariateRealSolver.java:296)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.computeObjectiveValue(BaseAbstractUnivariateRealSolver.java:153)",
          "org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve(BaseSecantSolver.java:161)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:190)",
          "org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:117)",
          "org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:124)",
          "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:195)",
          "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631(RegulaFalsiSolverTest.java:53)"
        ],
        "error": "org.apache.commons.math.exception.TooManyEvaluationsException",
        "message": "illegal state: maximal count (3,624) exceeded: evaluations"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 52,
    "changedFiles": {
      "org/apache/commons/math/geometry/euclidean/threed/Rotation.java": {
        "modified": [
          [
            344
          ],
          [
            353
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.geometry.euclidean.threed.RotationTest",
        "methodName": "testIssue639",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.geometry.euclidean.threed.RotationTest.testIssue639(RotationTest.java:488)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.6228370359608201> but was:<NaN>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 53,
    "changedFiles": {
      "org/apache/commons/math/complex/Complex.java": {
        "modified": [
          [
            153
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testAddNaN",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.complex.ComplexTest.testAddNaN(ComplexTest.java:116)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 54,
    "changedFiles": {
      "org/apache/commons/math/dfp/Dfp.java": {
        "modified": [
          [
            273
          ],
          [
            2319
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.dfp.DfpTest",
        "methodName": "testIssue567",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.dfp.DfpTest.testIssue567(DfpTest.java:1512)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<-Infinity>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 55,
    "changedFiles": {
      "org/apache/commons/math/geometry/Vector3D.java": {
        "modified": [
          [
            459
          ],
          [
            470
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.geometry.Vector3DTest",
        "methodName": "testCrossProductCancellation",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.geometry.Vector3DTest.checkVector(Vector3DTest.java:242)",
          "org.apache.commons.math.geometry.Vector3DTest.testCrossProductCancellation(Vector3DTest.java:159)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.0> but was:<0.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 56,
    "changedFiles": {
      "org/apache/commons/math/util/MultidimensionalCounter.java": {
        "modified": [
          [
            237
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.MultidimensionalCounterTest",
        "methodName": "testIterationConsistency",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:118)",
          "org.junit.Assert.assertEquals(Assert.java:555)",
          "org.apache.commons.math.util.MultidimensionalCounterTest.testIterationConsistency(MultidimensionalCounterTest.java:172)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Wrong multidimensional index for [3][2] expected:<3> but was:<2>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 57,
    "changedFiles": {
      "org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java": {
        "modified": [
          [
            175
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest",
        "methodName": "testSmallDistances",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest.testSmallDistances(KMeansPlusPlusClustererTest.java:249)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 58,
    "changedFiles": {
      "org/apache/commons/math/optimization/fitting/GaussianFitter.java": {
        "modified": [
          [
            121
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.fitting.GaussianFitterTest",
        "methodName": "testMath519",
        "stackTrace": [
          "org.apache.commons.math.analysis.function.Gaussian$Parametric.validateParameters(Gaussian.java:183)",
          "org.apache.commons.math.analysis.function.Gaussian$Parametric.value(Gaussian.java:128)",
          "org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(CurveFitter.java:203)",
          "org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.computeObjectiveValue(BaseAbstractVectorialOptimizer.java:107)",
          "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost(AbstractLeastSquaresOptimizer.java:128)",
          "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.doOptimize(LevenbergMarquardtOptimizer.java:350)",
          "org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.optimize(BaseAbstractVectorialOptimizer.java:141)",
          "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.optimize(AbstractLeastSquaresOptimizer.java:253)",
          "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.optimize(AbstractLeastSquaresOptimizer.java:43)",
          "org.apache.commons.math.optimization.fitting.CurveFitter.fit(CurveFitter.java:160)",
          "org.apache.commons.math.optimization.fitting.CurveFitter.fit(CurveFitter.java:126)",
          "org.apache.commons.math.optimization.fitting.GaussianFitter.fit(GaussianFitter.java:121)",
          "org.apache.commons.math.optimization.fitting.GaussianFitterTest.testMath519(GaussianFitterTest.java:336)"
        ],
        "error": "org.apache.commons.math.exception.NotStrictlyPositiveException",
        "message": "-1.277 is smaller than, or equal to, the minimum (0)"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 59,
    "changedFiles": {
      "org/apache/commons/math/util/FastMath.java": {
        "modified": [
          [
            3482
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.FastMathTest",
        "methodName": "testMinMaxFloat",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.apache.commons.math.util.FastMathTest.testMinMaxFloat(FastMathTest.java:103)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "max(50.0, -50.0) expected:<50.0> but was:<-50.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 60,
    "changedFiles": {
      "org/apache/commons/math/distribution/NormalDistributionImpl.java": {
        "modified": [
          [
            126
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.distribution.NormalDistributionTest",
        "methodName": "testExtremeValues",
        "stackTrace": [
          "org.apache.commons.math.util.ContinuedFraction.evaluate(ContinuedFraction.java:186)",
          "org.apache.commons.math.special.Gamma.regularizedGammaQ(Gamma.java:266)",
          "org.apache.commons.math.special.Gamma.regularizedGammaP(Gamma.java:173)",
          "org.apache.commons.math.special.Erf.erf(Erf.java:51)",
          "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(NormalDistributionImpl.java:127)",
          "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(NormalDistributionTest.java:174)"
        ],
        "error": "org.apache.commons.math.ConvergenceException",
        "message": "Continued fraction diverged to NaN for value \u221e"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 61,
    "changedFiles": {
      "org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
        "modified": [
          [
            22
          ],
          [
            94
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.distribution.PoissonDistributionTest",
        "methodName": "testMean",
        "stackTrace": [
          "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:387)",
          "org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:94)",
          "org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:80)",
          "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(PoissonDistributionTest.java:140)"
        ],
        "error": "org.apache.commons.math.MathRuntimeException$4",
        "message": "the Poisson mean must be positive (-1)"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 62,
    "changedFiles": {
      "org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
        "modified": [
          [
            146
          ],
          [
            160
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest",
        "methodName": "testQuinticMin",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest.testQuinticMin(MultiStartUnivariateRealOptimizerTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0.2719561293> but was:<-0.2719561278056452>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 63,
    "changedFiles": {
      "org/apache/commons/math/util/MathUtils.java": {
        "modified": [
          [
            417
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.MathUtilsTest",
        "methodName": "testArrayEquals",
        "stackTrace": [
          "org.apache.commons.math.util.MathUtilsTest.testArrayEquals(MathUtilsTest.java:456)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 64,
    "changedFiles": {
      "org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
        "modified": [
          [
            258
          ],
          [
            270
          ],
          [
            278
          ],
          [
            316
          ],
          [
            324
          ],
          [
            344
          ],
          [
            365
          ],
          [
            421
          ],
          [
            434
          ],
          [
            442
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.general.MinpackTest",
        "methodName": "testMinpackJennrichSampson",
        "stackTrace": [
          "org.apache.commons.math.optimization.general.MinpackTest$MinpackFunction.checkTheoreticalMinParams(MinpackTest.java:576)",
          "org.apache.commons.math.optimization.general.MinpackTest.minpackTest(MinpackTest.java:504)",
          "org.apache.commons.math.optimization.general.MinpackTest.testMinpackJennrichSampson(MinpackTest.java:325)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.2578199266368004> but was:<0.2578330049004441>"
      },
      {
        "className": "org.apache.commons.math.optimization.general.MinpackTest",
        "methodName": "testMinpackFreudensteinRoth",
        "stackTrace": [
          "org.apache.commons.math.optimization.general.MinpackTest$MinpackFunction.checkTheoreticalMinParams(MinpackTest.java:576)",
          "org.apache.commons.math.optimization.general.MinpackTest.minpackTest(MinpackTest.java:504)",
          "org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(MinpackTest.java:152)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<11.41300466147456> but was:<11.4121122022341>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 65,
    "changedFiles": {
      "org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
        "modified": [
          [
            240
          ],
          [
            258
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest",
        "methodName": "testCircleFitting",
        "stackTrace": [
          "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFitting(LevenbergMarquardtOptimizerTest.java:442)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.004> but was:<0.0019737107108948474>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 66,
    "changedFiles": {
      "org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
        "modified": [
          [
            44
          ],
          [
            57
          ],
          [
            94
          ],
          [
            119
          ],
          [
            200
          ],
          [
            238
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest",
        "methodName": "testQuinticMin",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(MultiStartUnivariateRealOptimizerTest.java:87)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0.2719561270319131> but was:<-0.2719561299044896>"
      },
      {
        "className": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest",
        "methodName": "testSinMin",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testSinMin(MultiStartUnivariateRealOptimizerTest.java:52)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math.optimization.univariate.BrentOptimizerTest",
        "methodName": "testQuinticMinStatistics",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.univariate.BrentOptimizerTest.testQuinticMinStatistics(BrentOptimizerTest.java:114)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1880.5> but was:<18.0>"
      },
      {
        "className": "org.apache.commons.math.optimization.univariate.BrentOptimizerTest",
        "methodName": "testSinMin",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.univariate.BrentOptimizerTest.testSinMin(BrentOptimizerTest.java:54)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<4.71238898038469> but was:<4.71238897901431>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 67,
    "changedFiles": {
      "org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java": {
        "modified": [
          [
            92
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest",
        "methodName": "testQuinticMin",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testQuinticMin(MultiStartUnivariateRealOptimizerTest.java:86)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0.27195612846834> but was:<-0.27194301946870036>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 68,
    "changedFiles": {
      "org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
        "modified": [
          [
            166
          ],
          [
            247
          ],
          [
            303
          ],
          [
            345
          ],
          [
            413
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.general.MinpackTest",
        "methodName": "testMinpackJennrichSampson",
        "stackTrace": [
          "org.apache.commons.math.optimization.general.MinpackTest$MinpackFunction.checkTheoreticalMinParams(MinpackTest.java:575)",
          "org.apache.commons.math.optimization.general.MinpackTest.minpackTest(MinpackTest.java:503)",
          "org.apache.commons.math.optimization.general.MinpackTest.testMinpackJennrichSampson(MinpackTest.java:325)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.2578330049> but was:<0.257819926636807>"
      },
      {
        "className": "org.apache.commons.math.optimization.general.MinpackTest",
        "methodName": "testMinpackFreudensteinRoth",
        "stackTrace": [
          "org.apache.commons.math.optimization.general.MinpackTest$MinpackFunction.checkTheoreticalMinParams(MinpackTest.java:575)",
          "org.apache.commons.math.optimization.general.MinpackTest.minpackTest(MinpackTest.java:503)",
          "org.apache.commons.math.optimization.general.MinpackTest.testMinpackFreudensteinRoth(MinpackTest.java:152)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<11.4121122022341> but was:<11.41300466147456>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 69,
    "changedFiles": {
      "org/apache/commons/math/stat/correlation/PearsonsCorrelation.java": {
        "modified": [
          [
            171
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.correlation.PearsonsCorrelationTest",
        "methodName": "testPValueNearZero",
        "stackTrace": [
          "org.apache.commons.math.stat.correlation.PearsonsCorrelationTest.testPValueNearZero(PearsonsCorrelationTest.java:181)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest",
        "methodName": "testPValueNearZero",
        "stackTrace": [
          "org.apache.commons.math.stat.correlation.PearsonsCorrelationTest.testPValueNearZero(PearsonsCorrelationTest.java:181)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 70,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BisectionSolver.java": {
        "modified": [
          [
            72
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "methodName": "testMath369",
        "stackTrace": [
          "org.apache.commons.math.analysis.solvers.BisectionSolver.solve(BisectionSolver.java:88)",
          "org.apache.commons.math.analysis.solvers.BisectionSolver.solve(BisectionSolver.java:66)",
          "org.apache.commons.math.analysis.solvers.BisectionSolver.solve(BisectionSolver.java:72)",
          "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testMath369(BisectionSolverTest.java:101)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 71,
    "changedFiles": {
      "org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
        "modified": [
          [
            300
          ]
        ]
      },
      "org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
        "modified": [
          [
            180
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest",
        "methodName": "testMissedEndEvent",
        "stackTrace": [
          "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testMissedEndEvent(ClassicalRungeKuttaIntegratorTest.java:70)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.8782503799999986E9> but was:<1.878250439999994E9>"
      },
      {
        "className": "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest",
        "methodName": "testMissedEndEvent",
        "stackTrace": [
          "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMissedEndEvent(DormandPrince853IntegratorTest.java:72)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.8782503799999986E9> but was:<1.878250479999994E9>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 72,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BrentSolver.java": {
        "modified": [
          [
            115
          ],
          [
            127
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.BrentSolverTest",
        "methodName": "testRootEndpoints",
        "stackTrace": [
          "org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(BrentSolverTest.java:317)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<3.141592653589793> but was:<1.2246467991473532E-16>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 73,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/BrentSolver.java": {
        "modified": [
          [
            136
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.solvers.BrentSolverTest",
        "methodName": "testBadEndpoints",
        "stackTrace": [
          "org.apache.commons.math.analysis.solvers.BrentSolverTest.testBadEndpoints(BrentSolverTest.java:334)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expecting IllegalArgumentException - non-bracketing"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 74,
    "changedFiles": {
      "org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
        "modified": [
          [
            245
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest",
        "methodName": "polynomial",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial(AdamsMoultonIntegratorTest.java:150)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 75,
    "changedFiles": {
      "org/apache/commons/math/stat/Frequency.java": {
        "modified": [
          [
            303
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.FrequencyTest",
        "methodName": "testPcts",
        "stackTrace": [
          "org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "three (Object) pct expected:<0.5> but was:<1.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 76,
    "changedFiles": {
      "org/apache/commons/math/linear/SingularValueDecompositionImpl.java": {
        "modified": [
          [
            162
          ],
          [
            248
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.SingularValueSolverTest",
        "methodName": "testMath320A",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.linear.SingularValueSolverTest.testMath320A(SingularValueSolverTest.java:188)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<0.09336767546650937>"
      },
      {
        "className": "org.apache.commons.math.linear.SingularValueSolverTest",
        "methodName": "testMath320B",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.linear.SingularValueSolverTest.testMath320B(SingularValueSolverTest.java:219)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<3.2>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 77,
    "changedFiles": {
      "org/apache/commons/math/linear/ArrayRealVector.java": {
        "modified": [
          [
            721
          ]
        ]
      },
      "org/apache/commons/math/linear/OpenMapRealVector.java": {
        "modified": [
          [
            498
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.ArrayRealVectorTest",
        "methodName": "testBasicFunctions",
        "stackTrace": [
          "org.apache.commons.math.linear.ArrayRealVectorTest.testBasicFunctions(ArrayRealVectorTest.java:1098)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compare values   expected:<6.0> but was:<128.0>"
      },
      {
        "className": "org.apache.commons.math.linear.SparseRealVectorTest",
        "methodName": "testBasicFunctions",
        "stackTrace": [
          "org.apache.commons.math.linear.SparseRealVectorTest.testBasicFunctions(SparseRealVectorTest.java:968)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "compare values   expected:<6.0> but was:<-3.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 78,
    "changedFiles": {
      "org/apache/commons/math/ode/events/EventState.java": {
        "modified": [
          [
            191
          ],
          [
            198
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.ode.events.EventStateTest",
        "methodName": "closeEvents",
        "stackTrace": [
          "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:305)",
          "org.apache.commons.math.analysis.solvers.BrentSolver.solve(BrentSolver.java:178)",
          "org.apache.commons.math.ode.events.EventState.evaluateStep(EventState.java:218)",
          "org.apache.commons.math.ode.events.EventStateTest.closeEvents(EventStateTest.java:66)"
        ],
        "error": "org.apache.commons.math.MathRuntimeException$4",
        "message": "function values at endpoints do not have different signs.  Endpoints: [89.999, 153.1], Values: [-0.066, -1,142.11]"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 79,
    "changedFiles": {
      "org/apache/commons/math/util/MathUtils.java": {
        "modified": [
          [
            1624
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest",
        "methodName": "testPerformClusterAnalysisDegenerate",
        "stackTrace": [
          "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(KMeansPlusPlusClusterer.java:91)",
          "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer.cluster(KMeansPlusPlusClusterer.java:57)",
          "org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest.testPerformClusterAnalysisDegenerate(KMeansPlusPlusClustererTest.java:109)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 80,
    "changedFiles": {
      "org/apache/commons/math/linear/EigenDecompositionImpl.java": {
        "modified": [
          [
            1135
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.EigenDecompositionImplTest",
        "methodName": "testMathpbx02",
        "stackTrace": [
          "org.apache.commons.math.linear.EigenDecompositionImplTest.testMathpbx02(EigenDecompositionImplTest.java:181)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<16828.208208485466> but was:<20654.74511575945>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 81,
    "changedFiles": {
      "org/apache/commons/math/linear/EigenDecompositionImpl.java": {
        "modified": [
          [
            603
          ],
          [
            905
          ],
          [
            1543
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.EigenDecompositionImplTest",
        "methodName": "testMath308",
        "stackTrace": [
          "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(EigenDecompositionImpl.java:1544)",
          "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(EigenDecompositionImpl.java:1071)",
          "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(EigenDecompositionImpl.java:893)",
          "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:657)",
          "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:246)",
          "org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:205)",
          "org.apache.commons.math.linear.EigenDecompositionImplTest.testMath308(EigenDecompositionImplTest.java:134)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "-1"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 82,
    "changedFiles": {
      "org/apache/commons/math/optimization/linear/SimplexSolver.java": {
        "modified": [
          [
            82
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
        "methodName": "testMath288",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath288(SimplexSolverTest.java:73)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10.0> but was:<11.5>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 83,
    "changedFiles": {
      "org/apache/commons/math/optimization/linear/SimplexTableau.java": {
        "modified": [
          [
            292
          ],
          [
            341
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
        "methodName": "testMath286",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath286(SimplexSolverTest.java:58)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<6.9> but was:<4.6000000000000005>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 84,
    "changedFiles": {
      "org/apache/commons/math/optimization/direct/MultiDirectional.java": {
        "modified": [
          [
            64
          ],
          [
            92
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.direct.MultiDirectionalTest",
        "methodName": "testMinimizeMaximize",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMinimizeMaximize(MultiDirectionalTest.java:103)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.apache.commons.math.optimization.direct.MultiDirectionalTest",
        "methodName": "testMath283",
        "stackTrace": [
          "org.apache.commons.math.optimization.direct.DirectSearchOptimizer.incrementIterationsCounter(DirectSearchOptimizer.java:320)",
          "org.apache.commons.math.optimization.direct.MultiDirectional.iterateSimplex(MultiDirectional.java:66)",
          "org.apache.commons.math.optimization.direct.DirectSearchOptimizer.optimize(DirectSearchOptimizer.java:307)",
          "org.apache.commons.math.optimization.direct.MultiDirectionalTest.testMath283(MultiDirectionalTest.java:203)"
        ],
        "error": "org.apache.commons.math.optimization.OptimizationException",
        "message": "org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (100) exceeded"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 85,
    "changedFiles": {
      "org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
        "modified": [
          [
            198
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.distribution.NormalDistributionTest",
        "methodName": "testMath280",
        "stackTrace": [
          "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:104)",
          "org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(NormalDistributionImpl.java:162)",
          "org.apache.commons.math.distribution.NormalDistributionTest.testMath280(NormalDistributionTest.java:169)"
        ],
        "error": "org.apache.commons.math.MathException",
        "message": "org.apache.commons.math.ConvergenceException: number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 86,
    "changedFiles": {
      "org/apache/commons/math/linear/CholeskyDecompositionImpl.java": {
        "modified": [
          [
            114
          ],
          [
            137
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.CholeskyDecompositionImplTest",
        "methodName": "testMath274",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math.linear.NotPositiveDefiniteMatrixException"
      },
      {
        "className": "org.apache.commons.math.linear.CholeskyDecompositionImplTest",
        "methodName": "testNotPositiveDefinite",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:32)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected exception: org.apache.commons.math.linear.NotPositiveDefiniteMatrixException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 87,
    "changedFiles": {
      "org/apache/commons/math/optimization/linear/SimplexTableau.java": {
        "modified": [
          [
            275
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
        "methodName": "testSingleVariableAndConstraint",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.linear.SimplexSolverTest.testSingleVariableAndConstraint(SimplexSolverTest.java:75)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<10.0> but was:<0.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 88,
    "changedFiles": {
      "org/apache/commons/math/optimization/linear/SimplexTableau.java": {
        "modified": [
          [
            329
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.optimization.linear.SimplexSolverTest",
        "methodName": "testMath272",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotEquals(Assert.java:743)",
          "org.junit.Assert.assertEquals(Assert.java:494)",
          "org.junit.Assert.assertEquals(Assert.java:592)",
          "org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(SimplexSolverTest.java:47)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1.0> but was:<0.0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 89,
    "changedFiles": {
      "org/apache/commons/math/stat/Frequency.java": {
        "modified": [
          [
            110
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.FrequencyTest",
        "methodName": "testAddNonComparable",
        "stackTrace": [
          "org.apache.commons.math.stat.Frequency.addValue(Frequency.java:110)",
          "org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(FrequencyTest.java:195)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "java.lang.Object cannot be cast to java.lang.Comparable"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 90,
    "changedFiles": {
      "org/apache/commons/math/stat/Frequency.java": {
        "modified": [
          [
            110
          ],
          [
            121
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.FrequencyTest",
        "methodName": "testAddNonComparable",
        "stackTrace": [
          "org.apache.commons.math.stat.Frequency.addValue(Frequency.java:134)",
          "org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(FrequencyTest.java:195)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Value not comparable to existing values."
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 91,
    "changedFiles": {
      "org/apache/commons/math/fraction/Fraction.java": {
        "modified": [
          [
            259
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.fraction.FractionTest",
        "methodName": "testCompareTo",
        "stackTrace": [
          "org.apache.commons.math.fraction.FractionTest.testCompareTo(FractionTest.java:178)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-1> but was:<0>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 92,
    "changedFiles": {
      "org/apache/commons/math/util/MathUtils.java": {
        "modified": [
          [
            184
          ],
          [
            234
          ],
          [
            277
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.MathUtilsTest",
        "methodName": "testBinomialCoefficientLarge",
        "stackTrace": [
          "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientLarge(MathUtilsTest.java:195)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "48,22 expected:<27385657281648> but was:<27385657281647>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 93,
    "changedFiles": {
      "org/apache/commons/math/util/MathUtils.java": {
        "modified": [
          [
            345
          ],
          [
            377
          ],
          [
            397
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.MathUtilsTest",
        "methodName": "testFactorial",
        "stackTrace": [
          "org.apache.commons.math.util.MathUtilsTest.testFactorial(MathUtilsTest.java:237)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "17!  expected:<3.55687428096E14> but was:<3.55687428096001E14>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 94,
    "changedFiles": {
      "org/apache/commons/math/util/MathUtils.java": {
        "modified": [
          [
            412
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.MathUtilsTest",
        "methodName": "testGcd",
        "stackTrace": [
          "org.apache.commons.math.util.MathUtilsTest.testGcd(MathUtilsTest.java:295)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<98304> but was:<3440640>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 95,
    "changedFiles": {
      "org/apache/commons/math/distribution/FDistributionImpl.java": {
        "modified": [
          [
            144
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.distribution.FDistributionTest",
        "methodName": "testSmallDegreesOfFreedom",
        "stackTrace": [
          "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:179)",
          "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:128)",
          "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:84)",
          "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(FDistributionImpl.java:106)",
          "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(FDistributionTest.java:114)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid endpoint parameters:  lowerBound=0.0 initial=-1.0 upperBound=1.7976931348623157E308"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 96,
    "changedFiles": {
      "org/apache/commons/math/complex/Complex.java": {
        "modified": [
          [
            258
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.complex.ComplexTest",
        "methodName": "testMath221",
        "stackTrace": [
          "org.apache.commons.math.complex.ComplexTest.testMath221(ComplexTest.java:696)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<org.apache.commons.math.complex.Complex@98b00000> but was:<org.apache.commons.math.complex.Complex@18b00000>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 97,
    "changedFiles": {
      "org/apache/commons/math/analysis/BrentSolver.java": {
        "modified": [
          [
            138
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.analysis.BrentSolverTest",
        "methodName": "testRootEndpoints",
        "stackTrace": [
          "org.apache.commons.math.analysis.BrentSolver.solve(BrentSolver.java:141)",
          "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(BrentSolverTest.java:279)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Function values at endpoints do not have different signs.  Endpoints: [3.0,3.141592653589793]  Values: [0.1411200080598672,1.2246467991473532E-16]"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 98,
    "changedFiles": {
      "org/apache/commons/math/linear/BigMatrixImpl.java": {
        "modified": [
          [
            991
          ]
        ]
      },
      "org/apache/commons/math/linear/RealMatrixImpl.java": {
        "modified": [
          [
            779
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.linear.BigMatrixImplTest",
        "methodName": "testMath209",
        "stackTrace": [
          "org.apache.commons.math.linear.BigMatrixImpl.operate(BigMatrixImpl.java:997)",
          "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(BigMatrixImplTest.java:446)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "2"
      },
      {
        "className": "org.apache.commons.math.linear.RealMatrixImplTest",
        "methodName": "testMath209",
        "stackTrace": [
          "org.apache.commons.math.linear.RealMatrixImpl.operate(RealMatrixImpl.java:786)",
          "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(RealMatrixImplTest.java:351)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "2"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 99,
    "changedFiles": {
      "org/apache/commons/math/util/MathUtils.java": {
        "modified": [
          [
            543
          ],
          [
            714
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.util.MathUtilsTest",
        "methodName": "testGcd",
        "stackTrace": [
          "org.apache.commons.math.util.MathUtilsTest.testGcd(MathUtilsTest.java:437)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expecting ArithmeticException"
      },
      {
        "className": "org.apache.commons.math.util.MathUtilsTest",
        "methodName": "testLcm",
        "stackTrace": [
          "org.apache.commons.math.util.MathUtilsTest.testLcm(MathUtilsTest.java:590)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expecting ArithmeticException"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 100,
    "changedFiles": {
      "org/apache/commons/math/estimation/AbstractEstimator.java": {
        "modified": [
          [
            166
          ],
          [
            202
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.estimation.GaussNewtonEstimatorTest",
        "methodName": "testBoundParameters",
        "stackTrace": [
          "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)",
          "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "6"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 101,
    "changedFiles": {
      "org/apache/commons/math/complex/ComplexFormat.java": {
        "modified": [
          [
            377
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.complex.ComplexFormatTest",
        "methodName": "testForgottenImaginaryCharacter",
        "stackTrace": [
          "java.lang.String.substring(String.java:1963)",
          "org.apache.commons.math.complex.ComplexFormat.parse(ComplexFormat.java:377)",
          "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(ComplexFormatAbstractTest.java:355)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 6"
      },
      {
        "className": "org.apache.commons.math.complex.FrenchComplexFormatTest",
        "methodName": "testForgottenImaginaryCharacter",
        "stackTrace": [
          "java.lang.String.substring(String.java:1963)",
          "org.apache.commons.math.complex.ComplexFormat.parse(ComplexFormat.java:377)",
          "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(ComplexFormatAbstractTest.java:355)"
        ],
        "error": "java.lang.StringIndexOutOfBoundsException",
        "message": "String index out of range: 6"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 102,
    "changedFiles": {
      "org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
        "modified": [
          [
            74
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.inference.ChiSquareFactoryTest",
        "methodName": "testChiSquareLargeTestStatistic",
        "stackTrace": [
          "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(ChiSquareTestTest.java:183)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "chi-square test statistic expected:<114875.90421929007> but was:<3624883.3429077636>"
      },
      {
        "className": "org.apache.commons.math.stat.inference.ChiSquareFactoryTest",
        "methodName": "testChiSquare",
        "stackTrace": [
          "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(ChiSquareTestTest.java:60)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "chi-square test statistic expected:<9.023307936427388> but was:<16.413107036160778>"
      },
      {
        "className": "org.apache.commons.math.stat.inference.ChiSquareTestTest",
        "methodName": "testChiSquareLargeTestStatistic",
        "stackTrace": [
          "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(ChiSquareTestTest.java:183)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "chi-square test statistic expected:<114875.90421929007> but was:<3624883.3429077636>"
      },
      {
        "className": "org.apache.commons.math.stat.inference.ChiSquareTestTest",
        "methodName": "testChiSquare",
        "stackTrace": [
          "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(ChiSquareTestTest.java:60)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "chi-square test statistic expected:<9.023307936427388> but was:<16.413107036160778>"
      },
      {
        "className": "org.apache.commons.math.stat.inference.TestUtilsTest",
        "methodName": "testChiSquareLargeTestStatistic",
        "stackTrace": [
          "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(TestUtilsTest.java:181)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "chi-square test statistic expected:<114875.90421929007> but was:<3624883.3429077636>"
      },
      {
        "className": "org.apache.commons.math.stat.inference.TestUtilsTest",
        "methodName": "testChiSquare",
        "stackTrace": [
          "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(TestUtilsTest.java:58)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "chi-square test statistic expected:<9.023307936427388> but was:<16.413107036160778>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 103,
    "changedFiles": {
      "org/apache/commons/math/distribution/NormalDistributionImpl.java": {
        "modified": [
          [
            109
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.distribution.NormalDistributionTest",
        "methodName": "testExtremeValues",
        "stackTrace": [
          "org.apache.commons.math.special.Gamma.regularizedGammaP(Gamma.java:180)",
          "org.apache.commons.math.special.Erf.erf(Erf.java:56)",
          "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(NormalDistributionImpl.java:109)",
          "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(NormalDistributionTest.java:133)"
        ],
        "error": "org.apache.commons.math.MaxIterationsExceededException",
        "message": "Maximal number of iterations (10,000) exceeded"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 104,
    "changedFiles": {
      "org/apache/commons/math/special/Gamma.java": {
        "modified": [
          [
            37
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.special.GammaTest",
        "methodName": "testRegularizedGammaPositivePositive",
        "stackTrace": [
          "org.apache.commons.math.TestUtils.assertEquals(TestUtils.java:62)",
          "org.apache.commons.math.TestUtils.assertEquals(TestUtils.java:49)",
          "org.apache.commons.math.special.GammaTest.testRegularizedGamma(GammaTest.java:40)",
          "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(GammaTest.java:77)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.632120558828558> but was:<0.6321205587649603>"
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 105,
    "changedFiles": {
      "org/apache/commons/math/stat/regression/SimpleRegression.java": {
        "modified": [
          [
            264
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.stat.regression.SimpleRegressionTest",
        "methodName": "testSSENonNegative",
        "stackTrace": [
          "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(SimpleRegressionTest.java:275)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Math",
    "bugId": 106,
    "changedFiles": {
      "org/apache/commons/math/fraction/ProperFractionFormat.java": {
        "modified": [
          [
            165
          ],
          [
            200
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.apache.commons.math.fraction.FractionFormatTest",
        "methodName": "testParseProperInvalidMinus",
        "stackTrace": [
          "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(FractionFormatTest.java:236)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "invalid minus in improper fraction."
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 1,
    "changedFiles": {
      "org/mockito/internal/invocation/InvocationMatcher.java": {
        "modified": [
          [
            123
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.invocation.InvocationMatcherTest",
        "methodName": "should_capture_arguments_when_args_count_does_NOT_match",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMatcherTest.should_capture_arguments_when_args_count_does_NOT_match(InvocationMatcherTest.java:170)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockito.internal.util.reflection.FieldInitializerTest",
        "methodName": "can_instantiate_class_with_parameterized_constructor",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$1548412847.resolveTypeInstances(Unknown Source)",
          "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)",
          "org.mockito.internal.util.reflection.FieldInitializer.acquireFieldInstance(FieldInitializer.java:124)",
          "org.mockito.internal.util.reflection.FieldInitializer.initialize(FieldInitializer.java:86)",
          "org.mockito.internal.util.reflection.FieldInitializerTest.can_instantiate_class_with_parameterized_constructor(FieldInitializerTest.java:162)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
        "methodName": "should_report_failure_if_constructor_throws_exception",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$68214410.resolveTypeInstances(Unknown Source)",
          "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)",
          "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_report_failure_if_constructor_throws_exception(ParameterizedConstructorInstantiatorTest.java:101)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
        "methodName": "should_fail_if_an_argument_instance_type_do_not_match_wanted_type",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$68214410.resolveTypeInstances(Unknown Source)",
          "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)",
          "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_fail_if_an_argument_instance_type_do_not_match_wanted_type(ParameterizedConstructorInstantiatorTest.java:89)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
        "methodName": "should_instantiate_type_with_vararg_constructor",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$68214410.resolveTypeInstances(Unknown Source)",
          "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)",
          "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_instantiate_type_with_vararg_constructor(ParameterizedConstructorInstantiatorTest.java:113)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest",
        "methodName": "should_instantiate_type_if_resolver_provide_matching_types",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$68214410.resolveTypeInstances(Unknown Source)",
          "org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)",
          "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_instantiate_type_if_resolver_provide_matching_types(ParameterizedConstructorInstantiatorTest.java:75)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.ResetTest",
        "methodName": "shouldRemoveAllStubbing",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$1987869865.objectReturningMethod(Unknown Source)",
          "org.mockitousage.basicapi.ResetTest.shouldRemoveAllStubbing(ResetTest.java:48)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldVerifyWithNullVarArgArray",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptSuperCallable(MockMethodInterceptor.java:44)",
          "org.mockitousage.basicapi.UsingVarargsTest$Foo$MockitoMock$1057359952.varArgs(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyWithNullVarArgArray(UsingVarargsTest.java:129)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldVerifyWithAnyObject",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptSuperCallable(MockMethodInterceptor.java:44)",
          "org.mockitousage.basicapi.UsingVarargsTest$Foo$MockitoMock$1057359952.varArgs(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyWithAnyObject(UsingVarargsTest.java:121)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldStubBooleanVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$296513878.withBooleanVarargs(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldStubBooleanVarargs(UsingVarargsTest.java:65)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldMatchEasilyEmptyVararg",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$296513878.foo(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldMatchEasilyEmptyVararg(UsingVarargsTest.java:174)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldVerifyBooleanVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$296513878.withBooleanVarargs(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyBooleanVarargs(UsingVarargsTest.java:109)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldStubCorrectlyWhenMixedVarargsUsed",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$MixedVarargs$MockitoMock$1353178942.doSomething(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldStubCorrectlyWhenMixedVarargsUsed(UsingVarargsTest.java:150)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldStubStringVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$296513878.withStringVarargsReturningString(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs(UsingVarargsTest.java:41)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldStubCorrectlyWhenDoubleStringAndMixedVarargsUsed",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$MixedVarargs$MockitoMock$1353178942.doSomething(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldStubCorrectlyWhenDoubleStringAndMixedVarargsUsed(UsingVarargsTest.java:163)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldVerifyStringVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$296513878.withStringVarargs(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyStringVarargs(UsingVarargsTest.java:81)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldVerifyObjectVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$296513878.withObjectVarargs(Unknown Source)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyObjectVarargs(UsingVarargsTest.java:95)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest",
        "methodName": "shouldNotThrowAnyException",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptSuperCallable(MockMethodInterceptor.java:44)",
          "org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest$Foo$MockitoMock$1432889705.blah(Unknown Source)",
          "org.mockitousage.bugs.VarargsErrorWhenCallingRealMethodTest.shouldNotThrowAnyException(VarargsErrorWhenCallingRealMethodTest.java:26)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest",
        "methodName": "shouldVerifyCorrectlyWithAnyVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest$TableBuilder$MockitoMock$1350329250.newRow(Unknown Source)",
          "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest.shouldVerifyCorrectlyWithAnyVarargs(VarargsAndAnyObjectPicksUpExtraInvocationsTest.java:30)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest",
        "methodName": "shouldVerifyCorrectlyNumberOfInvocationsUsingAnyVarargAndEqualArgument",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest$TableBuilder$MockitoMock$1350329250.newRow(Unknown Source)",
          "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest.shouldVerifyCorrectlyNumberOfInvocationsUsingAnyVarargAndEqualArgument(VarargsAndAnyObjectPicksUpExtraInvocationsTest.java:40)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest",
        "methodName": "shouldStubUsingAnyVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest$VarargMethod$MockitoMock$343161363.run(Unknown Source)",
          "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest.shouldStubUsingAnyVarargs(VarargsNotPlayingWithAnyObjectTest.java:56)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest",
        "methodName": "shouldVerifyUsingMatchers",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$326138594.varargsObject(Unknown Source)",
          "org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest.shouldVerifyUsingMatchers(VerificationAndStubbingUsingMatchersTest.java:65)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.stubbing.BasicStubbingTest",
        "methodName": "test_stub_only_not_verifiable",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$964227538.objectReturningMethod(Unknown Source)",
          "org.mockitousage.stubbing.BasicStubbingTest.test_stub_only_not_verifiable(BasicStubbingTest.java:104)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.stubbing.BasicStubbingTest",
        "methodName": "should_evaluate_latest_stubbing_first",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$964227538.objectReturningMethod(Unknown Source)",
          "org.mockitousage.stubbing.BasicStubbingTest.should_evaluate_latest_stubbing_first(BasicStubbingTest.java:31)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.stubbing.DeprecatedStubbingTest",
        "methodName": "shouldEvaluateLatestStubbingFirst",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$909744546.objectReturningMethod(Unknown Source)",
          "org.mockitousage.stubbing.DeprecatedStubbingTest.shouldEvaluateLatestStubbingFirst(DeprecatedStubbingTest.java:31)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      },
      {
        "className": "org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest",
        "methodName": "shouldUseEqualsToVerifyMethodVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$98334184.varargsObject(Unknown Source)",
          "org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest.shouldUseEqualsToVerifyMethodVarargs(VerificationInOrderMixedWithOrdiraryVerificationTest.java:158)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 2,
    "changedFiles": {
      "org/mockito/internal/util/Timer.java": {
        "modified": [
          [
            4
          ],
          [
            10
          ],
          [
            28
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.util.TimerTest",
        "methodName": "should_throw_friendly_reminder_exception_when_duration_is_negative",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.mockito.internal.util.TimerTest.should_throw_friendly_reminder_exception_when_duration_is_negative(TimerTest.java:48)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "It is forbidden to create timer with negative value of timer's duration."
      },
      {
        "className": "org.mockito.verification.NegativeDurationTest",
        "methodName": "should_throw_exception_when_duration_is_negative_for_timeout_method",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.mockito.verification.NegativeDurationTest.should_throw_exception_when_duration_is_negative_for_timeout_method(NegativeDurationTest.java:14)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "It is forbidden to invoke Mockito.timeout() with negative value."
      },
      {
        "className": "org.mockito.verification.NegativeDurationTest",
        "methodName": "should_throw_exception_when_duration_is_negative_for_after_method",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.mockito.verification.NegativeDurationTest.should_throw_exception_when_duration_is_negative_for_after_method(NegativeDurationTest.java:24)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "It is forbidden to invoke Mockito.after() with negative value."
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 3,
    "changedFiles": {
      "org/mockito/internal/invocation/InvocationMatcher.java": {
        "modified": [
          [
            127
          ],
          [
            143
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.invocation.InvocationMatcherTest",
        "methodName": "should_capture_varargs_as_vararg",
        "stackTrace": [
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.fest.assertions.ConstructorInvoker.newInstance(ConstructorInvoker.java:34)",
          "org.fest.assertions.ComparisonFailureFactory.newComparisonFailure(ComparisonFailureFactory.java:60)",
          "org.fest.assertions.ComparisonFailureFactory.comparisonFailure(ComparisonFailureFactory.java:46)",
          "org.fest.assertions.Fail.comparisonFailed(Fail.java:83)",
          "org.fest.assertions.Fail.failIfNotEqual(Fail.java:71)",
          "org.fest.assertions.GenericAssert.assertEqualTo(GenericAssert.java:271)",
          "org.fest.assertions.ListAssert.isEqualTo(ListAssert.java:360)",
          "org.fest.assertions.ListAssert.containsExactly(ListAssert.java:350)",
          "org.mockito.internal.invocation.InvocationMatcherTest.should_capture_varargs_as_vararg(InvocationMatcherTest.java:154)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[['a', 'b']]> but was:<[[1]]>"
      },
      {
        "className": "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest",
        "methodName": "shouldVerifyCorrectlyNumberOfInvocationsWithVarargs",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:130)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest$TableBuilder$MockitoMock$1464366100.newRow(Unknown Source)",
          "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest.shouldVerifyCorrectlyNumberOfInvocationsWithVarargs(VarargsAndAnyObjectPicksUpExtraInvocationsTest.java:50)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "2"
      },
      {
        "className": "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest",
        "methodName": "shouldMatchAnyVararg",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:130)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest$VarargMethod$MockitoMock$358589144.run(Unknown Source)",
          "org.mockitousage.bugs.varargs.VarargsNotPlayingWithAnyObjectTest.shouldMatchAnyVararg(VarargsNotPlayingWithAnyObjectTest.java:28)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "1"
      },
      {
        "className": "org.mockitousage.matchers.CapturingArgumentsTest",
        "methodName": "should_capture_all_vararg",
        "stackTrace": [
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.fest.assertions.ConstructorInvoker.newInstance(ConstructorInvoker.java:34)",
          "org.fest.assertions.ComparisonFailureFactory.newComparisonFailure(ComparisonFailureFactory.java:60)",
          "org.fest.assertions.ComparisonFailureFactory.comparisonFailure(ComparisonFailureFactory.java:46)",
          "org.fest.assertions.Fail.comparisonFailed(Fail.java:83)",
          "org.fest.assertions.Fail.failIfNotEqual(Fail.java:71)",
          "org.fest.assertions.GenericAssert.assertEqualTo(GenericAssert.java:271)",
          "org.fest.assertions.ListAssert.isEqualTo(ListAssert.java:360)",
          "org.fest.assertions.ListAssert.containsExactly(ListAssert.java:350)",
          "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_all_vararg(CapturingArgumentsTest.java:278)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[['a', 'b', 'c', 'again ?!']]> but was:<[[42, 42]]>"
      },
      {
        "className": "org.mockitousage.matchers.CapturingArgumentsTest",
        "methodName": "captures_correctly_when_captor_used_multiple_times",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:130)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$1586827337.mixedVarargs(Unknown Source)",
          "org.mockitousage.matchers.CapturingArgumentsTest.captures_correctly_when_captor_used_multiple_times(CapturingArgumentsTest.java:304)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "2"
      },
      {
        "className": "org.mockitousage.matchers.CapturingArgumentsTest",
        "methodName": "should_capture_vararg",
        "stackTrace": [
          "sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
          "sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)",
          "sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)",
          "java.lang.reflect.Constructor.newInstance(Constructor.java:423)",
          "org.fest.assertions.ConstructorInvoker.newInstance(ConstructorInvoker.java:34)",
          "org.fest.assertions.ComparisonFailureFactory.newComparisonFailure(ComparisonFailureFactory.java:60)",
          "org.fest.assertions.ComparisonFailureFactory.comparisonFailure(ComparisonFailureFactory.java:46)",
          "org.fest.assertions.Fail.comparisonFailed(Fail.java:83)",
          "org.fest.assertions.Fail.failIfNotEqual(Fail.java:71)",
          "org.fest.assertions.GenericAssert.assertEqualTo(GenericAssert.java:271)",
          "org.fest.assertions.ListAssert.isEqualTo(ListAssert.java:360)",
          "org.fest.assertions.ListAssert.containsExactly(ListAssert.java:350)",
          "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_vararg(CapturingArgumentsTest.java:263)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<[['a', 'b', 'c']]> but was:<[[42]]>"
      },
      {
        "className": "org.mockitousage.matchers.CapturingArgumentsTest",
        "methodName": "captures_correctly_when_captor_used_on_pure_vararg_method",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:130)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)",
          "org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)",
          "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)",
          "org.mockito.internal.verification.Times.verify(Times.java:39)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)",
          "org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)",
          "org.mockitousage.IMethods$MockitoMock$1586827337.varargs(Unknown Source)",
          "org.mockitousage.matchers.CapturingArgumentsTest.captures_correctly_when_captor_used_on_pure_vararg_method(CapturingArgumentsTest.java:317)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "1"
      },
      {
        "className": "org.mockitousage.matchers.CapturingArgumentsTest",
        "methodName": "should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper",
        "stackTrace": [
          "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper(CapturingArgumentsTest.java:249)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "[B cannot be cast to java.lang.Byte"
      },
      {
        "className": "org.mockitousage.matchers.CapturingArgumentsTest",
        "methodName": "should_capture_byte_vararg_by_creating_captor_with_primitive",
        "stackTrace": [
          "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive(CapturingArgumentsTest.java:235)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "[B cannot be cast to java.lang.Byte"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 4,
    "changedFiles": {
      "org/mockito/exceptions/Reporter.java": {
        "modified": [
          [
            424
          ],
          [
            434
          ],
          [
            677
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.exceptions.ReporterTest",
        "methodName": "can_use_print_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_no_more_interaction_wanted_in_order",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$982d8b49.toString(<generated>)",
          "java.lang.String.valueOf(String.java:2994)",
          "java.lang.StringBuilder.append(StringBuilder.java:131)",
          "org.mockito.exceptions.Reporter.noMoreInteractionsWantedInOrder(Reporter.java:434)",
          "org.mockito.exceptions.ReporterTest.can_use_print_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_no_more_interaction_wanted_in_order(ReporterTest.java:47)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.mockito.exceptions.verification.VerificationInOrderFailure> but was<java.lang.ClassCastException>"
      },
      {
        "className": "org.mockito.exceptions.ReporterTest",
        "methodName": "can_use_print_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_injection_failure",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.mockito.exceptions.Reporter.exceptionCauseMessageIfAvailable(Reporter.java:677)",
          "org.mockito.exceptions.Reporter.cannotInjectDependency(Reporter.java:671)",
          "org.mockito.exceptions.ReporterTest.can_use_print_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_injection_failure(ReporterTest.java:79)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.mockito.exceptions.base.MockitoException> but was<java.lang.NullPointerException>"
      },
      {
        "className": "org.mockito.exceptions.ReporterTest",
        "methodName": "can_use_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_no_more_interaction_wanted",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$982d8b49.toString(<generated>)",
          "java.lang.String.valueOf(String.java:2994)",
          "java.lang.StringBuilder.append(StringBuilder.java:131)",
          "org.mockito.exceptions.Reporter.noMoreInteractionsWanted(Reporter.java:424)",
          "org.mockito.exceptions.ReporterTest.can_use_mock_name_even_when_mock_bogus_default_answer_and_when_reporting_no_more_interaction_wanted(ReporterTest.java:41)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.mockito.exceptions.verification.NoInteractionsWanted> but was<java.lang.ClassCastException>"
      },
      {
        "className": "org.mockitousage.bugs.ClassCastExOnVerifyZeroInteractionsTest",
        "methodName": "should_not_throw_a_ClassCastException",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.mockitousage.bugs.ClassCastExOnVerifyZeroInteractionsTest$TestMock$$EnhancerByMockitoWithCGLIB$$cad0768.toString(<generated>)",
          "java.lang.String.valueOf(String.java:2994)",
          "java.lang.StringBuilder.append(StringBuilder.java:131)",
          "org.mockito.exceptions.Reporter.noMoreInteractionsWanted(Reporter.java:424)",
          "org.mockito.internal.verification.NoMoreInteractions.verify(NoMoreInteractions.java:24)",
          "org.mockito.internal.MockitoCore.verifyNoMoreInteractions(MockitoCore.java:113)",
          "org.mockito.Mockito.verifyZeroInteractions(Mockito.java:1674)",
          "org.mockitousage.bugs.ClassCastExOnVerifyZeroInteractionsTest.should_not_throw_a_ClassCastException(ClassCastExOnVerifyZeroInteractionsTest.java:24)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<org.mockito.exceptions.verification.NoInteractionsWanted> but was<java.lang.ClassCastException>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 5,
    "changedFiles": {
      "org/mockito/internal/verification/VerificationOverTimeImpl.java": {
        "modified": [
          [
            91
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitointegration.NoJUnitDependenciesTest",
        "methodName": "pure_mockito_should_not_depend_JUnit",
        "stackTrace": [
          "org.mockitointegration.NoJUnitDependenciesTest.checkDependency(NoJUnitDependenciesTest.java:36)",
          "org.mockitointegration.NoJUnitDependenciesTest.pure_mockito_should_not_depend_JUnit(NoJUnitDependenciesTest.java:28)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "'org.mockito.internal.verification.VerificationOverTimeImpl' has some dependency to JUnit"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 6,
    "changedFiles": {
      "org/mockito/Matchers.java": {
        "modified": [
          [
            122
          ],
          [
            137
          ],
          [
            152
          ],
          [
            167
          ],
          [
            182
          ],
          [
            197
          ],
          [
            212
          ],
          [
            227
          ],
          [
            244
          ],
          [
            292
          ],
          [
            309
          ],
          [
            324
          ],
          [
            339
          ],
          [
            358
          ],
          [
            373
          ],
          [
            392
          ],
          [
            407
          ],
          [
            427
          ],
          [
            442
          ],
          [
            461
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest",
        "methodName": "shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers",
        "stackTrace": [
          "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest.shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers(AnyXMatchersAcceptNullsTest.java:54)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<0>"
      },
      {
        "className": "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest",
        "methodName": "shouldNotAcceptNullInAnyXMatchers",
        "stackTrace": [
          "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest.shouldNotAcceptNullInAnyXMatchers(AnyXMatchersAcceptNullsTest.java:35)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<0>"
      },
      {
        "className": "org.mockitousage.matchers.MatchersTest",
        "methodName": "anyStringMatcher",
        "stackTrace": [
          "org.mockitousage.matchers.MatchersTest.anyStringMatcher(MatchersTest.java:232)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<matched>"
      },
      {
        "className": "org.mockitousage.matchers.NewMatchersTest",
        "methodName": "shouldAllowAnyCollection",
        "stackTrace": [
          "org.mockitousage.matchers.NewMatchersTest.shouldAllowAnyCollection(NewMatchersTest.java:45)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<matched>"
      },
      {
        "className": "org.mockitousage.matchers.NewMatchersTest",
        "methodName": "shouldAllowAnyList",
        "stackTrace": [
          "org.mockitousage.matchers.NewMatchersTest.shouldAllowAnyList(NewMatchersTest.java:35)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<matched>"
      },
      {
        "className": "org.mockitousage.matchers.NewMatchersTest",
        "methodName": "shouldAllowAnyMap",
        "stackTrace": [
          "org.mockitousage.matchers.NewMatchersTest.shouldAllowAnyMap(NewMatchersTest.java:55)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<matched>"
      },
      {
        "className": "org.mockitousage.matchers.NewMatchersTest",
        "methodName": "shouldAllowAnySet",
        "stackTrace": [
          "org.mockitousage.matchers.NewMatchersTest.shouldAllowAnySet(NewMatchersTest.java:65)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<null> but was:<matched>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 7,
    "changedFiles": {
      "org/mockito/internal/util/reflection/GenericMetadataSupport.java": {
        "modified": [
          [
            379
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest",
        "methodName": "discoverDeepMockingOfGenerics",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.extractRawTypeOf(GenericMetadataSupport.java:407)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.extractRawTypeOf(GenericMetadataSupport.java:405)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.rawType(GenericMetadataSupport.java:385)",
          "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:51)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)",
          "org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)",
          "org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest$MyClass2$$EnhancerByMockitoWithCGLIB$$3957466c.getNested(<generated>)",
          "org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest.discoverDeepMockingOfGenerics(DeepStubFailingWhenGenricNestedAsRawTypeTest.java:26)"
        ],
        "error": "org.mockito.exceptions.base.MockitoException",
        "message": "Raw extraction not supported for : 'null'"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 8,
    "changedFiles": {
      "org/mockito/internal/util/reflection/GenericMetadataSupport.java": {
        "modified": [
          [
            79
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.util.reflection.GenericMetadataSupportTest",
        "methodName": "typeVariable_of_self_type",
        "stackTrace": [
          "sun.reflect.generics.reflectiveObjects.TypeVariableImpl.hashCode(TypeVariableImpl.java:201)",
          "java.util.HashMap.hash(HashMap.java:339)",
          "java.util.HashMap.get(HashMap.java:557)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:182)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)",
          "org.mockito.internal.util.reflection.GenericMetadataSupport.getActualTypeArgumentFor(GenericMetadataSupport.java:185)"
        ],
        "error": "java.lang.StackOverflowError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 9,
    "changedFiles": {
      "org/mockito/internal/stubbing/answers/CallsRealMethods.java": {
        "modified": [
          [
            8
          ],
          [
            36
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "abstractMethodStubbed",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)",
          "org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:110)",
          "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)",
          "org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$be30a00.name(<generated>)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.abstractMethodStubbed(CreatingMocksWithConstructorTest.java:119)"
        ],
        "error": "org.mockito.exceptions.base.MockitoException",
        "message": ""
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "testCallsRealInterfaceMethod",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)",
          "org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:110)",
          "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)",
          "org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)",
          "$java.util.List$$EnhancerByMockitoWithCGLIB$$59a5e74d.get(<generated>)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.testCallsRealInterfaceMethod(CreatingMocksWithConstructorTest.java:126)"
        ],
        "error": "org.mockito.exceptions.base.MockitoException",
        "message": ""
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "abstractMethodReturnsDefault",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)",
          "org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:110)",
          "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)",
          "org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$be30a00.name(<generated>)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing.fullName(CreatingMocksWithConstructorTest.java:106)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$be30a00.CGLIB$fullName$0(<generated>)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$be30a00$$FastClassByMockitoWithCGLIB$$271fb2b6.invoke(<generated>)",
          "org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)",
          "org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy.invokeSuper(DelegatingMockitoMethodProxy.java:19)",
          "org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(DefaultRealMethod.java:21)",
          "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(CleanTraceRealMethod.java:30)",
          "org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:112)",
          "org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)",
          "org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$be30a00.fullName(<generated>)",
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.abstractMethodReturnsDefault(CreatingMocksWithConstructorTest.java:113)"
        ],
        "error": "org.mockito.exceptions.base.MockitoException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 10,
    "changedFiles": {
      "org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java": {
        "modified": [
          [
            17
          ],
          [
            71
          ],
          [
            87
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest",
        "methodName": "should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.serializableWontWorkForObjectsThatDontImplementSerializable(Reporter.java:760)",
          "org.mockito.internal.util.MockCreationValidator.validateSerializable(MockCreationValidator.java:63)",
          "org.mockito.internal.creation.MockSettingsImpl.validatedSettings(MockSettingsImpl.java:154)",
          "org.mockito.internal.creation.MockSettingsImpl.confirm(MockSettingsImpl.java:141)",
          "org.mockito.internal.MockitoCore.mock(MockitoCore.java:58)",
          "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.newDeepStubMock(ReturnsDeepStubs.java:88)",
          "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.deepStub(ReturnsDeepStubs.java:71)",
          "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:55)",
          "org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)",
          "org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)",
          "org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:61)",
          "org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest$ToBeDeepStubbed$$EnhancerByMockitoWithCGLIB$$95a97fd6.getSomething(<generated>)",
          "org.mockitousage.bugs.DeepStubsWronglyReportsSerializationProblemsTest.should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub(DeepStubsWronglyReportsSerializationProblemsTest.java:16)"
        ],
        "error": "org.mockito.exceptions.base.MockitoException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 11,
    "changedFiles": {
      "org/mockito/internal/creation/DelegatingMethod.java": {
        "modified": [
          [
            55
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.creation.DelegatingMethodTest",
        "methodName": "equals_should_return_true_when_equal",
        "stackTrace": [
          "org.mockito.internal.creation.DelegatingMethodTest.equals_should_return_true_when_equal(DelegatingMethodTest.java:30)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.mockito.internal.creation.DelegatingMethodTest",
        "methodName": "equals_should_return_true_when_self",
        "stackTrace": [
          "org.mockito.internal.creation.DelegatingMethodTest.equals_should_return_true_when_self(DelegatingMethodTest.java:35)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 12,
    "changedFiles": {
      "org/mockito/internal/util/reflection/GenericMaster.java": {
        "modified": [
          [
            20
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.util.reflection.GenericMasterTest",
        "methodName": "shouldDealWithNestedGenerics",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.util.reflection.GenericMasterTest.shouldDealWithNestedGenerics(GenericMasterTest.java:38)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationBasicTest",
        "methodName": "shouldUseAnnotatedCaptor",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationBasicTest",
        "methodName": "shouldUseCaptorInOrdinaryWay",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationBasicTest",
        "methodName": "shouldCaptureGenericList",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationBasicTest",
        "methodName": "shouldUseGenericlessAnnotatedCaptor",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationTest",
        "methodName": "shouldScreamWhenWrongTypeForCaptor",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationTest",
        "methodName": "testNormalUsage",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationTest",
        "methodName": "shouldScreamWhenMoreThanOneMockitoAnnotaton",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationTest",
        "methodName": "shouldScreamWhenInitializingCaptorsForNullClass",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      },
      {
        "className": "org.mockitousage.annotation.CaptorAnnotationTest",
        "methodName": "shouldLookForAnnotatedCaptorsInSuperClasses",
        "stackTrace": [
          "org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.processAnnotationOn(DefaultAnnotationEngine.java:76)",
          "org.mockito.internal.configuration.DefaultAnnotationEngine.createMockFor(DefaultAnnotationEngine.java:42)",
          "org.mockito.internal.configuration.InjectingAnnotationEngine.createMockFor(InjectingAnnotationEngine.java:35)",
          "org.mockito.configuration.MockitoConfiguration$1.createMockFor(MockitoConfiguration.java:56)",
          "org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(MockitoAnnotations.java:119)",
          "org.mockito.MockitoAnnotations.scan(MockitoAnnotations.java:108)",
          "org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:95)",
          "org.mockitoutil.TestBase.init(TestBase.java:40)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 13,
    "changedFiles": {
      "org/mockito/internal/MockHandler.java": {
        "modified": [
          [
            77
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.VerifyingWithAnExtraCallToADifferentMockTest",
        "methodName": "shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine",
        "stackTrace": [
          "org.mockitousage.bugs.VerifyingWithAnExtraCallToADifferentMockTest.shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine(VerifyingWithAnExtraCallToADifferentMockTest.java:33)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 14,
    "changedFiles": {
      "org/mockito/internal/MockHandler.java": {
        "modified": [
          [
            20
          ],
          [
            76
          ]
        ]
      },
      "org/mockito/internal/MockitoCore.java": {
        "modified": [
          [
            23
          ],
          [
            73
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.VerifyingWithAnExtraCallToADifferentMockTest",
        "methodName": "shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.wantedButNotInvoked(Reporter.java:257)",
          "org.mockito.internal.verification.checkers.MissingInvocationChecker.check(MissingInvocationChecker.java:41)",
          "org.mockito.internal.verification.Times.verify(Times.java:35)",
          "org.mockito.internal.MockHandler.handle(MockHandler.java:77)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)",
          "org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$aa6ced83.otherMethod(<generated>)",
          "org.mockitousage.bugs.VerifyingWithAnExtraCallToADifferentMockTest.shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine(VerifyingWithAnExtraCallToADifferentMockTest.java:29)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 15,
    "changedFiles": {
      "org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java": {
        "modified": [
          [
            4
          ],
          [
            25
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest",
        "methodName": "shouldInjectUsingPropertySetterIfAvailable",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertTrue(Assert.java:52)",
          "org.mockitousage.bugs.InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.shouldInjectUsingPropertySetterIfAvailable(InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java:25)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 16,
    "changedFiles": {
      "org/mockito/Mockito.java": {
        "modified": [
          [
            827
          ],
          [
            899
          ]
        ]
      },
      "org/mockito/internal/MockitoCore.java": {
        "modified": [
          [
            32
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.StubbingMocksThatAreConfiguredToReturnMocksTest",
        "methodName": "shouldAllowStubbingMocksConfiguredWithRETURNS_MOCKS",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.missingMethodInvocation(Reporter.java:77)",
          "org.mockito.internal.MockitoCore.stub(MockitoCore.java:43)",
          "org.mockito.internal.MockitoCore.when(MockitoCore.java:56)",
          "org.mockito.Mockito.when(Mockito.java:994)",
          "org.mockitousage.bugs.StubbingMocksThatAreConfiguredToReturnMocksTest.shouldAllowStubbingMocksConfiguredWithRETURNS_MOCKS(StubbingMocksThatAreConfiguredToReturnMocksTest.java:19)"
        ],
        "error": "org.mockito.exceptions.misusing.MissingMethodInvocationException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 17,
    "changedFiles": {
      "org/mockito/internal/creation/MockSettingsImpl.java": {
        "modified": [
          [
            20
          ],
          [
            74
          ]
        ]
      },
      "org/mockito/internal/util/MockUtil.java": {
        "modified": [
          [
            19
          ],
          [
            45
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.basicapi.MocksSerializationTest",
        "methodName": "shouldBeSerializeAndHaveExtraInterfaces",
        "stackTrace": [
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)",
          "java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)",
          "org.mockitoutil.TestBase.serializeMock(TestBase.java:160)",
          "org.mockitoutil.TestBase.serializeAndBack(TestBase.java:146)",
          "org.mockitousage.basicapi.MocksSerializationTest.shouldBeSerializeAndHaveExtraInterfaces(MocksSerializationTest.java:312)"
        ],
        "error": "java.io.NotSerializableException",
        "message": "org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$80860597"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 18,
    "changedFiles": {
      "org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java": {
        "modified": [
          [
            87
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest",
        "methodName": "should_return_empty_iterable",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest.should_return_empty_iterable(ReturnsEmptyValuesTest.java:57)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 19,
    "changedFiles": {
      "org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java": {
        "modified": [
          [
            114
          ]
        ]
      },
      "org/mockito/internal/configuration/injection/filter/FinalMockCandidateFilter.java": {
        "modified": [
          [
            13
          ],
          [
            23
          ]
        ]
      },
      "org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java": {
        "modified": [
          [
            9
          ]
        ]
      },
      "org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java": {
        "modified": [
          [
            23
          ],
          [
            31
          ],
          [
            42
          ]
        ]
      },
      "org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java": {
        "modified": [
          [
            20
          ],
          [
            28
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest",
        "methodName": "shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable",
        "stackTrace": [
          "org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest.shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable(MockInjectionUsingSetterOrPropertyTest.java:115)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Expected: <null> but was: candidate2"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 20,
    "changedFiles": {
      "org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java": {
        "modified": [
          [
            32
          ],
          [
            45
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.annotation.SpyAnnotationTest",
        "methodName": "should_spy_inner_class",
        "stackTrace": [
          "org.mockitousage.annotation.SpyAnnotationTest.should_spy_inner_class(SpyAnnotationTest.java:150)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[inner] strength> but was:<[null] strength>"
      },
      {
        "className": "org.mockitousage.annotation.SpyAnnotationTest",
        "methodName": "should_report_when_constructor_is_explosive",
        "stackTrace": [
          "org.mockitousage.annotation.SpyAnnotationTest.should_report_when_constructor_is_explosive(SpyAnnotationTest.java:101)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "can_spy_abstract_classes",
        "stackTrace": [
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.can_spy_abstract_classes(CreatingMocksWithConstructorTest.java:46)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<hey!> but was:<null>"
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "exception_message_when_constructor_not_found",
        "stackTrace": [
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.exception_message_when_constructor_not_found(CreatingMocksWithConstructorTest.java:65)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "can_create_mock_with_constructor",
        "stackTrace": [
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.can_create_mock_with_constructor(CreatingMocksWithConstructorTest.java:34)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<hey!> but was:<null>"
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "can_mock_inner_classes",
        "stackTrace": [
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.can_mock_inner_classes(CreatingMocksWithConstructorTest.java:52)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<hey!> but was:<null>"
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "mocking_inner_classes_with_wrong_outer_instance",
        "stackTrace": [
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.mocking_inner_classes_with_wrong_outer_instance(CreatingMocksWithConstructorTest.java:78)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.mockitousage.constructor.CreatingMocksWithConstructorTest",
        "methodName": "can_mock_abstract_classes",
        "stackTrace": [
          "org.mockitousage.constructor.CreatingMocksWithConstructorTest.can_mock_abstract_classes(CreatingMocksWithConstructorTest.java:40)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<hey!> but was:<null>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 21,
    "changedFiles": {
      "org/mockito/internal/creation/instance/ConstructorInstantiator.java": {
        "modified": [
          [
            17
          ],
          [
            36
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.creation.instance.ConstructorInstantiatorTest",
        "methodName": "creates_instances_of_inner_classes",
        "stackTrace": [
          "org.mockito.internal.creation.instance.ConstructorInstantiator.paramsException(ConstructorInstantiator.java:33)",
          "org.mockito.internal.creation.instance.ConstructorInstantiator.withOuterClass(ConstructorInstantiator.java:27)",
          "org.mockito.internal.creation.instance.ConstructorInstantiator.newInstance(ConstructorInstantiator.java:17)",
          "org.mockito.internal.creation.instance.ConstructorInstantiatorTest.creates_instances_of_inner_classes(ConstructorInstantiatorTest.java:21)"
        ],
        "error": "org.mockito.internal.creation.instance.InstantationException",
        "message": "Unable to create mock instance of 'SomeInnerClass'."
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 22,
    "changedFiles": {
      "org/mockito/internal/matchers/Equality.java": {
        "modified": [
          [
            13
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.matchers.EqualityTest",
        "methodName": "shouldKnowIfObjectsAreEqual",
        "stackTrace": [
          "org.mockito.internal.matchers.EqualityTest$BadEquals.equals(EqualityTest.java:34)",
          "org.mockito.internal.matchers.Equality.areEqual(Equality.java:18)",
          "org.mockito.internal.matchers.EqualityTest.shouldKnowIfObjectsAreEqual(EqualityTest.java:24)"
        ],
        "error": "java.lang.RuntimeException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 23,
    "changedFiles": {
      "org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java": {
        "modified": [
          [
            44
          ],
          [
            59
          ],
          [
            100
          ],
          [
            114
          ],
          [
            123
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.stubbing.DeepStubsSerializableTest",
        "methodName": "should_serialize_and_deserialize_mock_created_by_deep_stubs",
        "stackTrace": [
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)",
          "java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)",
          "java.util.concurrent.ConcurrentLinkedQueue.writeObject(ConcurrentLinkedQueue.java:769)",
          "sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1154)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)",
          "java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)",
          "java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)",
          "java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)",
          "java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)",
          "org.mockitoutil.SimpleSerializationUtil.serializeMock(SimpleSerializationUtil.java:34)",
          "org.mockitoutil.SimpleSerializationUtil.serializeAndBack(SimpleSerializationUtil.java:16)",
          "org.mockitousage.stubbing.DeepStubsSerializableTest.should_serialize_and_deserialize_mock_created_by_deep_stubs(DeepStubsSerializableTest.java:25)"
        ],
        "error": "java.io.NotSerializableException",
        "message": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$2"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 24,
    "changedFiles": {
      "org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java": {
        "modified": [
          [
            76
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest",
        "methodName": "should_return_zero_if_mock_is_compared_to_itself",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest.should_return_zero_if_mock_is_compared_to_itself(ReturnsEmptyValuesTest.java:77)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<1>"
      },
      {
        "className": "org.mockitousage.bugs.ShouldMocksCompareToBeConsistentWithEqualsTest",
        "methodName": "should_compare_to_be_consistent_with_equals_when_comparing_the_same_reference",
        "stackTrace": [
          "org.mockitousage.bugs.ShouldMocksCompareToBeConsistentWithEqualsTest.should_compare_to_be_consistent_with_equals_when_comparing_the_same_reference(ShouldMocksCompareToBeConsistentWithEqualsTest.java:48)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<1> but was:<2>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 25,
    "changedFiles": {
      "org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java": {
        "modified": [
          [
            7
          ],
          [
            19
          ],
          [
            53
          ],
          [
            68
          ],
          [
            77
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest",
        "methodName": "will_return_default_value_on_non_mockable_nested_generic",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.will_return_default_value_on_non_mockable_nested_generic(ReturnsGenericDeepStubsTest.java:97)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "org.mockito.internal.creation.jmock.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug$$EnhancerByMockitoWithCGLIB$$6c040935 cannot be cast to java.lang.String"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest",
        "methodName": "can_create_mock_from_multiple_type_variable_bounds_when_return_type_of_parameterized_method_is_a_typevar_that_is_referencing_a_typevar_on_class",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.can_create_mock_from_multiple_type_variable_bounds_when_return_type_of_parameterized_method_is_a_typevar_that_is_referencing_a_typevar_on_class(ReturnsGenericDeepStubsTest.java:71)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "$java.lang.Comparable$$EnhancerByMockitoWithCGLIB$$8dcd85f5 cannot be cast to java.lang.Cloneable"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest",
        "methodName": "can_create_mock_from_return_types_declared_with_a_bounded_wildcard",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.can_create_mock_from_return_types_declared_with_a_bounded_wildcard(ReturnsGenericDeepStubsTest.java:80)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "org.mockito.internal.creation.jmock.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug$$EnhancerByMockitoWithCGLIB$$6c040935 cannot be cast to java.lang.Number"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest",
        "methodName": "can_create_mock_from_multiple_type_variable_bounds_when_return_type_of_parameterized_method_is_a_parameterizedtype_that_is_referencing_a_typevar_on_class",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.can_create_mock_from_multiple_type_variable_bounds_when_return_type_of_parameterized_method_is_a_parameterizedtype_that_is_referencing_a_typevar_on_class(ReturnsGenericDeepStubsTest.java:53)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "org.mockito.internal.creation.jmock.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug$$EnhancerByMockitoWithCGLIB$$6c040935 cannot be cast to java.lang.Cloneable"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest",
        "methodName": "generic_deep_mock_frenzy__look_at_these_chained_calls",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.generic_deep_mock_frenzy__look_at_these_chained_calls(ReturnsGenericDeepStubsTest.java:39)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "org.mockito.internal.creation.jmock.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug$$EnhancerByMockitoWithCGLIB$$6c040935 cannot be cast to java.util.Map$Entry"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest",
        "methodName": "can_create_mock_from_multiple_type_variable_bounds_when_method_return_type_is_referencing_a_typevar_on_class",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.can_create_mock_from_multiple_type_variable_bounds_when_method_return_type_is_referencing_a_typevar_on_class(ReturnsGenericDeepStubsTest.java:63)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "$java.lang.Comparable$$EnhancerByMockitoWithCGLIB$$8dcd85f5 cannot be cast to java.lang.Cloneable"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 26,
    "changedFiles": {
      "org/mockito/internal/util/Primitives.java": {
        "modified": [
          [
            66
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.progress.HandyReturnValuesTest",
        "methodName": "should_default_values_for_primitive",
        "stackTrace": [
          "org.mockito.internal.progress.HandyReturnValuesTest.should_default_values_for_primitive(HandyReturnValuesTest.java:50)"
        ],
        "error": "java.lang.ClassCastException",
        "message": "java.lang.Integer cannot be cast to java.lang.Double"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest",
        "methodName": "should_return_primitive",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest.should_return_primitive(ReturnsEmptyValuesTest.java:51)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<0>"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsMocksTest",
        "methodName": "should_return_the_usual_default_values_for_primitives",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsMocksTest.should_return_the_usual_default_values_for_primitives(ReturnsMocksTest.java:51)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<0>"
      },
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest",
        "methodName": "should_return_the_usual_default_values_for_primitives",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest.should_return_the_usual_default_values_for_primitives(ReturnsSmartNullsTest.java:24)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0.0> but was:<0>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 27,
    "changedFiles": {
      "org/mockito/internal/util/MockUtil.java": {
        "modified": [
          [
            64
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.ListenersLostOnResetMockTest",
        "methodName": "listener",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.wantedButNotInvoked(Reporter.java:269)",
          "org.mockito.internal.verification.checkers.MissingInvocationChecker.check(MissingInvocationChecker.java:42)",
          "org.mockito.internal.verification.Times.verify(Times.java:36)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:22)",
          "org.mockito.internal.MockHandler.handle(MockHandler.java:81)",
          "org.mockito.internal.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:48)",
          "org.mockito.listeners.InvocationListener$$EnhancerByMockitoWithCGLIB$$a410022a.reportInvocation(<generated>)",
          "org.mockitousage.bugs.ListenersLostOnResetMockTest.listener(ListenersLostOnResetMockTest.java:23)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 28,
    "changedFiles": {
      "org/mockito/internal/configuration/DefaultInjectionEngine.java": {
        "modified": [
          [
            93
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest",
        "methodName": "mock_should_be_injected_once_and_in_the_best_matching_type",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:88)",
          "org.junit.Assert.failNotSame(Assert.java:737)",
          "org.junit.Assert.assertSame(Assert.java:680)",
          "org.junit.Assert.assertSame(Assert.java:691)",
          "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.mock_should_be_injected_once_and_in_the_best_matching_type(InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java:33)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected same:<java.lang.Object@9fbac3f> was not:<mockedBean>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 29,
    "changedFiles": {
      "org/mockito/internal/matchers/Same.java": {
        "modified": [
          [
            29
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
        "methodName": "shouldNotThrowNPEWhenNullPassedToSame",
        "stackTrace": [
          "org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:28)",
          "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)",
          "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)",
          "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)",
          "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)",
          "org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)",
          "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)",
          "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)",
          "org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)",
          "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)",
          "org.junit.runners.ParentRunner.run(ParentRunner.java:309)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeInVM(JUnitTask.java:1484)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:872)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.executeOrQueue(JUnitTask.java:1972)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute1(JUnitTask.java:824)",
          "org.apache.tools.ant.taskdefs.optional.junit.JUnitTask.execute(JUnitTask.java:2277)",
          "org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)",
          "sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)",
          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
          "java.lang.reflect.Method.invoke(Method.java:498)",
          "org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)",
          "org.apache.tools.ant.Task.perform(Task.java:348)",
          "org.apache.tools.ant.Target.execute(Target.java:392)",
          "org.apache.tools.ant.Target.performTasks(Target.java:413)",
          "org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)",
          "org.apache.tools.ant.Project.executeTarget(Project.java:1368)",
          "org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)",
          "org.apache.tools.ant.Project.executeTargets(Project.java:1251)",
          "org.apache.tools.ant.Main.runBuild(Main.java:811)",
          "org.apache.tools.ant.Main.startAnt(Main.java:217)",
          "org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)",
          "org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)",
          "org.mockito.internal.matchers.Same.describeTo(Same.java:29)",
          "org.mockito.internal.matchers.LocalizedMatcher.describeTo(LocalizedMatcher.java:33)",
          "org.hamcrest.BaseDescription.appendDescriptionOf(BaseDescription.java:24)",
          "org.hamcrest.StringDescription.toString(StringDescription.java:28)",
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.toStringEquals(ArgumentMatchingTool.java:48)",
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(ArgumentMatchingTool.java:28)",
          "org.mockito.internal.verification.checkers.MissingInvocationChecker.check(MissingInvocationChecker.java:37)",
          "org.mockito.internal.verification.Times.verify(Times.java:35)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.MockHandler.handle(MockHandler.java:80)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)",
          "org.mockitousage.IMethods$$EnhancerByMockitoWithCGLIB$$982c4ac.objectArgMethod(<generated>)",
          "org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenNullPassedToSame(NPEWithCertainMatchersTest.java:65)"
        ],
        "error": "java.lang.Exception",
        "message": "Unexpected exception, expected<java.lang.AssertionError> but was<java.lang.NullPointerException>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 30,
    "changedFiles": {
      "org/mockito/exceptions/Reporter.java": {
        "modified": [
          [
            438
          ]
        ]
      },
      "org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java": {
        "modified": [
          [
            56
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest",
        "methodName": "shouldPrintTheParametersOnSmartNullPointerExceptionMessage",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest.shouldPrintTheParametersOnSmartNullPointerExceptionMessage(ReturnsSmartNullsTest.java:71)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "Exception message should include oompa and lumpa, but was:"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 31,
    "changedFiles": {
      "org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java": {
        "modified": [
          [
            9
          ],
          [
            60
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest",
        "methodName": "shouldPrintTheParametersWhenCallingAMethodWithArgs",
        "stackTrace": [
          "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest.shouldPrintTheParametersWhenCallingAMethodWithArgs(ReturnsSmartNullsTest.java:57)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<... unstubbed withArgs([oompa, lumpa]) method on mock> but was:<... unstubbed withArgs([]) method on mock>"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 32,
    "changedFiles": {
      "org/mockito/internal/configuration/SpyAnnotationEngine.java": {
        "modified": [
          [
            19
          ],
          [
            49
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.SpyShouldHaveNiceNameTest",
        "methodName": "shouldPrintNiceName",
        "stackTrace": [
          "org.fest.assertions.Fail.failure(Fail.java:228)",
          "org.fest.assertions.Assert.failure(Assert.java:149)",
          "org.fest.assertions.StringAssert.contains(StringAssert.java:221)",
          "org.mockitousage.bugs.SpyShouldHaveNiceNameTest.shouldPrintNiceName(SpyShouldHaveNiceNameTest.java:31)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "<'"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 33,
    "changedFiles": {
      "org/mockito/internal/invocation/InvocationMatcher.java": {
        "modified": [
          [
            98
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest",
        "methodName": "shouldStubbingWork",
        "stackTrace": [
          "org.junit.Assert.fail(Assert.java:86)",
          "org.junit.Assert.assertTrue(Assert.java:41)",
          "org.junit.Assert.assertNotNull(Assert.java:621)",
          "org.junit.Assert.assertNotNull(Assert.java:631)",
          "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest.shouldStubbingWork(InheritedGenericsPolimorphicCallTest.java:39)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest",
        "methodName": "shouldVerificationWorks",
        "stackTrace": [
          "org.mockito.exceptions.Reporter.wantedButNotInvoked(Reporter.java:260)",
          "org.mockito.internal.verification.checkers.MissingInvocationChecker.check(MissingInvocationChecker.java:41)",
          "org.mockito.internal.verification.Times.verify(Times.java:35)",
          "org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)",
          "org.mockito.internal.MockHandler.handle(MockHandler.java:80)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)",
          "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest$MyIterable$$EnhancerByMockitoWithCGLIB$$3083d39e.iterator(<generated>)",
          "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest.shouldVerificationWorks(InheritedGenericsPolimorphicCallTest.java:48)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 34,
    "changedFiles": {
      "org/mockito/internal/invocation/InvocationMatcher.java": {
        "modified": [
          [
            106
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.invocation.InvocationMatcherTest",
        "methodName": "shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:107)",
          "org.mockito.internal.invocation.InvocationMatcherTest.shouldMatchCaptureArgumentsWhenArgsCountDoesNOTMatch(InvocationMatcherTest.java:152)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "0"
      },
      {
        "className": "org.mockitousage.basicapi.UsingVarargsTest",
        "methodName": "shouldMatchEasilyEmptyVararg",
        "stackTrace": [
          "org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:107)",
          "org.mockito.internal.MockHandler.handle(MockHandler.java:88)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)",
          "org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$$EnhancerByMockitoWithCGLIB$$541b73b5.foo(<generated>)",
          "org.mockitousage.basicapi.UsingVarargsTest.shouldMatchEasilyEmptyVararg(UsingVarargsTest.java:175)"
        ],
        "error": "java.lang.ArrayIndexOutOfBoundsException",
        "message": "0"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 35,
    "changedFiles": {
      "org/mockito/Matchers.java": {
        "modified": [
          [
            362
          ],
          [
            479
          ],
          [
            516
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
        "methodName": "shouldNotThrowNPEWhenIntPassed",
        "stackTrace": [
          "org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenIntPassed(NPEWithCertainMatchersTest.java:38)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
        "methodName": "shouldNotThrowNPEWhenIntegerPassed",
        "stackTrace": [
          "org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenIntegerPassed(NPEWithCertainMatchersTest.java:31)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
        "methodName": "shouldNotThrowNPEWhenIntegerPassedToEq",
        "stackTrace": [
          "org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenIntegerPassedToEq(NPEWithCertainMatchersTest.java:45)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.NPEWithCertainMatchersTest",
        "methodName": "shouldNotThrowNPEWhenIntegerPassedToSame",
        "stackTrace": [
          "org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenIntegerPassedToSame(NPEWithCertainMatchersTest.java:52)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 36,
    "changedFiles": {
      "org/mockito/internal/invocation/Invocation.java": {
        "modified": [
          [
            11
          ],
          [
            202
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.invocation.InvocationTest",
        "methodName": "shouldScreamWhenCallingRealMethodOnInterface",
        "stackTrace": [
          "org.mockito.internal.invocation.Invocation.callRealMethod(Invocation.java:202)",
          "org.mockito.internal.invocation.InvocationTest.shouldScreamWhenCallingRealMethodOnInterface(InvocationTest.java:175)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.mockitousage.spies.SpyingOnInterfacesTest",
        "methodName": "shouldFailInRuntimeWhenCallingRealMethodOnInterface",
        "stackTrace": [
          "$java.util.List$$EnhancerByMockitoWithCGLIB$$5e16a93a.CGLIB$get$9(<generated>)",
          "$java.util.List$$EnhancerByMockitoWithCGLIB$$5e16a93a$$FastClassByMockitoWithCGLIB$$77b7a0f9.invoke(<generated>)",
          "org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)",
          "org.mockito.internal.creation.AbstractMockitoMethodProxy.invokeSuper(AbstractMockitoMethodProxy.java:11)",
          "org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod.invoke(CGLIBProxyRealMethod.java:20)",
          "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod.invoke(FilteredCGLIBProxyRealMethod.java:26)",
          "org.mockito.internal.invocation.Invocation.callRealMethod(Invocation.java:202)",
          "org.mockitousage.spies.SpyingOnInterfacesTest$1.answer(SpyingOnInterfacesTest.java:38)",
          "org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:28)",
          "org.mockito.internal.MockHandler.handle(MockHandler.java:95)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)",
          "$java.util.List$$EnhancerByMockitoWithCGLIB$$5e16a93a.get(<generated>)",
          "org.mockitousage.spies.SpyingOnInterfacesTest.shouldFailInRuntimeWhenCallingRealMethodOnInterface(SpyingOnInterfacesTest.java:44)"
        ],
        "error": "java.lang.NoSuchMethodError",
        "message": "java.lang.Object.get(I)Ljava/lang/Object;"
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 37,
    "changedFiles": {
      "org/mockito/internal/stubbing/answers/AnswersValidator.java": {
        "modified": [
          [
            28
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.stubbing.answers.AnswersValidatorTest",
        "methodName": "shouldFailWhenCallingRealMethodOnIterface",
        "stackTrace": [
          "org.mockito.internal.stubbing.answers.AnswersValidatorTest.shouldFailWhenCallingRealMethodOnIterface(AnswersValidatorTest.java:99)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.mockitousage.spies.SpyingOnInterfacesTest",
        "methodName": "shouldFailFastWhenCallingRealMethodOnInterface",
        "stackTrace": [
          "org.mockitousage.spies.SpyingOnInterfacesTest.shouldFailFastWhenCallingRealMethodOnInterface(SpyingOnInterfacesTest.java:28)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Mockito",
    "bugId": 38,
    "changedFiles": {
      "org/mockito/internal/verification/argumentmatching/ArgumentMatchingTool.java": {
        "modified": [
          [
            48
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest",
        "methodName": "shouldWorkFineWhenGivenArgIsNull",
        "stackTrace": [
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.toStringEquals(ArgumentMatchingTool.java:48)",
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(ArgumentMatchingTool.java:28)",
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingToolTest.shouldWorkFineWhenGivenArgIsNull(ArgumentMatchingToolTest.java:82)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      },
      {
        "className": "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest",
        "methodName": "shouldAllowPassingNullArgument",
        "stackTrace": [
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.toStringEquals(ArgumentMatchingTool.java:48)",
          "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool.getSuspiciouslyNotMatchingArgsIndexes(ArgumentMatchingTool.java:28)",
          "org.mockito.internal.verification.checkers.MissingInvocationChecker.check(MissingInvocationChecker.java:38)",
          "org.mockito.internal.verification.Times.verify(Times.java:34)",
          "org.mockito.internal.MockHandler.intercept(MockHandler.java:74)",
          "org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:46)",
          "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest$Fun$$EnhancerByMockitoWithCGLIB$$53ac1e6.doFun(<generated>)",
          "org.mockitousage.bugs.ActualInvocationHasNullArgumentNPEBugTest.shouldAllowPassingNullArgument(ActualInvocationHasNullArgumentNPEBugTest.java:30)"
        ],
        "error": "java.lang.NullPointerException",
        "message": ""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 1,
    "changedFiles": {
      "org/joda/time/Partial.java": {
        "modified": [
          [
            217
          ]
        ]
      },
      "org/joda/time/field/UnsupportedDurationField.java": {
        "modified": [
          [
            227
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestPartial_Constructors",
        "methodName": "testConstructorEx7_TypeArray_intArray",
        "stackTrace": [
          "org.joda.time.TestPartial_Constructors.testConstructorEx7_TypeArray_intArray(TestPartial_Constructors.java:284)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 2,
    "changedFiles": {
      "org/joda/time/Partial.java": {
        "modified": [
          [
            218
          ],
          [
            449
          ]
        ]
      },
      "org/joda/time/field/UnsupportedDurationField.java": {
        "modified": [
          [
            227
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestPartial_Basics",
        "methodName": "testWith_baseAndArgHaveNoRange",
        "stackTrace": [
          "org.joda.time.Partial.<init>(Partial.java:224)",
          "org.joda.time.Partial.with(Partial.java:466)",
          "org.joda.time.TestPartial_Basics.testWith_baseAndArgHaveNoRange(TestPartial_Basics.java:469)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Types array must not contain duplicate: era and year"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 3,
    "changedFiles": {
      "org/joda/time/MutableDateTime.java": {
        "modified": [
          [
            639
          ],
          [
            660
          ],
          [
            681
          ],
          [
            702
          ],
          [
            723
          ],
          [
            764
          ],
          [
            785
          ],
          [
            816
          ],
          [
            847
          ],
          [
            880
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestMutableDateTime_Adds",
        "methodName": "testAddYears_int_dstOverlapWinter_addZero",
        "stackTrace": [
          "org.joda.time.TestMutableDateTime_Adds.testAddYears_int_dstOverlapWinter_addZero(TestMutableDateTime_Adds.java:227)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-30T02:30:00.000+0[1]:00> but was:<...10-30T02:30:00.000+0[2]:00>"
      },
      {
        "className": "org.joda.time.TestMutableDateTime_Adds",
        "methodName": "testAddDays_int_dstOverlapWinter_addZero",
        "stackTrace": [
          "org.joda.time.TestMutableDateTime_Adds.testAddDays_int_dstOverlapWinter_addZero(TestMutableDateTime_Adds.java:271)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-30T02:30:00.000+0[1]:00> but was:<...10-30T02:30:00.000+0[2]:00>"
      },
      {
        "className": "org.joda.time.TestMutableDateTime_Adds",
        "methodName": "testAddWeeks_int_dstOverlapWinter_addZero",
        "stackTrace": [
          "org.joda.time.TestMutableDateTime_Adds.testAddWeeks_int_dstOverlapWinter_addZero(TestMutableDateTime_Adds.java:300)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-30T02:30:00.000+0[1]:00> but was:<...10-30T02:30:00.000+0[2]:00>"
      },
      {
        "className": "org.joda.time.TestMutableDateTime_Adds",
        "methodName": "testAdd_DurationFieldType_int_dstOverlapWinter_addZero",
        "stackTrace": [
          "org.joda.time.TestMutableDateTime_Adds.testAdd_DurationFieldType_int_dstOverlapWinter_addZero(TestMutableDateTime_Adds.java:187)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-30T02:30:00.000+0[1]:00> but was:<...10-30T02:30:00.000+0[2]:00>"
      },
      {
        "className": "org.joda.time.TestMutableDateTime_Adds",
        "methodName": "testAddMonths_int_dstOverlapWinter_addZero",
        "stackTrace": [
          "org.joda.time.TestMutableDateTime_Adds.testAddMonths_int_dstOverlapWinter_addZero(TestMutableDateTime_Adds.java:249)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-30T02:30:00.000+0[1]:00> but was:<...10-30T02:30:00.000+0[2]:00>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 4,
    "changedFiles": {
      "org/joda/time/Partial.java": {
        "modified": [
          [
            464
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestPartial_Basics",
        "methodName": "testWith3",
        "stackTrace": [
          "org.joda.time.TestPartial_Basics.testWith3(TestPartial_Basics.java:364)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 5,
    "changedFiles": {
      "org/joda/time/Period.java": {
        "modified": [
          [
            1628
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestPeriod_Basics",
        "methodName": "testNormalizedStandard_periodType_months1",
        "stackTrace": [
          "org.joda.time.PeriodType.setIndexedField(PeriodType.java:690)",
          "org.joda.time.Period.withYears(Period.java:896)",
          "org.joda.time.Period.normalizedStandard(Period.java:1631)",
          "org.joda.time.TestPeriod_Basics.testNormalizedStandard_periodType_months1(TestPeriod_Basics.java:1522)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": "Field is not supported"
      },
      {
        "className": "org.joda.time.TestPeriod_Basics",
        "methodName": "testNormalizedStandard_periodType_months2",
        "stackTrace": [
          "org.joda.time.PeriodType.setIndexedField(PeriodType.java:690)",
          "org.joda.time.Period.withYears(Period.java:896)",
          "org.joda.time.Period.normalizedStandard(Period.java:1631)",
          "org.joda.time.TestPeriod_Basics.testNormalizedStandard_periodType_months2(TestPeriod_Basics.java:1529)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": "Field is not supported"
      },
      {
        "className": "org.joda.time.TestPeriod_Basics",
        "methodName": "testNormalizedStandard_periodType_monthsWeeks",
        "stackTrace": [
          "org.joda.time.PeriodType.setIndexedField(PeriodType.java:690)",
          "org.joda.time.Period.withYears(Period.java:896)",
          "org.joda.time.Period.normalizedStandard(Period.java:1631)",
          "org.joda.time.TestPeriod_Basics.testNormalizedStandard_periodType_monthsWeeks(TestPeriod_Basics.java:1557)"
        ],
        "error": "java.lang.UnsupportedOperationException",
        "message": "Field is not supported"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 6,
    "changedFiles": {
      "org/joda/time/chrono/GJChronology.java": {
        "modified": [
          [
            196
          ],
          [
            979
          ],
          [
            1001
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.chrono.TestGJDate",
        "methodName": "test_cutoverPreZero",
        "stackTrace": [
          "org.joda.time.chrono.TestGJDate.test_cutoverPreZero(TestGJDate.java:132)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      },
      {
        "className": "org.joda.time.chrono.TestGJDate",
        "methodName": "test_plusWeekyears_positiveToNegative_crossCutover",
        "stackTrace": [
          "org.joda.time.chrono.TestGJDate.test_plusWeekyears_positiveToNegative_crossCutover(TestGJDate.java:124)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0002-06-30> but was:<-0001-06-28>"
      },
      {
        "className": "org.joda.time.chrono.TestGJDate",
        "methodName": "test_plusYears_positiveToZero_crossCutover",
        "stackTrace": [
          "org.joda.time.chrono.JulianChronology.adjustYearForSet(JulianChronology.java:81)",
          "org.joda.time.chrono.JulianChronology.getDateMidnightMillis(JulianChronology.java:207)",
          "org.joda.time.chrono.BasicChronology.getDateTimeMillis(BasicChronology.java:159)",
          "org.joda.time.chrono.JulianChronology.getDateTimeMillis(JulianChronology.java:50)",
          "org.joda.time.chrono.GJChronology.convertByYear(GJChronology.java:85)",
          "org.joda.time.chrono.GJChronology.gregorianToJulianByYear(GJChronology.java:588)",
          "org.joda.time.chrono.GJChronology$CutoverField.gregorianToJulian(GJChronology.java:924)",
          "org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(GJChronology.java:979)",
          "org.joda.time.chrono.GJChronology$LinkedDurationField.add(GJChronology.java:1099)",
          "org.joda.time.LocalDate.plusYears(LocalDate.java:1205)",
          "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToZero_crossCutover(TestGJDate.java:99)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 0 for year is not supported"
      },
      {
        "className": "org.joda.time.chrono.TestGJDate",
        "methodName": "test_plusYears_positiveToNegative_crossCutover",
        "stackTrace": [
          "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToNegative_crossCutover(TestGJDate.java:105)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0002-06-30> but was:<-0001-06-30>"
      },
      {
        "className": "org.joda.time.chrono.TestGJDate",
        "methodName": "test_plusWeekyears_positiveToZero_crossCutover",
        "stackTrace": [
          "org.joda.time.field.SkipDateTimeField.set(SkipDateTimeField.java:92)",
          "org.joda.time.chrono.GJChronology.convertByWeekyear(GJChronology.java:96)",
          "org.joda.time.chrono.GJChronology.gregorianToJulianByWeekyear(GJChronology.java:596)",
          "org.joda.time.chrono.GJChronology$CutoverField.gregorianToJulian(GJChronology.java:922)",
          "org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(GJChronology.java:979)",
          "org.joda.time.LocalDate$Property.addToCopy(LocalDate.java:1965)",
          "org.joda.time.chrono.TestGJDate.test_plusWeekyears_positiveToZero_crossCutover(TestGJDate.java:118)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 0 for year is not supported"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 7,
    "changedFiles": {
      "org/joda/time/format/DateTimeFormatter.java": {
        "modified": [
          [
            708
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthDay_feb29_newYork_startOfYear",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)",
          "org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)",
          "org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)",
          "org.joda.time.format.DateTimeFormatter.parseInto(DateTimeFormatter.java:715)",
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthDay_feb29_newYork_startOfYear(TestDateTimeFormatter.java:932)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Cannot parse \"2 29\": Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthDay_feb29_tokyo_endOfYear",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.format.DateTimeParserBucket$SavedField.set(DateTimeParserBucket.java:483)",
          "org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:366)",
          "org.joda.time.format.DateTimeParserBucket.computeMillis(DateTimeParserBucket.java:359)",
          "org.joda.time.format.DateTimeFormatter.parseInto(DateTimeFormatter.java:715)",
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthDay_feb29_tokyo_endOfYear(TestDateTimeFormatter.java:960)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Cannot parse \"2 29\": Value 29 for dayOfMonth must be in the range [1,28]"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 8,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            279
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZone",
        "methodName": "testForOffsetHoursMinutes_int_int",
        "stackTrace": [
          "org.joda.time.DateTimeZone.forOffsetHoursMinutes(DateTimeZone.java:280)",
          "org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(TestDateTimeZone.java:316)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Minutes out of range: -15"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 9,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            96
          ],
          [
            257
          ],
          [
            282
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZone",
        "methodName": "testForOffsetHoursMinutes_int_int",
        "stackTrace": [
          "org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(TestDateTimeZone.java:328)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 10,
    "changedFiles": {
      "org/joda/time/base/BaseSingleFieldPeriod.java": {
        "modified": [
          [
            52
          ],
          [
            104
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDays",
        "methodName": "testFactory_daysBetween_RPartial_MonthDay",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BaseChronology.set(BaseChronology.java:240)",
          "org.joda.time.base.BaseSingleFieldPeriod.between(BaseSingleFieldPeriod.java:104)",
          "org.joda.time.Days.daysBetween(Days.java:141)",
          "org.joda.time.TestDays.testFactory_daysBetween_RPartial_MonthDay(TestDays.java:130)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.TestMonths",
        "methodName": "testFactory_monthsBetween_RPartial_MonthDay",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:220)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BaseChronology.set(BaseChronology.java:240)",
          "org.joda.time.base.BaseSingleFieldPeriod.between(BaseSingleFieldPeriod.java:104)",
          "org.joda.time.Months.monthsBetween(Months.java:161)",
          "org.joda.time.TestMonths.testFactory_monthsBetween_RPartial_MonthDay(TestMonths.java:137)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 11,
    "changedFiles": {
      "org/joda/time/tz/ZoneInfoCompiler.java": {
        "modified": [
          [
            68
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.tz.TestCompiler",
        "methodName": "testDateTimeZoneBuilder",
        "stackTrace": [
          "org.joda.time.tz.TestCompiler.testDateTimeZoneBuilder(TestCompiler.java:99)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 12,
    "changedFiles": {
      "org/joda/time/LocalDate.java": {
        "modified": [
          [
            210
          ],
          [
            243
          ]
        ]
      },
      "org/joda/time/LocalDateTime.java": {
        "modified": [
          [
            199
          ],
          [
            236
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestLocalDateTime_Constructors",
        "methodName": "testFactory_fromDateFields_beforeYearZero1",
        "stackTrace": [
          "org.joda.time.TestLocalDateTime_Constructors.testFactory_fromDateFields_beforeYearZero1(TestLocalDateTime_Constructors.java:155)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0000-02-03T04:05:06.007> but was:<0001-02-03T04:05:06.007>"
      },
      {
        "className": "org.joda.time.TestLocalDateTime_Constructors",
        "methodName": "testFactory_fromDateFields_beforeYearZero3",
        "stackTrace": [
          "org.joda.time.TestLocalDateTime_Constructors.testFactory_fromDateFields_beforeYearZero3(TestLocalDateTime_Constructors.java:163)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0002-02-03T04:05:06.007> but was:<0003-02-03T04:05:06.007>"
      },
      {
        "className": "org.joda.time.TestLocalDateTime_Constructors",
        "methodName": "testFactory_fromCalendarFields_beforeYearZero1",
        "stackTrace": [
          "org.joda.time.TestLocalDateTime_Constructors.testFactory_fromCalendarFields_beforeYearZero1(TestLocalDateTime_Constructors.java:117)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0000-02-03T04:05:06.007> but was:<0001-02-03T04:05:06.007>"
      },
      {
        "className": "org.joda.time.TestLocalDateTime_Constructors",
        "methodName": "testFactory_fromCalendarFields_beforeYearZero3",
        "stackTrace": [
          "org.joda.time.TestLocalDateTime_Constructors.testFactory_fromCalendarFields_beforeYearZero3(TestLocalDateTime_Constructors.java:125)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0002-02-03T04:05:06.007> but was:<0003-02-03T04:05:06.007>"
      },
      {
        "className": "org.joda.time.TestLocalDate_Constructors",
        "methodName": "testFactory_fromDateFields_beforeYearZero1",
        "stackTrace": [
          "org.joda.time.TestLocalDate_Constructors.testFactory_fromDateFields_beforeYearZero1(TestLocalDate_Constructors.java:147)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0000-02-03> but was:<0001-02-03>"
      },
      {
        "className": "org.joda.time.TestLocalDate_Constructors",
        "methodName": "testFactory_fromDateFields_beforeYearZero3",
        "stackTrace": [
          "org.joda.time.TestLocalDate_Constructors.testFactory_fromDateFields_beforeYearZero3(TestLocalDate_Constructors.java:155)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0002-02-03> but was:<0003-02-03>"
      },
      {
        "className": "org.joda.time.TestLocalDate_Constructors",
        "methodName": "testFactory_fromCalendarFields_beforeYearZero1",
        "stackTrace": [
          "org.joda.time.TestLocalDate_Constructors.testFactory_fromCalendarFields_beforeYearZero1(TestLocalDate_Constructors.java:109)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0000-02-03> but was:<0001-02-03>"
      },
      {
        "className": "org.joda.time.TestLocalDate_Constructors",
        "methodName": "testFactory_fromCalendarFields_beforeYearZero3",
        "stackTrace": [
          "org.joda.time.TestLocalDate_Constructors.testFactory_fromCalendarFields_beforeYearZero3(TestLocalDate_Constructors.java:117)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<-0002-02-03> but was:<0003-02-03>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 13,
    "changedFiles": {
      "org/joda/time/format/PeriodFormatterBuilder.java": {
        "modified": [
          [
            1098
          ],
          [
            1133
          ],
          [
            1142
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.format.TestISOPeriodFormat",
        "methodName": "testFormatStandard_negative",
        "stackTrace": [
          "org.joda.time.format.TestISOPeriodFormat.testFormatStandard_negative(TestISOPeriodFormat.java:135)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<PT[-]0.008S> but was:<PT[]0.008S>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 14,
    "changedFiles": {
      "org/joda/time/chrono/BasicMonthOfYearDateTimeField.java": {
        "modified": [
          [
            209
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testPlusMonths_int_negativeFromLeap",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:218)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(BasicMonthOfYearDateTimeField.java:213)",
          "org.joda.time.MonthDay.withFieldAdded(MonthDay.java:519)",
          "org.joda.time.MonthDay.plusMonths(MonthDay.java:592)",
          "org.joda.time.TestMonthDay_Basics.testPlusMonths_int_negativeFromLeap(TestMonthDay_Basics.java:460)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testMinusDays_int_negativeFromLeap",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:218)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(BasicMonthOfYearDateTimeField.java:213)",
          "org.joda.time.field.BaseDateTimeField.add(BaseDateTimeField.java:324)",
          "org.joda.time.MonthDay.withFieldAdded(MonthDay.java:519)",
          "org.joda.time.MonthDay.minusDays(MonthDay.java:672)",
          "org.joda.time.TestMonthDay_Basics.testMinusDays_int_negativeFromLeap(TestMonthDay_Basics.java:610)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testPlusMonths_int_fromLeap",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:218)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(BasicMonthOfYearDateTimeField.java:213)",
          "org.joda.time.MonthDay.withFieldAdded(MonthDay.java:519)",
          "org.joda.time.MonthDay.plusMonths(MonthDay.java:592)",
          "org.joda.time.TestMonthDay_Basics.testPlusMonths_int_fromLeap(TestMonthDay_Basics.java:453)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testPlusMonths_int_negativeEndOfMonthAdjust",
        "stackTrace": [
          "org.joda.time.TestMonthDay_Basics.testPlusMonths_int_negativeEndOfMonthAdjust(TestMonthDay_Basics.java:476)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<--02-29> but was:<--02-28>"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testMinusMonths_int_endOfMonthAdjust",
        "stackTrace": [
          "org.joda.time.TestMonthDay_Basics.testMinusMonths_int_endOfMonthAdjust(TestMonthDay_Basics.java:563)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<--02-29> but was:<--02-28>"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testMinusMonths_int_negativeFromLeap",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:218)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(BasicMonthOfYearDateTimeField.java:213)",
          "org.joda.time.MonthDay.withFieldAdded(MonthDay.java:519)",
          "org.joda.time.MonthDay.minusMonths(MonthDay.java:652)",
          "org.joda.time.TestMonthDay_Basics.testMinusMonths_int_negativeFromLeap(TestMonthDay_Basics.java:554)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testMinusMonths_int_fromLeap",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:218)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(BasicMonthOfYearDateTimeField.java:213)",
          "org.joda.time.MonthDay.withFieldAdded(MonthDay.java:519)",
          "org.joda.time.MonthDay.minusMonths(MonthDay.java:652)",
          "org.joda.time.TestMonthDay_Basics.testMinusMonths_int_fromLeap(TestMonthDay_Basics.java:547)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      },
      {
        "className": "org.joda.time.TestMonthDay_Basics",
        "methodName": "testPlusDays_int_fromLeap",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:218)",
          "org.joda.time.field.PreciseDurationDateTimeField.set(PreciseDurationDateTimeField.java:78)",
          "org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(BasicMonthOfYearDateTimeField.java:213)",
          "org.joda.time.field.BaseDateTimeField.add(BaseDateTimeField.java:324)",
          "org.joda.time.MonthDay.withFieldAdded(MonthDay.java:519)",
          "org.joda.time.MonthDay.plusDays(MonthDay.java:612)",
          "org.joda.time.TestMonthDay_Basics.testPlusDays_int_fromLeap(TestMonthDay_Basics.java:509)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 15,
    "changedFiles": {
      "org/joda/time/field/FieldUtils.java": {
        "modified": [
          [
            138
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.field.TestFieldUtils",
        "methodName": "testSafeMultiplyLongInt",
        "stackTrace": [
          "org.joda.time.field.TestFieldUtils.testSafeMultiplyLongInt(TestFieldUtils.java:261)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": ""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 16,
    "changedFiles": {
      "org/joda/time/format/DateTimeFormatter.java": {
        "modified": [
          [
            709
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthOnly_baseStartYear",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthOnly_baseStartYear(TestDateTimeFormatter.java:877)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-05-01T12:20:30.000+09:00> but was:<2000-05-01T12:20:30.000+09:00>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthOnly_parseStartYear",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthOnly_parseStartYear(TestDateTimeFormatter.java:884)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-01-01T12:20:30.000+09:00> but was:<2000-01-01T12:20:30.000+09:00>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthOnly_baseEndYear",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthOnly_baseEndYear(TestDateTimeFormatter.java:891)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-05-31T12:20:30.000+09:00> but was:<2000-05-31T12:20:30.000+09:00>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthOnly",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthOnly(TestDateTimeFormatter.java:870)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-05-09T12:20:30.000+01:00> but was:<2000-05-09T12:20:30.000+01:00>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthDay_withDefaultYear_feb29",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthDay_withDefaultYear_feb29(TestDateTimeFormatter.java:912)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-02-29T12:20:30.000Z> but was:<2012-02-29T12:20:30.000Z>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthDay_feb29",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthDay_feb29(TestDateTimeFormatter.java:905)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-02-29T12:20:30.000Z> but was:<2000-02-29T12:20:30.000Z>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseInto_monthOnly_parseEndYear",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseInto_monthOnly_parseEndYear(TestDateTimeFormatter.java:898)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2004-12-31T12:20:30.000+09:00> but was:<2000-12-31T12:20:30.000+09:00>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 17,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            1167
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testBug3476684_adjustOffset",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testBug3476684_adjustOffset(TestDateTimeZoneCutover.java:1259)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2012-02-25T23:15:00.000-03:00> but was:<2012-02-25T23:15:00.000-02:00>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 18,
    "changedFiles": {
      "org/joda/time/chrono/GJChronology.java": {
        "modified": [
          [
            364
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.chrono.TestGJChronology",
        "methodName": "testLeapYearRulesConstruction",
        "stackTrace": [
          "org.joda.time.field.FieldUtils.verifyValueBounds(FieldUtils.java:233)",
          "org.joda.time.chrono.BasicChronology.getDateMidnightMillis(BasicChronology.java:605)",
          "org.joda.time.chrono.BasicChronology.getDateTimeMillis(BasicChronology.java:177)",
          "org.joda.time.chrono.GregorianChronology.getDateTimeMillis(GregorianChronology.java:45)",
          "org.joda.time.chrono.GJChronology.getDateTimeMillis(GJChronology.java:364)",
          "org.joda.time.base.BaseDateTime.<init>(BaseDateTime.java:254)",
          "org.joda.time.DateMidnight.<init>(DateMidnight.java:343)",
          "org.joda.time.chrono.TestGJChronology.testLeapYearRulesConstruction(TestGJChronology.java:496)"
        ],
        "error": "org.joda.time.IllegalFieldValueException",
        "message": "Value 29 for dayOfMonth must be in the range [1,28]"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 19,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            900
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testDateTimeCreation_london",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testDateTimeCreation_london(TestDateTimeZoneCutover.java:1266)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...1-10-30T01:15:00.000[+01:00]> but was:<...1-10-30T01:15:00.000[Z]>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 20,
    "changedFiles": {
      "org/joda/time/format/DateTimeFormatterBuilder.java": {
        "modified": [
          [
            2542
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.format.TestDateTimeFormatterBuilder",
        "methodName": "test_printParseZoneDawsonCreek",
        "stackTrace": [
          "org.joda.time.format.DateTimeFormatter.parseDateTime(DateTimeFormatter.java:866)",
          "org.joda.time.format.TestDateTimeFormatterBuilder.test_printParseZoneDawsonCreek(TestDateTimeFormatterBuilder.java:262)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid format: \"2007-03-04 12:30 America/Dawson_Creek\" is malformed at \"_Creek\""
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 22,
    "changedFiles": {
      "org/joda/time/base/BasePeriod.java": {
        "modified": [
          [
            222
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDuration_Basics",
        "methodName": "testToPeriod_fixedZone",
        "stackTrace": [
          "org.joda.time.TestDuration_Basics.testToPeriod_fixedZone(TestDuration_Basics.java:483)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<64>"
      },
      {
        "className": "org.joda.time.TestPeriod_Constructors",
        "methodName": "testConstructor_long_fixedZone",
        "stackTrace": [
          "org.joda.time.TestPeriod_Constructors.testConstructor_long_fixedZone(TestPeriod_Constructors.java:188)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<0> but was:<64>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 23,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            564
          ],
          [
            572
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZone",
        "methodName": "testForID_String_old",
        "stackTrace": [
          "org.joda.time.TestDateTimeZone.testForID_String_old(TestDateTimeZone.java:282)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<[WET]> but was:<[Europe/London]>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 24,
    "changedFiles": {
      "org/joda/time/format/DateTimeParserBucket.java": {
        "modified": [
          [
            355
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_weekyear_month_week_2010",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_weekyear_month_week_2010(TestDateTimeFormatter.java:428)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2010-01-04> but was:<2008-12-29>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_weekyear_month_week_2011",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_weekyear_month_week_2011(TestDateTimeFormatter.java:434)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2011-01-03> but was:<2010-01-04>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_weekyear_month_week_2012",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_weekyear_month_week_2012(TestDateTimeFormatter.java:440)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2012-01-02> but was:<2011-01-03>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_year_month_week_2010",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_year_month_week_2010(TestDateTimeFormatter.java:454)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2010-01-04> but was:<2008-12-29>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_year_month_week_2011",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_year_month_week_2011(TestDateTimeFormatter.java:460)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2011-01-03> but was:<2010-01-04>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_year_month_week_2012",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_year_month_week_2012(TestDateTimeFormatter.java:466)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2012-01-02> but was:<2011-01-03>"
      },
      {
        "className": "org.joda.time.format.TestDateTimeFormatter",
        "methodName": "testParseLocalDate_year_month_week_2016",
        "stackTrace": [
          "org.joda.time.format.TestDateTimeFormatter.testParseLocalDate_year_month_week_2016(TestDateTimeFormatter.java:490)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2016-01-04> but was:<2014-12-29>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 25,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            899
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "test_DateTime_constructor_Moscow_Autumn",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.test_DateTime_constructor_Moscow_Autumn(TestDateTimeZoneCutover.java:922)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-28T02:30:00.000+0[4]:00> but was:<...10-28T02:30:00.000+0[3]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "test_getOffsetFromLocal_Moscow_Autumn_overlap_mins",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.doTest_getOffsetFromLocal(TestDateTimeZoneCutover.java:1232)",
          "org.joda.time.TestDateTimeZoneCutover.doTest_getOffsetFromLocal(TestDateTimeZoneCutover.java:1217)",
          "org.joda.time.TestDateTimeZoneCutover.test_getOffsetFromLocal_Moscow_Autumn_overlap_mins(TestDateTimeZoneCutover.java:913)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "2007-10-28T02:00:00.000+03:00 expected:<...10-28T02:00:00.000+0[4]:00> but was:<...10-28T02:00:00.000+0[3]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "test_getOffsetFromLocal_Moscow_Autumn",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.doTest_getOffsetFromLocal(TestDateTimeZoneCutover.java:1232)",
          "org.joda.time.TestDateTimeZoneCutover.doTest_getOffsetFromLocal(TestDateTimeZoneCutover.java:1217)",
          "org.joda.time.TestDateTimeZoneCutover.test_getOffsetFromLocal_Moscow_Autumn(TestDateTimeZoneCutover.java:895)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "2007-10-28T02:00:00.000+03:00 expected:<...10-28T02:00:00.000+0[4]:00> but was:<...10-28T02:00:00.000+0[3]:00>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 26,
    "changedFiles": {
      "org/joda/time/DateTimeZone.java": {
        "modified": [
          [
            936
          ]
        ]
      },
      "org/joda/time/chrono/ZonedChronology.java": {
        "modified": [
          [
            436
          ],
          [
            448
          ],
          [
            460
          ],
          [
            481
          ],
          [
            528
          ],
          [
            540
          ]
        ]
      },
      "org/joda/time/field/LenientDateTimeField.java": {
        "modified": [
          [
            75
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testWithSecondOfMinuteInDstChange",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testWithSecondOfMinuteInDstChange(TestDateTimeZoneCutover.java:1101)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-31T02:30:00.123+0[2]:00> but was:<...10-31T02:30:00.123+0[1]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testWithMinuteOfHourInDstChange",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testWithMinuteOfHourInDstChange(TestDateTimeZoneCutover.java:1094)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-31T02:00:10.123+0[2]:00> but was:<...10-31T02:00:10.123+0[1]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testWithMinuteOfHourInDstChange_mockZone",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testWithMinuteOfHourInDstChange_mockZone(TestDateTimeZoneCutover.java:1073)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-31T01:30:00.000+0[1:0]0> but was:<...10-31T01:30:00.000+0[0:3]0>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testBug2182444_usCentral",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testBug2182444_usCentral(TestDateTimeZoneCutover.java:1166)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2008-11-02T01:00:00.000-06:00> but was:<2008-11-02T01:00:00.000-05:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testWithMillisOfSecondInDstChange_Paris_summer",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(TestDateTimeZoneCutover.java:1108)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-31T02:30:10.000+0[2]:00> but was:<...10-31T02:30:10.000+0[1]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testWithHourOfDayInDstChange",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testWithHourOfDayInDstChange(TestDateTimeZoneCutover.java:1087)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...10-31T02:30:10.123+0[2]:00> but was:<...10-31T02:30:10.123+0[1]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testWithMillisOfSecondInDstChange_NewYork_winter",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(TestDateTimeZoneCutover.java:1129)"
        ],
        "error": "junit.framework.ComparisonFailure",
        "message": "expected:<...11-04T01:30:00.000-0[5]:00> but was:<...11-04T01:30:00.000-0[4]:00>"
      },
      {
        "className": "org.joda.time.TestDateTimeZoneCutover",
        "methodName": "testBug2182444_ausNSW",
        "stackTrace": [
          "org.joda.time.TestDateTimeZoneCutover.testBug2182444_ausNSW(TestDateTimeZoneCutover.java:1187)"
        ],
        "error": "junit.framework.AssertionFailedError",
        "message": "expected:<2008-04-06T02:00:00.000+11:00> but was:<2008-04-06T02:00:00.000+10:00>"
      }
    ]
  },
  {
    "project": "Time",
    "bugId": 27,
    "changedFiles": {
      "org/joda/time/format/PeriodFormatterBuilder.java": {
        "modified": [
          [
            801
          ]
        ]
      }
    },
    "failingTests": [
      {
        "className": "org.joda.time.format.TestPeriodFormatterBuilder",
        "methodName": "testBug2495455",
        "stackTrace": [
          "org.joda.time.format.PeriodFormatter.parseMutablePeriod(PeriodFormatter.java:326)",
          "org.joda.time.format.PeriodFormatter.parsePeriod(PeriodFormatter.java:304)",
          "org.joda.time.format.TestPeriodFormatterBuilder.testBug2495455(TestPeriodFormatterBuilder.java:869)"
        ],
        "error": "java.lang.IllegalArgumentException",
        "message": "Invalid format: \"PT1003199059S\" is malformed at \"1003199059S\""
      }
    ]
  }
]