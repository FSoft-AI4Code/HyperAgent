{"issue_id": "MATH-175", "title": "chiSquare(double[] expected, long[] observed) is returning incorrect test statistic", "description": "\n<div class=\"user-content-block\">\n<p>ChiSquareTestImpl is returning incorrect chi-squared value. An implicit assumption of public double chiSquare(double[] expected, long[] observed) is that the sum of expected and observed are equal. That is, in the code:<br/>\nfor (int i = 0; i &lt; observed.length; i++) </p>\n{\n            dev = ((double) observed[i] - expected[i]);\n            sumSq += dev * dev / expected[i];\n        }\n<p>this calculation is only correct if sum(observed)==sum(expected). When they are not equal then one must rescale the expected value by sum(observed) / sum(expected) so that they are.<br/>\nIronically, it is an example in the unit test ChiSquareTestTest that highlights the error:</p>\n<p>long[] observed1 = </p>\n{ 500, 623, 72, 70, 31 }\n<p>;<br/>\n        double[] expected1 = </p>\n{ 485, 541, 82, 61, 37 }\n<p>;<br/>\n        assertEquals( \"chi-square test statistic\", 16.4131070362, testStatistic.chiSquare(expected1, observed1), 1E-10);<br/>\n        assertEquals(\"chi-square p-value\", 0.002512096, testStatistic.chiSquareTest(expected1, observed1), 1E-9);</p>\n<p>16.413 is not correct because the expected values do not make sense, they should be: 521.19403 581.37313  88.11940  65.55224  39.76119 so that the sum of expected equals 1296 which is the sum of observed.</p>\n<p>Here is some R code (r-project.org) which proves it:<br/>\n&gt; o1<br/>\n<span class=\"error\">[1]</span> 500 623  72  70  31<br/>\n&gt; e1<br/>\n<span class=\"error\">[1]</span> 485 541  82  61  37<br/>\n&gt; chisq.test(o1,p=e1,rescale.p=TRUE)</p>\n<p>        Chi-squared test for given probabilities</p>\n<p>data:  o1 <br/>\nX-squared = 9.0233, df = 4, p-value = 0.06052</p>\n<p>&gt; chisq.test(o1,p=e1,rescale.p=TRUE)$observed<br/>\n<span class=\"error\">[1]</span> 500 623  72  70  31<br/>\n&gt; chisq.test(o1,p=e1,rescale.p=TRUE)$expected<br/>\n<span class=\"error\">[1]</span> 521.19403 581.37313  88.11940  65.55224  39.76119</p>\n</div>\n"}