{"issue_id": "COMPRESS-252", "title": "Writing 7z empty entries produces incorrect or corrupt archive", "description": "\n<div class=\"user-content-block\">\n<p>I couldn't find an exact rule that causes this incorrect behavior, but I tried to reduce it to some simple scenarios to reproduce it:</p>\n<p>Input: A folder with certain files -&gt; tried to archive it.<br/>\nIf the folder contains more than 7 files the incorrect behavior appears.</p>\n<p>Scenario 1: 7 empty files<br/>\nResult: The created archive contains a single folder entry with the name of the archive (no matter which was the name of the file)</p>\n<p>Scenario 2: 7 files, some empty, some with content<br/>\nResult: The created archive contains a folder entry with the name of the archive and a number of file entries also with the name of the archive. The number of the entries is equal to the number of non empty files.</p>\n<p>Scenario 3: 8 empty files<br/>\nResult: 7zip Manager cannot open archive and stops working.</p>\n<p>Scenario 4.1: 8 files: some empty, some with content, last file (alphabetically) with content<br/>\nResult: same behavior as described for Scenario 2.</p>\n<p>Scenario 4.2: 8 files, some empty, some with content, last file empy<br/>\nResult: archive is corrupt, the following message is received: \"Cannot open file 'archivename.7z' as archive\" (7Zip Manager does not crash).</p>\n</div>\n"}