{"issue_id": "998", "title": "xmlParser() with ParseSettings.htmlDefault does not put end tag to lower case", "description": "\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='@Test public void test() {\n    Parser parser = Parser.xmlParser().settings(ParseSettings.htmlDefault);\n    Document document = Jsoup.parse(\"&lt;div&gt;test&lt;/DIV&gt;&lt;p&gt;&lt;/p&gt;\", \"\", parser);\n    assertEquals(\"&lt;div&gt;\\n test\\n&lt;/div&gt;\\n&lt;p&gt;&lt;/p&gt;\", document.toString()); // fail -&gt; toString() = \"&lt;div&gt;\\n test\\n &lt;p&gt;&lt;/p&gt;\\n&lt;/div&gt;\"\n}\n\n@Test public void test1() {\n    Parser parser = Parser.xmlParser().settings(ParseSettings.htmlDefault);\n    Document document = Jsoup.parse(\"&lt;DIV&gt;test&lt;/div&gt;&lt;p&gt;&lt;/p&gt;\", \"\", parser);\n    assertEquals(\"&lt;div&gt;\\n test\\n&lt;/div&gt;\\n&lt;p&gt;&lt;/p&gt;\", document.toString()); // pass\n}'><pre><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">test</span>() {\n    <span class=\"pl-smi\">Parser</span> <span class=\"pl-s1\">parser</span> = <span class=\"pl-s1\">Parser</span>.<span class=\"pl-en\">xmlParser</span>().<span class=\"pl-en\">settings</span>(<span class=\"pl-smi\">ParseSettings</span>.<span class=\"pl-s1\">htmlDefault</span>);\n    <span class=\"pl-smi\">Document</span> <span class=\"pl-s1\">document</span> = <span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">parse</span>(<span class=\"pl-s\">\"&lt;div&gt;test&lt;/DIV&gt;&lt;p&gt;&lt;/p&gt;\"</span>, <span class=\"pl-s\">\"\"</span>, <span class=\"pl-s1\">parser</span>);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-s\">\"&lt;div&gt;\\n test\\n&lt;/div&gt;\\n&lt;p&gt;&lt;/p&gt;\"</span>, <span class=\"pl-s1\">document</span>.<span class=\"pl-en\">toString</span>()); <span class=\"pl-c\">// fail -&gt; toString() = \"&lt;div&gt;\\n test\\n &lt;p&gt;&lt;/p&gt;\\n&lt;/div&gt;\"</span>\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">test1</span>() {\n    <span class=\"pl-smi\">Parser</span> <span class=\"pl-s1\">parser</span> = <span class=\"pl-s1\">Parser</span>.<span class=\"pl-en\">xmlParser</span>().<span class=\"pl-en\">settings</span>(<span class=\"pl-smi\">ParseSettings</span>.<span class=\"pl-s1\">htmlDefault</span>);\n    <span class=\"pl-smi\">Document</span> <span class=\"pl-s1\">document</span> = <span class=\"pl-s1\">Jsoup</span>.<span class=\"pl-en\">parse</span>(<span class=\"pl-s\">\"&lt;DIV&gt;test&lt;/div&gt;&lt;p&gt;&lt;/p&gt;\"</span>, <span class=\"pl-s\">\"\"</span>, <span class=\"pl-s1\">parser</span>);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-s\">\"&lt;div&gt;\\n test\\n&lt;/div&gt;\\n&lt;p&gt;&lt;/p&gt;\"</span>, <span class=\"pl-s1\">document</span>.<span class=\"pl-en\">toString</span>()); <span class=\"pl-c\">// pass</span>\n}</pre></div>\n"}