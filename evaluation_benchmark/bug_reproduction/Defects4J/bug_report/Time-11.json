{"issue_id": "18", "title": "NPE in DateTimeZoneBuilder", "description": "\n<p dir=\"auto\">When a DateTimeZone is build with duplicate-named 'recurring saving time' in a first thread, all goes Ok: a warning message is generated and an identifier is automatically generated in PrecalculatedZone.create(). When a second thread does the same, an NPE is generated in ZoneInfoCompiler.verbose().</p>\n<p dir=\"auto\">The cause is that the cVerbose ThreadLocal is incorrectly initialized in ZoneInfoCompiler:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   static {\n        cVerbose.set(Boolean.FALSE);\n    }\"><pre>   <span class=\"pl-k\">static</span> {\n        <span class=\"pl-s1\">cVerbose</span>.<span class=\"pl-en\">set</span>(<span class=\"pl-smi\">Boolean</span>.<span class=\"pl-c1\">FALSE</span>);\n    }</pre></div>\n<p dir=\"auto\">...will initialize cVerbose only for the first thread and not for the subsequent ones. The NPE is caused by the autoboxing in:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   public static boolean verbose() {\n        return cVerbose.get();\n    }\"><pre>   <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">verbose</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">cVerbose</span>.<span class=\"pl-en\">get</span>();\n    }</pre></div>\n<p dir=\"auto\">A better approach could be to remove the initialization and test for null:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static boolean verbose(){\n    Boolean verbose = cVerbose.get();\n    return (verbose != null) ? verbose : false;\n}\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">verbose</span>(){\n    <span class=\"pl-smi\">Boolean</span> <span class=\"pl-s1\">verbose</span> = <span class=\"pl-s1\">cVerbose</span>.<span class=\"pl-en\">get</span>();\n    <span class=\"pl-k\">return</span> (<span class=\"pl-s1\">verbose</span> != <span class=\"pl-c1\">null</span>) ? <span class=\"pl-s1\">verbose</span> : <span class=\"pl-c1\">false</span>;\n}</pre></div>\n<hr/>\n<p dir=\"auto\">Here follows a test case:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void testDateTimeZoneBuilder() throws Exception {\n        getTestDataTimeZoneBuilder().toDateTimeZone(&quot;TestDTZ1&quot;, true);\n        Thread t = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                getTestDataTimeZoneBuilder().toDateTimeZone(&quot;TestDTZ2&quot;, true);\n            }\n        });\n        t.start();\n        t.join();\n    }\n\n    private DateTimeZoneBuilder getTestDataTimeZoneBuilder() {\n         return new DateTimeZoneBuilder()\n         .addCutover(1601, 'w', 1, 1, 1, false, 7200000)\n         .setStandardOffset(3600000)\n         .addRecurringSavings(&quot;&quot;, 3600000, 1601, Integer.MAX_VALUE, 'w', 3, -1, 1, false, 7200000)\n         .addRecurringSavings(&quot;&quot;, 0, 1601, Integer.MAX_VALUE, 'w', 10, -1, 1, false, 10800000);\n    }\"><pre>    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">testDateTimeZoneBuilder</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n        <span class=\"pl-en\">getTestDataTimeZoneBuilder</span>().<span class=\"pl-en\">toDateTimeZone</span>(<span class=\"pl-s\">\"TestDTZ1\"</span>, <span class=\"pl-c1\">true</span>);\n        <span class=\"pl-smi\">Thread</span> <span class=\"pl-s1\">t</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Thread</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Runnable</span>() {\n            <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n            <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">run</span>() {\n                <span class=\"pl-en\">getTestDataTimeZoneBuilder</span>().<span class=\"pl-en\">toDateTimeZone</span>(<span class=\"pl-s\">\"TestDTZ2\"</span>, <span class=\"pl-c1\">true</span>);\n            }\n        });\n        <span class=\"pl-s1\">t</span>.<span class=\"pl-en\">start</span>();\n        <span class=\"pl-s1\">t</span>.<span class=\"pl-en\">join</span>();\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">DateTimeZoneBuilder</span> <span class=\"pl-s1\">getTestDataTimeZoneBuilder</span>() {\n         <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DateTimeZoneBuilder</span>()\n         .<span class=\"pl-en\">addCutover</span>(<span class=\"pl-c1\">1601</span>, <span class=\"pl-s\">'w'</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">7200000</span>)\n         .<span class=\"pl-en\">setStandardOffset</span>(<span class=\"pl-c1\">3600000</span>)\n         .<span class=\"pl-en\">addRecurringSavings</span>(<span class=\"pl-s\">\"\"</span>, <span class=\"pl-c1\">3600000</span>, <span class=\"pl-c1\">1601</span>, <span class=\"pl-smi\">Integer</span>.<span class=\"pl-c1\">MAX_VALUE</span>, <span class=\"pl-s\">'w'</span>, <span class=\"pl-c1\">3</span>, -<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">7200000</span>)\n         .<span class=\"pl-en\">addRecurringSavings</span>(<span class=\"pl-s\">\"\"</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1601</span>, <span class=\"pl-smi\">Integer</span>.<span class=\"pl-c1\">MAX_VALUE</span>, <span class=\"pl-s\">'w'</span>, <span class=\"pl-c1\">10</span>, -<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">10800000</span>);\n    }</pre></div>\n"}