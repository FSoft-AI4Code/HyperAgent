{"issue_id": "1058", "title": "Template types on methods incorrectly trigger inference of a template on the class if that template type is unknown", "description": "See i.e.\r\n\r\n\r\n\r\n/**\r\n  * @constructor\r\n  * @template CLASS\r\n  */\r\nvar Class = function() {};\r\n\r\n/**\r\n  * @param {function(CLASS):CLASS} a\r\n  * @template T\r\n  */\r\nClass.prototype.foo = function(a) {\r\n  return 'string';\r\n};\r\n\r\n/** @param {number} a\r\n  * @return {string} */\r\nvar a = function(a) { return '' };\r\n\r\nnew Class().foo(a);\r\n\r\n\r\nThe CLASS type is never specified. If the @template T line is removed from the foo method, the block compiles with but with the @annotation on the method, the compiler seems to try to infer CLASS from the usage and fails compilation."}