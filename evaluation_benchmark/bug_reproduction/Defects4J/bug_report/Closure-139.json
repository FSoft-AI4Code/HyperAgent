{"issue_id": "33", "title": "Redefinition of a function in third party code can be miscompiled", "description": "<b>What steps will reproduce the problem?</b>\n1. Run this code snippet and observe that it doesn't raise an error:\r\n\r\nfunction assert(b) {if (!b) throw &quot;error&quot;}\r\n\r\nassert(f() === 1)\r\nvar f = function() {return 2;}\r\nassert(f() === 2)\r\n\r\nfunction f() {return 1;}\r\n\r\n2. Compile it as third_party:\r\n3. Observe that the first definition of f has been changed from an assignment to a declaration, and that the code now raises an error.\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nr8\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThis bug is originally from a blog comment[1], I don't know if it has hit anyone in the wild yet.\r\n\r\n1) http://webreflection.blogspot.com/2009/11/google-closure-im-not-impressed.html#1604178721861066706"}