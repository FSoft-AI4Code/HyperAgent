{"issue_id": "113", "title": "Compiler gives false error with respect to unreachable code", "description": "Try compiling the following in the Closure Compiler UI:\r\n\r\n// ==ClosureCompiler==\r\n// @compilation_level SIMPLE_OPTIMIZATIONS\r\n// @output_file_name default.js\r\n// ==/ClosureCompiler==\r\n\r\nfunction instanceOf(value, type) {\r\n  try {\r\n    // first try built-in test -- if it succeeds, we're golden.\r\n    if (value instanceof type) {\r\n      return true;\r\n    }\r\n  } catch (exception) {\r\n    if (exception instanceof TypeError) {\r\n      throw exception; // indicates that &quot;type&quot; is not a type\r\n    }\r\n    // Otherwise, assume the exception was caused by \r\n    // the Firefox 1.0.3 bug.  Work around it.\r\n    return (type === Object);\r\n  }\r\n}\r\n\r\nThe Compiler issues the following warning:\r\n\r\nJSC_UNREACHABLE_CODE: unreachable code at line 7 character 0\r\n  } catch (exception) {\r\n\r\nThis code is from a Firefox extension (Chickenfoot) where (at least\r\nhistorically) calling instanceof in this manner could throw a security\r\nexception (or something else, I forget what -- Chickenfoot has been around\r\nsince Firefox 1.0) which is why the catch blocks is there and is indeed\r\nreachable."}