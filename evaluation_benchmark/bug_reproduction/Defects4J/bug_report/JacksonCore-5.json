{"issue_id": "173", "title": "An exception is thrown for a valid JsonPointer expression", "description": "\n<p dir=\"auto\">Json-Patch project leader has noted me that there is a bug on JsonPointer implementation and I have decided to investigate.</p>\n<p dir=\"auto\">Basically if you do something like <code class=\"notranslate\">JsonPointer.compile(\"/1e0\");</code> it throws a NumberFormatExpcetion which is not true. This is because this piece of code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private final static int _parseInt(String str)\n    {\n        final int len = str.length();\n        if (len == 0) {\n            return -1;\n        }\n        for (int i = 0; i &lt; len; ++i) {\n            char c = str.charAt(i++);\n            if (c &gt; '9' || c &lt; '0') {\n                return -1;\n            }\n        }\n        // for now, we'll assume 32-bit indexes are fine\n        return NumberInput.parseInt(str);\n    }\"><pre><span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">_parseInt</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">str</span>)\n    {\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">len</span> = <span class=\"pl-s1\">str</span>.<span class=\"pl-en\">length</span>();\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">len</span> == <span class=\"pl-c1\">0</span>) {\n            <span class=\"pl-k\">return</span> -<span class=\"pl-c1\">1</span>;\n        }\n        <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>; <span class=\"pl-s1\">i</span> &lt; <span class=\"pl-s1\">len</span>; ++<span class=\"pl-s1\">i</span>) {\n            <span class=\"pl-smi\">char</span> <span class=\"pl-s1\">c</span> = <span class=\"pl-s1\">str</span>.<span class=\"pl-en\">charAt</span>(<span class=\"pl-s1\">i</span>++);\n            <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">c</span> &gt; <span class=\"pl-s\">'9'</span> || <span class=\"pl-s1\">c</span> &lt; <span class=\"pl-s\">'0'</span>) {\n                <span class=\"pl-k\">return</span> -<span class=\"pl-c1\">1</span>;\n            }\n        }\n        <span class=\"pl-c\">// for now, we'll assume 32-bit indexes are fine</span>\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">NumberInput</span>.<span class=\"pl-en\">parseInt</span>(<span class=\"pl-s1\">str</span>);\n    }</pre></div>\n<p dir=\"auto\">When they found a number it interprets the segment as integer but in reality it should be the whole expression. For this reason I think that the condition should be changed to the inverse condition  (if it doesn't found any char then it is a number.</p>\n<p dir=\"auto\">If you want I can send you a PR as well.</p>\n<p dir=\"auto\">Alex.</p>\n"}