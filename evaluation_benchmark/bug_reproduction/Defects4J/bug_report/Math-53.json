{"issue_id": "MATH-618", "title": "Complex Add and Subtract handle NaN arguments differently, but javadoc contracts are the same", "description": "\n<div class=\"user-content-block\">\n<p>For both Complex add and subtract, the javadoc states that</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">     * If either <span class=\"code-keyword\">this</span> or &lt;code&gt;rhs&lt;/code&gt; has a NaN value in either part,\n     * {@link #NaN} is returned; otherwise Inifinite and NaN values are\n     * returned in the parts of the result according to the rules <span class=\"code-keyword\">for</span>\n     * {@link java.lang.<span class=\"code-object\">Double</span>} arithmetic\n</pre>\n</div></div>\n<p>Subtract includes an isNaN test and returns Complex.NaN if either complex argument isNaN; but add omits this test.  The test should be added to the add implementation (actually restored, since this looks like a code merge problem going back to 1.1).</p>\n</div>\n"}