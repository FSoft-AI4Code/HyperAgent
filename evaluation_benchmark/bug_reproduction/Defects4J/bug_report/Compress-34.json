{"issue_id": "COMPRESS-321", "title": "Exception in X7875_NewUnix.parseFromLocalFileData when parsing 0-sized \"ux\" local entry", "description": "\n<div class=\"user-content-block\">\n<p>When trying to detect content type of a zip file with Tika 1.10 (which uses Commons Compress 1.9 internally) in manner like this:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">        <span class=\"code-object\">byte</span>[] content = ... <span class=\"code-comment\">// whole zip file.\n</span>        <span class=\"code-object\">String</span> name = <span class=\"code-quote\">\"TR_01.ZIP\"</span>;\n        Tika tika = <span class=\"code-keyword\">new</span> Tika();\n        <span class=\"code-keyword\">return</span> tika.detect(content, name);\n</pre>\n</div></div>\n<p>it throws an exception:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">java.lang.ArrayIndexOutOfBoundsException: 13\n\tat org.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromLocalFileData(X7875_NewUnix.java:199)\n\tat org.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromCentralDirectoryData(X7875_NewUnix.java:220)\n\tat org.apache.commons.compress.archivers.zip.ExtraFieldUtils.parse(ExtraFieldUtils.java:174)\n\tat org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setCentralDirectoryExtra(ZipArchiveEntry.java:476)\n\tat org.apache.commons.compress.archivers.zip.ZipFile.readCentralDirectoryEntry(ZipFile.java:575)\n\tat org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(ZipFile.java:492)\n\tat org.apache.commons.compress.archivers.zip.ZipFile.&lt;init&gt;(ZipFile.java:216)\n\tat org.apache.commons.compress.archivers.zip.ZipFile.&lt;init&gt;(ZipFile.java:192)\n\tat org.apache.commons.compress.archivers.zip.ZipFile.&lt;init&gt;(ZipFile.java:153)\n\tat org.apache.tika.parser.pkg.ZipContainerDetector.detectZipFormat(ZipContainerDetector.java:141)\n\tat org.apache.tika.parser.pkg.ZipContainerDetector.detect(ZipContainerDetector.java:88)\n\tat org.apache.tika.detect.CompositeDetector.detect(CompositeDetector.java:77)\n\tat org.apache.tika.Tika.detect(Tika.java:155)\n\tat org.apache.tika.Tika.detect(Tika.java:183)\n\tat org.apache.tika.Tika.detect(Tika.java:223)\n</pre>\n</div></div>\n<p>The zip file does contain two .jpg images and is not a \"special\" (JAR, Openoffice, ... ) zip file.</p>\n<p>Unfortunately, the contents of the zip file is confidential and so I cannot attach it to this ticket as it is, although I can provide the parameters supplied to<br/>\norg.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromLocalFileData(X7875_NewUnix.java:199) as caught by the debugger:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">data = {<span class=\"code-object\">byte</span>[13]@2103}\n 0 = 85\n 1 = 84\n 2 = 5\n 3 = 0\n 4 = 7\n 5 = -112\n 6 = -108\n 7 = 51\n 8 = 85\n 9 = 117\n 10 = 120\n 11 = 0\n 12 = 0\noffset = 13\nlength = 0\n</pre>\n</div></div>\n<p>This data comes from the local zip entry for the first file, it seems the method tries to read more bytes than is actually available in the buffer.</p>\n<p>It seems that first 9 bytes of the buffer are 'UT' extended field with timestamp, followed by 0-sized 'ux' field (bytes 9-12) that is supposed to contain UID/GID - according to infozip's doc the 0-size is common for global dictionary, but the local dictionary should contain complete data. In this case for some reason it does contain 0-sized data.</p>\n<p>Note that 7zip and unzip can unzip the file without even a warning, so Commons Compress should be also able to handle that file correctly without choking on that exception.</p>\n</div>\n"}