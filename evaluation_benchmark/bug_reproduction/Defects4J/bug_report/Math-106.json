{"issue_id": "MATH-60", "title": "[math] Function math.fraction.ProperFractionFormat.parse(String, ParsePosition) return illogical result", "description": "\n<div class=\"user-content-block\">\n<p>Hello,</p>\n<p>I find illogical returned result from function \"Fraction parse(String source, <br/>\nParsePostion pos)\" (in class ProperFractionFormat of the Fraction Package) of <br/>\nthe Commons Math library. Please see the following code segment for more <br/>\ndetails:</p>\n<p>\"<br/>\nProperFractionFormat properFormat = new ProperFractionFormat();<br/>\nresult = null;<br/>\nString source = \"1 -1 / 2\";<br/>\nParsePosition pos = new ParsePosition(0);</p>\n<p>//Test 1 : fail <br/>\npublic void testParseNegative(){</p>\n<p>   String source = \"-1 -2 / 3\";<br/>\n   ParsePosition pos = new ParsePosition(0);</p>\n<p>   Fraction actual = properFormat.parse(source, pos);<br/>\n   assertNull(actual);<br/>\n}</p>\n<p>// Test2: success<br/>\npublic void testParseNegative(){</p>\n<p>   String source = \"-1 -2 / 3\";<br/>\n   ParsePosition pos = new ParsePosition(0);</p>\n<p>   Fraction actual = properFormat.parse(source, pos);  // return Fraction 1/3<br/>\n   assertEquals(1, source.getNumerator());<br/>\n   assertEquals(3, source.getDenominator());<br/>\n}</p>\n<p>\"</p>\n<p>Note: Similarly, when I passed in the following inputs: <br/>\n  input 2: (source = \u201c1 2 / -3\u201d, pos = 0)<br/>\n  input 3: ( source = \u201d -1 -2 / 3\u201d, pos = 0)</p>\n<p>Function \"Fraction parse(String, ParsePosition)\" returned Fraction 1/3 (means <br/>\nthe result Fraction had numerator = 1 and  denominator = 3)for all 3 inputs <br/>\nabove.</p>\n<p>I think the function does not handle parsing the numberator/ denominator <br/>\nproperly incase input string provide invalid numerator/denominator. </p>\n<p>Thank you!</p>\n</div>\n"}