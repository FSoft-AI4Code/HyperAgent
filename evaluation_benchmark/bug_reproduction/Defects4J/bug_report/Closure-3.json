{"issue_id": "864", "title": "optimization fails with variable in catch clause", "description": "Enter the following in the closure service:\r\n\r\nfunction getStack() {\r\n  var getErrorObject = function() {\r\n    try {\r\n      throw Error(&quot;&quot;);\r\n    } catch(err) {\r\n      return err;\r\n    }\r\n  };\r\n  return getErrorObject().stack;\r\n}\r\nwindow['getStackTrace']=getStack;\r\n\r\nUse Optimization = Simple. Note the following result:\r\n\r\nfunction getStack() \r\n{ \r\n  try \r\n  { \r\n    throw Error(&quot;&quot;); \r\n  }\r\n  catch(a) \r\n  { \r\n  } \r\n  return a.stack \r\n} \r\nwindow.getStackTrace = getStack;\r\n\r\nThe scope of the variable a is limited to the catch clause, but the compiler references it illegally as the return value of the inlined function.\r\n"}