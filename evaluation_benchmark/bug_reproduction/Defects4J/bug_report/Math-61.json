{"issue_id": "MATH-349", "title": "Dangerous code in \"PoissonDistributionImpl\"", "description": "\n<div class=\"user-content-block\">\n<p>In the following excerpt from class \"PoissonDistributionImpl\":</p>\n<div class=\"code panel\" style=\"border-style: solid;border-width: 1px;\"><div class=\"codeHeader panelHeader\" style=\"border-bottom-width: 1px;border-bottom-style: solid;\"><b>PoissonDistributionImpl.java</b></div><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">    <span class=\"code-keyword\">public</span> PoissonDistributionImpl(<span class=\"code-object\">double</span> p, NormalDistribution z) {\n        <span class=\"code-keyword\">super</span>();\n        setNormal(z);\n        setMean(p);\n    }\n</pre>\n</div></div>\n<p>(1) Overridable methods are called within the constructor.<br/>\n(2) The reference \"z\" is stored and modified within the class.</p>\n<p>I've encountered problem (1) in several classes while working on issue 348. In those cases, in order to remove potential problems, I copied/pasted the body of the \"setter\" methods inside the constructor but I think that a more elegant solution would be to remove the \"setters\" altogether (i.e. make the classes immutable).<br/>\nProblem (2) can also create unexpected behaviour. Is it really necessary to pass the \"NormalDistribution\" object; can't it be always created within the class?</p>\n</div>\n"}