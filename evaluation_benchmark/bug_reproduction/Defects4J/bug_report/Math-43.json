{"issue_id": "MATH-691", "title": "Statistics.setVarianceImpl makes getStandardDeviation produce NaN", "description": "\n<div class=\"user-content-block\">\n<p>Invoking SummaryStatistics.setVarianceImpl(new Variance(true/false) makes getStandardDeviation produce NaN. The code to reproduce it:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-object\">int</span>[] scores = {1, 2, 3, 4};\nSummaryStatistics stats = <span class=\"code-keyword\">new</span> SummaryStatistics();\nstats.setVarianceImpl(<span class=\"code-keyword\">new</span> Variance(<span class=\"code-keyword\">false</span>)); <span class=\"code-comment\">//use <span class=\"code-quote\">\"population variance\"</span>\n</span><span class=\"code-keyword\">for</span>(<span class=\"code-object\">int</span> i : scores) {\n  stats.addValue(i);\n}\n<span class=\"code-object\">double</span> sd = stats.getStandardDeviation();\n<span class=\"code-object\">System</span>.out.println(sd);\n</pre>\n</div></div>\n<p>A workaround suggested by Mikkel is:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">  <span class=\"code-object\">double</span> sd = FastMath.sqrt(stats.getSecondMoment() / stats.getN());\n</pre>\n</div></div>\n</div>\n"}