{"issue_id": "134", "title": "Argument matcher anyXxx() (i.e. anyString(), anyList()) should not match nulls", "description": "\n<p dir=\"auto\">This is a bug I'm seeing in 1.10.8 version (older version has the same issue - tested with 1.9.0).</p>\n<p dir=\"auto\">Given:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Function&lt;Object, Integer&gt; function = Mockito.mock(Function.class);\nwhen(function.apply(Mockito.anyString())).thenReturn(1);\nInteger result = function.apply(2);\"><pre><span class=\"pl-smi\">Function</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">function</span> = <span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Function</span>.<span class=\"pl-s1\">class</span>);\n<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">function</span>.<span class=\"pl-en\">apply</span>(<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-en\">anyString</span>())).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1</span>);\n<span class=\"pl-smi\">Integer</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-s1\">function</span>.<span class=\"pl-en\">apply</span>(<span class=\"pl-c1\">2</span>);</pre></div>\n<p dir=\"auto\">Expected behavior:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"result == null;\"><pre><span class=\"pl-s1\">result</span> == <span class=\"pl-c1\">null</span>;</pre></div>\n<p dir=\"auto\">Actual behavior:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"result == 1;\"><pre><span class=\"pl-s1\">result</span> == <span class=\"pl-c1\">1</span>;</pre></div>\n<p dir=\"auto\">Note that the function is called with an integer (not a string), and still the mocked function return the value which it should return only when a string is passed. The same works when using anyBoolean() or any other methof from any* family.</p>\n"}