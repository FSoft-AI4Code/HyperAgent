{"issue_id": "125", "title": "Prototypes declared with quotes produce a JSC_USED_GLOBAL_THIS warning.", "description": "Compiling the following code (in advanced optimizations with VERBOSE\r\nwarning levels):\r\n\r\n/** @constructor */\r\nfunction MyClass() {}\r\nMyClass.prototype[&quot;MyMethod&quot;] = function(a) {\r\n  this.a = a;\r\n}\r\nwindow[&quot;MyClass&quot;] = MyClass;\r\n\r\nResults in the following warning: &quot;dangerous use of the global this\r\nobject.&quot; This notation is convenient to declare a prototype that is purely\r\nused for export purposes. The warning can be suppressed by using an @this\r\nnotation.\r\n\r\nGiven the following externs:\r\n\r\n/**@interface */\r\nfunction MyParent() {}\r\n/** @param {*} a */\r\nMyParent.prototype.MyMethod = function(a) {}\r\n\r\nAnd the following code:\r\n\r\n/**\r\n* @constructor\r\n* @implements {MyParent}\r\n*/\r\nfunction MyClass() {}\r\nMyClass.prototype[&quot;MyMethod&quot;] = function(a) {\r\n  this.a2 = a;\r\n}\r\nwindow[&quot;MyClass&quot;] = MyClass;\r\n\r\nThe compiler also produces the waring: &quot;property MyMethod on interface\r\nMyParent is not implemented by type MyClass&quot;."}