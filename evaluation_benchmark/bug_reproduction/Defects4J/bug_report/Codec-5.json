{"issue_id": "CODEC-98", "title": "Base64InputStream causes NullPointerException on some input", "description": "\n<div class=\"user-content-block\">\n<p>Certain (malformed?) input to <tt>Base64InputStream</tt> causes a <tt>NullPointerException</tt> in <tt>Base64.decode</tt>.</p>\n<p>The exception occurs when <tt>Base64.decode</tt> is entered with the following conditions:</p>\n<ul>\n<li><tt>buffer</tt> is <tt>null</tt></li>\n<li><tt>modulus</tt> is <tt>3</tt> from a previous entry.</li>\n<li><tt>inAvail</tt> is <tt>-1</tt> because <tt>Base64InputStream.read</tt> reached EOF on line 150.</li>\n</ul>\n<p>Under these conditions, <tt>Base64.decode</tt> reaches line 581 with <tt>buffer</tt> still <tt>null</tt> and throws a <tt>NullPointerException</tt>.</p>\n<p>Here is some input data that will trigger it:</p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>H4sIAAAAAAAAAFvzloG1uIhBKiuxLFGvODW5tCizpFIvODM9LzXFPykrNbmE8//eDC2bq/+ZGJij\nGdiT8/NKUvNKShiYop2iGTiLgQoTS0qLUgsZ6hgYfRh4SjJSE3PS84GmZOSWMAj5gMzVz0nMS9cP\nLinKzEu3rigoLQJpXvNZ/AcbR8gDJgaGigIGBqbLayAuMUxNKdVLTyxJTc7QS07WSyzKLC7JL8lJ\n1StJLErMKynNSdTLyUxOzStO1fOB0AwQwMjEwOrJwJMbn+mSWFkclpiTmeID4joml2SWpYZk5qaW\nMEj45Bel62flpyTqlwAF9F2A9oBkrMEqnYtSoXyob1hy4z1dShgEIL4oLcnM0Q8N9XQBqubKjYfa\nDjTV1AfoZn2Im/WTk/XhbtaHu1kf6mZ9T5g2YED8BwKgj8WAbtIDuUkP5CY9mJt22FSkZEXf/QkK\noCIGeVRFSYlA/zsBCZjq//9/PvSP1VvMxMDkxcCe6ZuZk5NZ7MPAnemcUZSfl5+Tn15ZwiCF5n2E\nnDUoDhjVfhrpNABdpI5qWTJYmZ5nsD9Cg0pwSWnSyhOCaYXmAerMoDgsxnAkzG1R+XmpYPXL9Bln\n1RhJPQarL+dgYNM1MLUyMKioKAYFOCvIBb8vl8qCOFxA4/jAiRIU7HqgYN8zk/n7jNxWfbAXeXJS\nE4tLgOnUKbOk2IuBOzcfzqso6M1QmrzKkedPzcYO3QZu129As4xITlZI6QqYFNhz44v9EkFpCGua\nLmEQdkktS83JL8gF5g4FqBGlIJ+wAI1gKJtZEvTws/j3FluPu4lcr7ra9OfHKXIZNTa4FPd8n33J\nQXPFLte9AZe5uBaJvGrKVl+rbrTaXDZO6NwU7gnHOVgzzsmnGX2Y5GDqrst8wcTear0Ab1yj6PrD\nF977vL/5iUMg773My5qLLK8OVAu6Tz7Xcyjy9Uym02Z/+xY7m85nYo/t4E93FXFKOf9/a3X78neS\njE5Tu066K3Mdf17m66mbpXN9y34ZZ3ErRobfn+RfzVBIWj0vc82vY7YPvM5eLHHOulV77M6CoB4h\nxb/FjHWHRR+ldb6QmSP1ROGwGs+nx2quwitN7+mIpsRFhU37JPRoZe2ZjiX/70j7CS1tz51YP/3W\n/xfnV2i/4rAoYeAN9nA0NTQqBxYMQcGOAG5\n</pre>\n</div></div>\n<p>Say this is read from file with a <tt>byte[]</tt> of size <tt>1024</tt> using <tt>Base64InputStream.read(byte[])</tt>.  In the first iteration, all <tt>1190</tt> bytes get read into <tt>buf</tt>, then it enters <tt>Base64.setInitialBuffer</tt> and assigns the <tt>byte<span class=\"error\">[1024]</span></tt> to <tt>buffer</tt> and does a round of decoding.  When it then enters <tt>Base64.readResults</tt> on line <tt>162</tt> in <tt>Base64InputStream</tt>, it sets <tt>buffer</tt> to <tt>null</tt>, <tt>modulus</tt> has the left-over value <tt>3</tt>, and the NPE occurs the next iteration.</p>\n<p><tt>Base64InputStream</tt> could avoid this by returning right away on EOF (<tt>-1</tt>), but I think the real fix needs to happen in <tt>Base64</tt> since it this same situation could be created by direct use.  My guess is either more needs to happen in the body of the <tt>if</tt> on line <tt>542</tt> (set <tt>modulus</tt> to <tt>0</tt>?) or the condition on line <tt>573</tt> is flawed and needs adjusting.</p>\n</div>\n"}