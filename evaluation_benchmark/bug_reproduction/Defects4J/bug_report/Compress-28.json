{"issue_id": "COMPRESS-279", "title": "TarArchiveInputStream silently finished when unexpected EOF occured", "description": "\n<div class=\"user-content-block\">\n<p>I just found the following test case didn't raise an IOException as it used to be for a <b>tar trimmed on purpose</b> </p>\n<p>@Test<br/>\n  public void testCorruptedBzip2() throws IOException {<br/>\n    String archivePath = PathUtil.join(testdataDir, \"test.tar.bz2\");<br/>\n    TarArchiveInputStream input = null;<br/>\n    input = new TarArchiveInputStream(new BZip2CompressorInputStream(<br/>\n        GoogleFile.SYSTEM.newInputStream(archivePath), true));<br/>\n    ArchiveEntry nextMatchedEntry = input.getNextEntry();<br/>\n    while (nextMatchedEntry != null) </p>\n{\n      logger.infofmt(\"Extracting %s\", nextMatchedEntry.getName());\n      String outputPath = PathUtil.join(\"/tmp/\", nextMatchedEntry.getName());\n      OutputStream out = new FileOutputStream(outputPath);\n      ByteStreams.copy(input, out);\n      out.close();\n      nextMatchedEntry = input.getNextEntry();\n    }\n<p>  }</p>\n</div>\n"}