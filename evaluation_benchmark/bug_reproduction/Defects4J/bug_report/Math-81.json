{"issue_id": "MATH-308", "title": "ArrayIndexOutOfBoundException in EigenDecompositionImpl", "description": "\n<div class=\"user-content-block\">\n<p>The following test triggers an ArrayIndexOutOfBoundException:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">    <span class=\"code-keyword\">public</span> void testMath308() {\n\n        <span class=\"code-object\">double</span>[] mainTridiagonal = {\n            22.330154644539597, 46.65485522478641, 17.393672330044705, 54.46687435351116, 80.17800767709437\n        };\n        <span class=\"code-object\">double</span>[] secondaryTridiagonal = {\n            13.04450406501361, -5.977590941539671, 2.9040909856707517, 7.1570352792841225\n        };\n\n        <span class=\"code-comment\">// the reference values have been computed using routine DSTEMR\n</span>        <span class=\"code-comment\">// from the fortran library LAPACK version 3.2.1\n</span>        <span class=\"code-object\">double</span>[] refEigenValues = {\n            14.138204224043099, 18.847969733754262, 52.536278520113882, 53.456697699894512, 82.044413207204002\n        };\n        RealVector[] refEigenVectors = {\n            <span class=\"code-keyword\">new</span> ArrayRealVector(<span class=\"code-keyword\">new</span> <span class=\"code-object\">double</span>[] {  0.584677060845929, -0.367177264979103, -0.721453187784497,  0.052971054621812, -0.005740715188257 }),\n            <span class=\"code-keyword\">new</span> ArrayRealVector(<span class=\"code-keyword\">new</span> <span class=\"code-object\">double</span>[] {  0.713933751051495, -0.190582113553930,  0.671410443368332, -0.056056055955050,  0.006541576993581 }),\n            <span class=\"code-keyword\">new</span> ArrayRealVector(<span class=\"code-keyword\">new</span> <span class=\"code-object\">double</span>[] {  0.222368839324646,  0.514921891363332, -0.021377019336614,  0.801196801016305, -0.207446991247740 }),\n            <span class=\"code-keyword\">new</span> ArrayRealVector(<span class=\"code-keyword\">new</span> <span class=\"code-object\">double</span>[] {  0.314647769490148,  0.750806415553905, -0.167700312025760, -0.537092972407375,  0.143854968127780 }),\n            <span class=\"code-keyword\">new</span> ArrayRealVector(<span class=\"code-keyword\">new</span> <span class=\"code-object\">double</span>[] { -0.000462690386766, -0.002118073109055,  0.011530080757413,  0.252322434584915,  0.967572088232592 })\n        };\n\n        <span class=\"code-comment\">// the following line triggers the exception\n</span>        EigenDecomposition decomposition =\n            <span class=\"code-keyword\">new</span> EigenDecompositionImpl(mainTridiagonal, secondaryTridiagonal, MathUtils.SAFE_MIN);\n\n        <span class=\"code-object\">double</span>[] eigenValues = decomposition.getRealEigenvalues();\n        <span class=\"code-keyword\">for</span> (<span class=\"code-object\">int</span> i = 0; i &lt; refEigenValues.length; ++i) {\n            assertEquals(refEigenValues[i], eigenValues[i], 1.0e-6);\n            <span class=\"code-keyword\">if</span> (refEigenVectors[i].dotProduct(decomposition.getEigenvector(i)) &lt; 0) {\n                assertEquals(0, refEigenVectors[i].add(decomposition.getEigenvector(i)).getNorm(), 1.0e-6);\n            } <span class=\"code-keyword\">else</span> {\n                assertEquals(0, refEigenVectors[i].subtract(decomposition.getEigenvector(i)).getNorm(), 1.0e-6);\n            }\n        }\n\n    }\n</pre>\n</div></div>\n<p>Running the previous method as a Junit test triggers the exception when the EigenDecompositionImpl instance is built. The first few lines of the stack trace are:</p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>java.lang.ArrayIndexOutOfBoundsException: -1\n\tat org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(EigenDecompositionImpl.java:1545)\n\tat org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(EigenDecompositionImpl.java:1072)\n\tat org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(EigenDecompositionImpl.java:894)\n\tat org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:658)\n\tat org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:246)\n\tat org.apache.commons.math.linear.EigenDecompositionImpl.&lt;init&gt;(EigenDecompositionImpl.java:205)\n\tat org.apache.commons.math.linear.EigenDecompositionImplTest.testMath308(EigenDecompositionImplTest.java:136)\n</pre>\n</div></div>\n<p>I'm currently investigating this bug. It is not a simple index translation error between the original fortran (Lapack) and commons-math implementation.</p>\n</div>\n"}