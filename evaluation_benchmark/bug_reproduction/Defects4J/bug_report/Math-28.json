{"issue_id": "MATH-828", "title": "Not expected UnboundedSolutionException", "description": "\n<div class=\"user-content-block\">\n<p>SimplexSolver throws UnboundedSolutionException when trying to solve minimization linear programming problem. The number of exception thrown depends on the number of variables.</p>\n<p>In order to see that behavior of SimplexSolver first try to run JUnit test setting a final variable ENTITIES_COUNT = 2 and that will give almost good result and then set it to 15 and you'll get a massive of unbounded exceptions.<br/>\nFirst iteration is runned with predefined set of input data with which the Solver gives back an appropriate result.</p>\n<p>The problem itself is well tested by it's authors (mathematicians who I believe know what they developed) using Matlab 10 with no unbounded solutions on the same rules of creatnig random variables values.</p>\n<p>What is strange to me is the dependence of the number of UnboundedSolutionException exceptions on the number of variables in the problem.</p>\n<p>The problem is formulated as<br/>\nmin(1*t + 0*L) (for every r-th subject)<br/>\ns.t.<br/>\n-q(r) + QL &gt;= 0<br/>\nx(r)t - XL &gt;= 0<br/>\nL &gt;= 0<br/>\nwhere <br/>\nr = 1..R, <br/>\nL = </p>\n{l(1), l(2), ..., l(R)}\n<p> (vector of R rows and 1 column),<br/>\nQ - coefficients matrix MxR<br/>\nX - coefficients matrix NxR </p>\n</div>\n"}