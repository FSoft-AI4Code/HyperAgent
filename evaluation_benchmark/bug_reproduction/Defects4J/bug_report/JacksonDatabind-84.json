{"issue_id": "1647", "title": "Missing properties from base class when recursive types are involved.", "description": "\n<p dir=\"auto\">When a type hierarchy as follows is constructed and the base class' type is constructed first by the TypeFactory then serializing the sub class fails due to missing properties from the base class.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class Base implements IFace&lt;Sub&gt; { @JsonProperty int base = 1 }\nclass Sub { @JsonProperty int sub = 2 }\ninterface IFace&lt;T&gt; {}\"><pre class=\"notranslate\"><code>class Base implements IFace&lt;Sub&gt; { @JsonProperty int base = 1 }\nclass Sub { @JsonProperty int sub = 2 }\ninterface IFace&lt;T&gt; {}\n</code></pre></div>\n<p dir=\"auto\">Serializes sub as <code class=\"notranslate\">{\"sub\":2}</code> where <code class=\"notranslate\">{\"base\":1,\"sub\":2}</code> is expected.</p>\n<p dir=\"auto\">I've created a minimal scenario of this bug here: <a href=\"https://github.com/slobo-showbie/jackson-recursive-type-bug\">https://github.com/slobo-showbie/jackson-recursive-type-bug</a><br/>\nI've experienced this bug in 2.7.8, 2.8.8, and 2.8.8.1</p>\n"}