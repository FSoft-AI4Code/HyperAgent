{"issue_id": "LANG-552", "title": "StringUtils replaceEach - Bug or Missing Documentation ", "description": "\n<div class=\"user-content-block\">\n<p>The following Test Case for replaceEach fails with a null pointer exception.<br/>\nI have expected that all StringUtils methods are \"null-friendly\"<br/>\nThe use case is that i will stuff Values into the replacementList of which I do not want to check whether they are null.<br/>\nI admit the use case is not perfect, because it is unclear what happens on the replace.<br/>\nI outlined three expectations in the test case, of course only one should be met.</p>\n<p>If it is decided that none of them should be possible, I propose to update the documentation with what happens when null is passed as replacement string</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">import</span> <span class=\"code-keyword\">static</span> org.junit.Assert.assertEquals;\n\n<span class=\"code-keyword\">import</span> org.apache.commons.lang.StringUtils;\n<span class=\"code-keyword\">import</span> org.junit.Test;\n\n\n<span class=\"code-keyword\">public</span> <span class=\"code-keyword\">class </span>StringUtilsTest {\n\n\t@Test\n\t<span class=\"code-keyword\">public</span> void replaceEach(){\n\t\t<span class=\"code-object\">String</span> original = <span class=\"code-quote\">\"Hello World!\"</span>;\n\t\t<span class=\"code-object\">String</span>[] searchList = {<span class=\"code-quote\">\"Hello\"</span>, <span class=\"code-quote\">\"World\"</span>};\n\t\t<span class=\"code-object\">String</span>[] replacementList = {<span class=\"code-quote\">\"Greetings\"</span>, <span class=\"code-keyword\">null</span>};\n\t\t<span class=\"code-object\">String</span> result = StringUtils.replaceEach(original, searchList, replacementList);\n\t\tassertEquals(<span class=\"code-quote\">\"Greetings !\"</span>, result);\n\t\t<span class=\"code-comment\">//perhaps <span class=\"code-keyword\">this</span> is ok as well\n</span>                <span class=\"code-comment\">//assertEquals(<span class=\"code-quote\">\"Greetings World!\"</span>, result);\n</span>                <span class=\"code-comment\">//or even\n</span>\t\t<span class=\"code-comment\">//assertEquals(<span class=\"code-quote\">\"Greetings <span class=\"code-keyword\">null</span>!\"</span>, result);\n</span>\t}\n\n\t\n}\n</pre>\n</div></div>\n</div>\n"}