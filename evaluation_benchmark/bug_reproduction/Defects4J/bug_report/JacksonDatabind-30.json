{"issue_id": "965", "title": "BigDecimal values via @JsonTypeInfo/@JsonSubTypes get rounded", "description": "\n<p dir=\"auto\">When using an <code class=\"notranslate\">ObjectMapper</code> to serialize/deserialize a class with an <code class=\"notranslate\">Object</code> field annotated with a <code class=\"notranslate\">@JsonSubTypes.Type</code> that indicate <code class=\"notranslate\">BigDecimal</code>, it looks like the value is getting rounded to a double.</p>\n<p dir=\"auto\">I tried configuring <code class=\"notranslate\">DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS</code>, but that didn't seem to help.</p>\n<p dir=\"auto\">What I think is a valid repro is below, but let me know if I'm actually doing something wrong here.</p>\n<p dir=\"auto\">Thanks!</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='import org.junit.Test;\nimport org.junit.Assert;\n\nimport java.math.BigDecimal;\n\nimport com.fasterxml.jackson.annotation.*;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class JacksonTest {\n\n    enum Type { BIG_DECIMAL }\n\n    static class Wrapper {\n\n        @JsonIgnore\n        Type typeEnum;\n\n        @JsonIgnore\n        Object value;\n\n        Wrapper() { }\n\n        @JsonGetter(value = \"type\")\n        String getTypeString() {\n            return typeEnum.name();\n        }\n\n        @JsonSetter(value = \"type\")\n        void setTypeString(String type) {\n            this.typeEnum = Type.valueOf(type);\n        }\n\n        @JsonGetter(value = \"objectValue\") \n        Object getValue() {\n            return value;\n        }\n\n        @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.EXTERNAL_PROPERTY, property = \"type\")\n        @JsonSubTypes({ @JsonSubTypes.Type(name = \"BIG_DECIMAL\", value = BigDecimal.class) })\n        @JsonSetter(value = \"objectValue\") \n        private void setValue(Object value) {\n            this.value = value;\n        }\n    }\n\n    @Test\n    public void test() throws Exception {\n\n        ObjectMapper m = new ObjectMapper();\n        m.configure(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS, true);\n\n        Wrapper w = new Wrapper();\n        w.typeEnum = Type.BIG_DECIMAL;\n        w.value = new BigDecimal(\"-10000000000.0000000001\");\n\n        String json = m.writeValueAsString(w);\n        Wrapper w2 = m.readValue(json, Wrapper.class);\n\n        Assert.assertEquals(w.typeEnum, w2.typeEnum);\n        Assert.assertTrue(String.format(\"Expected %s = %s; got back %s = %s\",\n            w.value.getClass().getSimpleName(), w.value.toString(), w2.value.getClass().getSimpleName(), w2.value.toString()),\n            w.value.equals(w2.value));\n    }\n}'><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Assert</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">math</span>.<span class=\"pl-s1\">BigDecimal</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">annotation</span>.*;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">DeserializationFeature</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectMapper</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">JacksonTest</span> {\n\n    <span class=\"pl-k\">enum</span> <span class=\"pl-smi\">Type</span> { <span class=\"pl-c1\">BIG_DECIMAL</span> }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Wrapper</span> {\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonIgnore</span>\n        <span class=\"pl-smi\">Type</span> <span class=\"pl-s1\">typeEnum</span>;\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonIgnore</span>\n        <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">value</span>;\n\n        <span class=\"pl-smi\">Wrapper</span>() { }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonGetter</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"type\"</span>)\n        <span class=\"pl-smi\">String</span> <span class=\"pl-en\">getTypeString</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">typeEnum</span>.<span class=\"pl-en\">name</span>();\n        }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonSetter</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"type\"</span>)\n        <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setTypeString</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">type</span>) {\n            <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">typeEnum</span> = <span class=\"pl-s1\">Type</span>.<span class=\"pl-en\">valueOf</span>(<span class=\"pl-s1\">type</span>);\n        }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonGetter</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"objectValue\"</span>) \n        <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">getValue</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">value</span>;\n        }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonTypeInfo</span>(<span class=\"pl-s1\">use</span> = <span class=\"pl-smi\">JsonTypeInfo</span>.<span class=\"pl-c1\">Id</span>.<span class=\"pl-c1\">NAME</span>, <span class=\"pl-s1\">include</span> = <span class=\"pl-smi\">JsonTypeInfo</span>.<span class=\"pl-s1\">As</span>.<span class=\"pl-c1\">EXTERNAL_PROPERTY</span>, <span class=\"pl-s1\">property</span> = <span class=\"pl-s\">\"type\"</span>)\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonSubTypes</span>({ <span class=\"pl-c1\">@</span><span class=\"pl-smi\">JsonSubTypes</span>.<span class=\"pl-s1\">Type</span>(<span class=\"pl-s1\">name</span> = <span class=\"pl-s\">\"BIG_DECIMAL\"</span>, <span class=\"pl-s1\">value</span> = <span class=\"pl-smi\">BigDecimal</span>.<span class=\"pl-s1\">class</span>) })\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonSetter</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"objectValue\"</span>) \n        <span class=\"pl-k\">private</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setValue</span>(<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">value</span>) {\n            <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">value</span> = <span class=\"pl-s1\">value</span>;\n        }\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n\n        <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">m</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n        <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-smi\">DeserializationFeature</span>.<span class=\"pl-c1\">USE_BIG_DECIMAL_FOR_FLOATS</span>, <span class=\"pl-c1\">true</span>);\n\n        <span class=\"pl-smi\">Wrapper</span> <span class=\"pl-s1\">w</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Wrapper</span>();\n        <span class=\"pl-s1\">w</span>.<span class=\"pl-s1\">typeEnum</span> = <span class=\"pl-smi\">Type</span>.<span class=\"pl-c1\">BIG_DECIMAL</span>;\n        <span class=\"pl-s1\">w</span>.<span class=\"pl-s1\">value</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-s\">\"-10000000000.0000000001\"</span>);\n\n        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">json</span> = <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-s1\">w</span>);\n        <span class=\"pl-smi\">Wrapper</span> <span class=\"pl-s1\">w2</span> = <span class=\"pl-s1\">m</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">json</span>, <span class=\"pl-smi\">Wrapper</span>.<span class=\"pl-s1\">class</span>);\n\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-s1\">w</span>.<span class=\"pl-s1\">typeEnum</span>, <span class=\"pl-s1\">w2</span>.<span class=\"pl-s1\">typeEnum</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertTrue</span>(<span class=\"pl-s1\">String</span>.<span class=\"pl-en\">format</span>(<span class=\"pl-s\">\"Expected %s = %s; got back %s = %s\"</span>,\n            <span class=\"pl-s1\">w</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-en\">getClass</span>().<span class=\"pl-en\">getSimpleName</span>(), <span class=\"pl-s1\">w</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-en\">toString</span>(), <span class=\"pl-s1\">w2</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-en\">getClass</span>().<span class=\"pl-en\">getSimpleName</span>(), <span class=\"pl-s1\">w2</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-en\">toString</span>()),\n            <span class=\"pl-s1\">w</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-en\">equals</span>(<span class=\"pl-s1\">w2</span>.<span class=\"pl-s1\">value</span>));\n    }\n}</pre></div>\n"}