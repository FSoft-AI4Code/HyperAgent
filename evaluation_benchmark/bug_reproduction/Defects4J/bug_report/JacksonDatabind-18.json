{"issue_id": "734", "title": "Add basic error-recovery for <code>ObjectReader.readValues()</code>", "description": "\n<p dir=\"auto\">(follow up for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/733/hovercard\" data-id=\"64134339\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/733\" href=\"https://github.com/FasterXML/jackson-databind/issues/733\">#733</a>)</p>\n<p dir=\"auto\">In case of <code class=\"notranslate\">JsonProcessingException</code>, <code class=\"notranslate\">MappingIterator</code> will currently be left pointing right after whatever token was last tokenized (or character following tokenization error). While this is better than indeterminate state, ideally it should try to do some error recover. And although it may not be possible to recover successfully from all kinds of issues, it should be possible to do best effort given that iterator has some knowledge of state when it was opened; that is, it can try to heuristically match closing <code class=\"notranslate\">END_OBJECT</code>, depending on nesting level it was created at.</p>\n<p dir=\"auto\">In addition it may make sense to add a switch to prevent using of any automated heuristics, for those users who want full control over recovery.</p>\n"}