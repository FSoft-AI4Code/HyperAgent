{"issue_id": "785", "title": "anonymous object type inference inconsistency when used in union", "description": "Code:\r\n/** @param {{prop: string, prop2: (string|undefined)}} record */\r\nvar func = function(record) {\r\n  window.console.log(record.prop);\r\n}\r\n\r\n/** @param {{prop: string, prop2: (string|undefined)}|string} record */\r\nvar func2 = function(record) {\r\n  if (typeof record == 'string') {\r\n    window.console.log(record);\r\n  } else {\r\n    window.console.log(record.prop);\r\n  }\r\n}\r\n\r\nfunc({prop: 'a'});\r\nfunc2({prop: 'a'});\r\n\r\n\r\n\r\n\r\nerrors with:\r\nERROR - actual parameter 1 of func2 does not match formal parameter\r\nfound   : {prop: string}\r\nrequired: (string|{prop: string, prop2: (string|undefined)})\r\nfunc2({prop: 'a'});\r\n\r\n\r\nthe type of the record input to func and func2 are identical but the parameters to func2 allow some other type."}