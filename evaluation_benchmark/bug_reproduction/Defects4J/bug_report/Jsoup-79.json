{"issue_id": "1032", "title": "LeafNode.childNodes() throws UnsupportedOperationException.", "description": "\n<p dir=\"auto\"><code class=\"notranslate\">LeafNode.childNodes()</code> throws <code class=\"notranslate\">UnsupportedOperationException</code> since this commit:<br/>\n<a class=\"commit-link\" href=\"https://github.com/jhy/jsoup/commit/f71712ba5d28df09c9a5b6e3c8a37f05f5e3372d#diff-605d28890f72a0f43298f842d0a3414f\"><tt>f71712b</tt>#diff-605d28890f72a0f43298f842d0a3414f</a></p>\n<p dir=\"auto\">The javadoc of <code class=\"notranslate\">Node.childNodes()</code> says this:<br/>\n<code class=\"notranslate\">@return list of children. If no children, returns an empty list.</code></p>\n<p dir=\"auto\">But in the case of a LeafNode, which has no children, it throws <code class=\"notranslate\">UnsupportedOperationException</code>. This is because <code class=\"notranslate\">childNodes()</code> calls <code class=\"notranslate\">ensureChildNodes()</code>, which throws an exception when called on a <code class=\"notranslate\">LeafNode</code>.</p>\n<p dir=\"auto\">The result is that the calling application needs to guard against this case. But the application should not need to know if the <code class=\"notranslate\">Node</code> it has is a <code class=\"notranslate\">LeafNode</code> or not.</p>\n<p dir=\"auto\"><code class=\"notranslate\">LeafNode.childNodes()</code> should simply return an empty list as it used to do, and as per the javadoc.</p>\n"}