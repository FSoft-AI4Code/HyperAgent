{"issue_id": "82", "title": "Unclosed title tag causes JSoup to \"eat up\" rest of document", "description": "\n<p dir=\"auto\">Hi:</p>\n<p dir=\"auto\">We've come across an issue with parsing a document with an unclosed title tag. JSoup<br/>\nseems to \"eat up\" the rest of the document in its parsing and thus no elements after<br/>\nthe unclosed tag are available after the parse.</p>\n<p dir=\"auto\">While this is obviously not a valid document Firefox seems to handle it OK by displaying<br/>\nthe document and saying \"Untitled document\" in its title bar.</p>\n<p dir=\"auto\">We come across a lot of badly formed documents in our web crawls so having a fix<br/>\nfor this issue would be much appreciated. I've given some sample source below<br/>\nwhich demonstrates the bug (tested against JSoup 1.5.2).</p>\n<p dir=\"auto\">Many thanks,</p>\n<ul dir=\"auto\">\n<li>Francis.</li>\n</ul>\n<p dir=\"auto\">import org.jsoup.Jsoup;<br/>\nimport org.jsoup.nodes.Document;<br/>\nimport org.jsoup.nodes.Element;<br/>\nimport org.jsoup.select.Elements;</p>\n<p dir=\"auto\">public class UnclosedTitleTest {</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='public static void main(String args[]) throws Exception {\n    String html = \"&lt;html&gt;&lt;head&gt;&lt;title&gt;First parse&lt;/head&gt;\"\n          + \"&lt;body&gt;&lt;p&gt;Parsed HTML into a doc.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\";\n    Document doc = Jsoup.parse(html);\n\n    Elements elements = doc.select(\"p\");\n\n    for (Element element : elements) {\n        System.out.println(element.outerHtml());\n    }\n}'><pre class=\"notranslate\"><code>public static void main(String args[]) throws Exception {\n    String html = \"&lt;html&gt;&lt;head&gt;&lt;title&gt;First parse&lt;/head&gt;\"\n          + \"&lt;body&gt;&lt;p&gt;Parsed HTML into a doc.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;\";\n    Document doc = Jsoup.parse(html);\n\n    Elements elements = doc.select(\"p\");\n\n    for (Element element : elements) {\n        System.out.println(element.outerHtml());\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">}</p>\n"}