{"issue_id": "JXPATH-93", "title": "Binary operators behaviour involving node-sets is incorrect", "description": "\n<div class=\"user-content-block\">\n<p>According to XPath specification:<br/>\n\"If both objects to be compared are node-sets, then the comparison will be true if and only if there is a node in the first node-set and a node in the second node-set such that the result of performing the comparison on the string-values of the two nodes is true. If one object to be compared is a node-set and the other is a number, then the comparison will be true if and only if there is a node in the node-set such that the result of performing the comparison on the number to be compared and on the result of converting the string-value of that node to a number using the number function is true.\"</p>\n<p>But following example illustrates, that this is not a JXPath behaviour:</p>\n<p>        JXPathContext pathContext = JXPathContext<br/>\n                .newContext(DocumentBuilderFactory.newInstance()<br/>\n                        .newDocumentBuilder().parse(<br/>\n                                new InputSource(new StringReader(<br/>\n                                        \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;\\r\\n\"<br/>\n                                                + \"&lt;doc/&gt;\"))));<br/>\n        Boolean result = (Boolean) pathContext.getValue(\"2.0 &gt; child1\",<br/>\n                Boolean.class);<br/>\n        assertFalse(result.booleanValue());</p>\n<p>\"child1\" is not found - right operand node set is empty, but result is TRUE, instead of FALSE.</p>\n<p>Please, check greaterThan(), lesserThan(), etc methods of org.apache.xpath.objects.XObject for possible solution <img align=\"absmiddle\" alt=\"\" border=\"0\" class=\"emoticon\" height=\"16\" src=\"/jira/images/icons/emoticons/smile.png\" width=\"16\"/></p>\n</div>\n"}