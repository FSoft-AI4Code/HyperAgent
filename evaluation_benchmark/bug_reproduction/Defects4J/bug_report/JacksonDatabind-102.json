{"issue_id": "2064", "title": "Cannot set custom format for <code>SqlDateSerializer</code> globally", "description": "\n<p dir=\"auto\">Version: 2.9.5</p>\n<p dir=\"auto\">After <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/219/hovercard\" data-id=\"14285011\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/219\" href=\"https://github.com/FasterXML/jackson-databind/issues/219\">#219</a> was fixed, the default format for <code class=\"notranslate\">java.sql.Date</code> serialization switched from string to numeric, following the default value of <code class=\"notranslate\">WRITE_DATES_AS_TIMESTAMPS</code>.</p>\n<p dir=\"auto\">In order to prevent breaks, I want <code class=\"notranslate\">java.sql.Date</code> to serialize as a string, without changing behavior for <code class=\"notranslate\">java.util.Date</code> (which has always serialized as a number by default).</p>\n<p dir=\"auto\">According to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/219/hovercard?comment_id=370690333&amp;comment_type=issue_comment\" data-id=\"14285011\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/219\" href=\"https://github.com/FasterXML/jackson-databind/issues/219#issuecomment-370690333\">#219 (comment)</a>, I should be able to revert the behavior for <code class=\"notranslate\">java.sql.Date</code> only with</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='final ObjectMapper mapper = new ObjectMapper();\nmapper.configOverride(java.sql.Date.class).setFormat(JsonFormat.Value.forPattern(\"yyyy-MM-dd\"));'><pre class=\"notranslate\"><code>final ObjectMapper mapper = new ObjectMapper();\nmapper.configOverride(java.sql.Date.class).setFormat(JsonFormat.Value.forPattern(\"yyyy-MM-dd\"));\n</code></pre></div>\n<p dir=\"auto\">This doesn't seem to do anything, though. Looking at the code, it looks like it's because the custom format isn't actually added to <code class=\"notranslate\">SqlDateSerializer</code> except in the <code class=\"notranslate\">createContextual</code> method (<a href=\"https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java#L59\">https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.java#L59</a>).</p>\n<p dir=\"auto\">For now, I've reverted this behavior with</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='mapper.registerModule(new SimpleModule() {\n            {\n                addSerializer(\n                        java.sql.Date.class,\n                        new SqlDateSerializer().withFormat(false, new SimpleDateFormat(\"yyyy-MM-dd\"))\n                );\n            }\n        });'><pre class=\"notranslate\"><code>mapper.registerModule(new SimpleModule() {\n            {\n                addSerializer(\n                        java.sql.Date.class,\n                        new SqlDateSerializer().withFormat(false, new SimpleDateFormat(\"yyyy-MM-dd\"))\n                );\n            }\n        });\n</code></pre></div>\n<p dir=\"auto\">but it seems pretty hacky so I'd prefer the other method if possible.</p>\n"}