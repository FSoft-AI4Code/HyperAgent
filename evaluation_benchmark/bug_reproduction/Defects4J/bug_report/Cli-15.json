{"issue_id": "CLI-158", "title": "deafult arguments only works if no arguments are submitted", "description": "\n<div class=\"user-content-block\">\n<p>When using multple arguments and defaults, the behaviour is counter-intuitive and will only pick up a default if no args are passed in.</p>\n<p>For instance in the code below I have set up so 0, 1, or 2 args may bve accepted, with defaults 100 and 1000.</p>\n<p>I expect it to behave as follows.<br/>\n1. for 2 args, 1 and 2 the values should be 1 and 2. This works as expected.<br/>\n2. for 0 args passed in the values should be 100 and 1000, picking up both of the defaults. This works as expected</p>\n<p>3. for 1 arg passed in the values should be 1 and 1000, so the second argument picks up the second default value. The valuse become just 1, which is not as expected..</p>\n<p>Currently, in the second case will only return 1 and ignore the defaults.</p>\n<p>    public void testSingleOptionSingleArgument() throws Exception {<br/>\n        String defaulValue1 = \"100\";<br/>\n        String defaultValue2 = \"1000\";<br/>\n        final DefaultOptionBuilder obuilder = new DefaultOptionBuilder();<br/>\n        final ArgumentBuilder abuilder = new ArgumentBuilder();<br/>\n        final GroupBuilder gbuilder = new GroupBuilder();</p>\n<p>        DefaultOption bOption = obuilder.withShortName(\"b\")<br/>\n                .withLongName(\"b\")<br/>\n                .withArgument(abuilder.withName(\"b\")<br/>\n                        .withMinimum(0)<br/>\n                        .withMaximum(2)<br/>\n                        .withDefault(defaulValue1)<br/>\n                        .withDefault(defaultValue2)<br/>\n                        .create())<br/>\n                .create();</p>\n<p>        Group options = gbuilder<br/>\n                .withName(\"options\")<br/>\n                .withOption(bOption)<br/>\n                .create();</p>\n<p>        Parser parser = new Parser();<br/>\n        parser.setHelpTrigger(\"--help\");<br/>\n        parser.setGroup(options);<br/>\n        String enteredValue1 = \"1\";<br/>\n        String[] args = new String[]</p>\n{\"-b\", enteredValue1}\n<p>;<br/>\n        CommandLine cl = parser.parse(args);<br/>\n        CommandLine cmd = cl;<br/>\n        assertNotNull(cmd);<br/>\n        List b = cmd.getValues(\"-b\");<br/>\n        assertEquals(\"<span class=\"error\">[\" + enteredValue1 + \"]</span>\", b + \"\");<br/>\n    }</p>\n</div>\n"}