{"issue_id": "COLLECTIONS-580", "title": "Arbitrary remote code execution with InvokerTransformer", "description": "\n<div class=\"user-content-block\">\n<p>With <tt>InvokerTransformer</tt> serializable collections can be build that execute arbitrary Java code. <tt>sun.reflect.annotation.AnnotationInvocationHandler#readObject</tt> invokes <tt>#entrySet</tt> and <tt>#get</tt> on a deserialized collection. If you have an endpoint that accepts serialized Java objects (JMX, RMI, remote EJB, ...) you can combine the two to create arbitrary remote code execution vulnerability.</p>\n<p>I don't know of a good fix short of removing <tt>InvokerTransformer</tt> or making it not Serializable. Both probably break existing applications.</p>\n<p>This is not my research, but has been discovered by other people.</p>\n<p><a class=\"external-link\" href=\"https://github.com/frohoff/ysoserial\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/frohoff/ysoserial</a></p>\n<p><a class=\"external-link\" href=\"http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/\" rel=\"nofollow noopener\" target=\"_blank\">http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/</a></p>\n</div>\n"}