{"issue_id": "1648", "title": "<code>DateTimeSerializerBase</code> ignores configured date format when creating contextual ", "description": "\n<p dir=\"auto\"><code class=\"notranslate\">DateTimeSerializerBase#createContextual</code> creates a new serializer with <code class=\"notranslate\">StdDateFormat.DATE_FORMAT_STR_ISO8601</code> format instead of re-using the actual format that may have been specified on the configuration. See the following code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final String pattern = format.hasPattern()\n                                    ? format.getPattern()\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\"><pre class=\"notranslate\"><code>final String pattern = format.hasPattern()\n                                    ? format.getPattern()\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n</code></pre></div>\n<p dir=\"auto\">Using the <code class=\"notranslate\">@JsonFormat</code> annotation on a field will therefore reset the format to Jackson's default even if the annotation doesn't specify any custom format.</p>\n<p dir=\"auto\"><code class=\"notranslate\">DateBasedDeserializer#createContextual</code> behaves differently and tries to re-use the configured format:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"DateFormat df = ctxt.getConfig().getDateFormat();\n// one shortcut: with our custom format, can simplify handling a bit\nif (df.getClass() == StdDateFormat.class) {\n   ...\n   StdDateFormat std = (StdDateFormat) df;\n   std = std.withTimeZone(tz);\n   ...\n} else {\n  // otherwise need to clone, re-set timezone:\n  df = (DateFormat) df.clone();\n  df.setTimeZone(tz);\n}\"><pre class=\"notranslate\"><code>DateFormat df = ctxt.getConfig().getDateFormat();\n// one shortcut: with our custom format, can simplify handling a bit\nif (df.getClass() == StdDateFormat.class) {\n   ...\n   StdDateFormat std = (StdDateFormat) df;\n   std = std.withTimeZone(tz);\n   ...\n} else {\n  // otherwise need to clone, re-set timezone:\n  df = (DateFormat) df.clone();\n  df.setTimeZone(tz);\n}\n</code></pre></div>\n<p dir=\"auto\">Shouldn't the serializer follow the same approach ?</p>\n"}