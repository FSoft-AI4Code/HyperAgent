{"issue_id": "440", "title": "Compiler should warn/error when instance methods are operated on", "description": "<b>What steps will reproduce the problem?</b>\n1. Compile and run the following code:\r\n  goog.require('goog.graphics.Path');\r\n  function demo() {\r\n    var path = new goog.graphics.Path();\r\n    var points = [[1,1], [2,2]];\r\n    for (var i = 0; i &lt; points.length; i++) {\r\n      (i == 0 ? path.moveTo : path.lineTo)(points[i][0], points[i][1]);\r\n    }\r\n  }\r\n  goog.exportSymbol('demo', demo);\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect it to either work or produce a warning.  In this case, the latter since there's an error in the javascript - when calling path.moveTo(x, y), &quot;this&quot; is set correctly to the path element in the moveTo function.  But when the function is operated on, as in (i == 0 ? path.moveTo : path.lineTo)(x, y), it's no longer an instance method invocation, so &quot;this&quot; reverts to the window object.  In this case, an error results because moveTo references a field in Path that is now &quot;undefined&quot;.  Better would be to issue a warning/error that an instance method is being converted to a normal function (perhaps only if it references this).\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nUnknown (it's built into my build tools) - I presume this issue is present in all builds.  Running on ubuntu.\r\n\r\n<b>Please provide any additional information below.</b>"}