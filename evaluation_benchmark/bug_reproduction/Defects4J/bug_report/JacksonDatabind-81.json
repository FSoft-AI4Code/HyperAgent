{"issue_id": "1592", "title": "Add support for handling primitive/discrepancy problem with type refinements", "description": "\n<p dir=\"auto\">(note: derived from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-module-jaxb-annotations/issues/64/hovercard\" data-id=\"219581643\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-module-jaxb-annotations/issues/64\" href=\"https://github.com/FasterXML/jackson-module-jaxb-annotations/issues/64\">FasterXML/jackson-module-jaxb-annotations#64</a>)</p>\n<p dir=\"auto\">The problem is that although <code class=\"notranslate\">int</code> and <code class=\"notranslate\">java.lang.Integer</code> are related, logically, they are not related by inheritance (or implementation). Since some legacy code may try refinements in this axis it'd be nice to handle this somehow. Two basic approaches would be:</p>\n<ol dir=\"auto\">\n<li>Just ignore primitive/wrapper override, return original type as is</li>\n<li>Allow wrapper to \"refine\" primitive, return wrapper.</li>\n</ol>\n<p dir=\"auto\">There is also related question of whether to allow \"int to long\" and similar refinements, but start with basics.</p>\n"}