{"issue_id": "523", "title": "EscapeMode.xhtml no longer falls back to numeric escapes - Can cause '?' replacement in output", "description": "\n<p dir=\"auto\">I've been using EscapeMode.xhtml with JSoup to avoid encoding things which don't (from my perspective) need to be encoded, like egrave in a UTF-8 document for example.</p>\n<p dir=\"auto\">While upgrading from JSoup 1.7.2 to 1.8.1 however, I've noticed a problem with a shift-jis related test I have. Here's a simplified/reduced version.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package test;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Entities.EscapeMode;\nimport org.junit.Assert;\nimport org.junit.Test;\n\npublic class ShiftJisTest {\n\n    @Test\n    public void testShiftJisRoundtrip() throws Exception {\n        String input = \n            &quot;&lt;html&gt;&quot;\n          +   &quot;&lt;head&gt;&quot;\n          +     &quot;&lt;meta http-equiv=\\&quot;content-type\\&quot; content=\\&quot;text/html; charset=Shift_JIS\\&quot; /&gt;&quot;\n          +   &quot;&lt;/head&gt;&quot;\n          +   &quot;&lt;body&gt;&quot;\n          +     &quot;before&amp;nbsp;after&quot;\n          +   &quot;&lt;/body&gt;&quot;\n          + &quot;&lt;/html&gt;&quot;;\n        InputStream is = new ByteArrayInputStream(input.getBytes(Charset.forName(&quot;ASCII&quot;)));\n\n        Document doc = Jsoup.parse(is, null, &quot;http://example.com&quot;);\n        doc.outputSettings().escapeMode(EscapeMode.xhtml);\n\n        String output = new String(doc.html().getBytes(doc.outputSettings().charset()), doc.outputSettings().charset());\n\n        System.out.println(output);\n\n        Assert.assertFalse(&quot;Should not have contained a '?'.&quot;, output.contains(&quot;?&quot;));\n        Assert.assertTrue(&quot;Should have contained a '&amp;#xa0;' or a '&amp;nbsp;'.&quot;, \n            output.contains(&quot;&amp;#xa0;&quot;) || output.contains(&quot;&amp;nbsp;&quot;));\n    }\n\n}\"><pre class=\"notranslate\"><code>package test;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Entities.EscapeMode;\nimport org.junit.Assert;\nimport org.junit.Test;\n\npublic class ShiftJisTest {\n\n    @Test\n    public void testShiftJisRoundtrip() throws Exception {\n        String input = \n            \"&lt;html&gt;\"\n          +   \"&lt;head&gt;\"\n          +     \"&lt;meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=Shift_JIS\\\" /&gt;\"\n          +   \"&lt;/head&gt;\"\n          +   \"&lt;body&gt;\"\n          +     \"before&amp;nbsp;after\"\n          +   \"&lt;/body&gt;\"\n          + \"&lt;/html&gt;\";\n        InputStream is = new ByteArrayInputStream(input.getBytes(Charset.forName(\"ASCII\")));\n\n        Document doc = Jsoup.parse(is, null, \"http://example.com\");\n        doc.outputSettings().escapeMode(EscapeMode.xhtml);\n\n        String output = new String(doc.html().getBytes(doc.outputSettings().charset()), doc.outputSettings().charset());\n\n        System.out.println(output);\n\n        Assert.assertFalse(\"Should not have contained a '?'.\", output.contains(\"?\"));\n        Assert.assertTrue(\"Should have contained a '&amp;#xa0;' or a '&amp;nbsp;'.\", \n            output.contains(\"&amp;#xa0;\") || output.contains(\"&amp;nbsp;\"));\n    }\n\n}\n</code></pre></div>\n<p dir=\"auto\">Under JSoup 1.7.2, the body of the output in this test is \"before\u00a0after\" (which looks as expected when rendered in Firefox), where as under 1.8.1 it is \"before?after\".</p>\n<p dir=\"auto\">I assume the issue here is that I've asked JSoup to escape only XHTML characters (i.e. not nbsp), and it's producing a charset where (I assume) there's no character to represent 'non-breaking space'.</p>\n<p dir=\"auto\">The upshot of this is that, as a result of upgrading JSoup, I end up with '?' replaced in for what used to be shown as a non breaking space.</p>\n<p dir=\"auto\">It seems like the old behaviour was to fall back to providing an escaped numeric character (odd if there's no valid character for that in Shift_JIS, but it still rendered correctly). From my perspective, the old behaviour was better - Is there any way it can be reinstated (or an escape mode provided for it)?</p>\n<p dir=\"auto\">Obviously using EscapeMode.base instead of EscapeMode.xhtml is a possible workaround, however I would really prefer not to have characters unnecessarily escaped if possible.</p>\n"}