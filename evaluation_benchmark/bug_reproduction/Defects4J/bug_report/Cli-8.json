{"issue_id": "CLI-151", "title": "HelpFormatter wraps incorrectly on every line beyond the first", "description": "\n<div class=\"user-content-block\">\n<p>The method findWrapPos(...) in the HelpFormatter is a couple of bugs in the way that it deals with the \"startPos\" variable.  This causes it to format every line beyond the first line by \"startPos\" to many characters, beyond the specified width.  </p>\n<p>To see this, create an option with a long description, and then use the help formatter to print it.  The first line will be the correct length.  The 2nd, 3rd, etc lines will all be too long.</p>\n<p>I don't have a patch (sorry) - but here is a corrected version of the method.</p>\n<p>I fixed it in two places - both were using \"width + startPos\" when they should have been using width.</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"> <span class=\"code-keyword\">protected</span> <span class=\"code-object\">int</span> findWrapPos(<span class=\"code-object\">String</span> text, <span class=\"code-object\">int</span> width, <span class=\"code-object\">int</span> startPos)\n    {\n        <span class=\"code-object\">int</span> pos = -1;\n\n        <span class=\"code-comment\">// the line ends before the max wrap pos or a <span class=\"code-keyword\">new</span> line <span class=\"code-object\">char</span> found\n</span>        <span class=\"code-keyword\">if</span> (((pos = text.indexOf(<span class=\"code-quote\">'\\n'</span>, startPos)) != -1 &amp;&amp; pos &lt;= width)\n            || ((pos = text.indexOf(<span class=\"code-quote\">'\\t'</span>, startPos)) != -1 &amp;&amp; pos &lt;= width))\n        {\n            <span class=\"code-keyword\">return</span> pos+1;\n        }\n        <span class=\"code-keyword\">else</span> <span class=\"code-keyword\">if</span> ((width) &gt;= text.length())\n        {\n            <span class=\"code-keyword\">return</span> -1;\n        }\n\n\n        <span class=\"code-comment\">// look <span class=\"code-keyword\">for</span> the last whitespace character before startPos+width\n</span>        pos = width;\n\n        <span class=\"code-object\">char</span> c;\n\n        <span class=\"code-keyword\">while</span> ((pos &gt;= startPos) &amp;&amp; ((c = text.charAt(pos)) != <span class=\"code-quote\">' '</span>)\n               &amp;&amp; (c != <span class=\"code-quote\">'\\n'</span>) &amp;&amp; (c != <span class=\"code-quote\">'\\r'</span>))\n        {\n            --pos;\n        }\n\n        <span class=\"code-comment\">// <span class=\"code-keyword\">if</span> we found it - just <span class=\"code-keyword\">return</span>\n</span>        <span class=\"code-keyword\">if</span> (pos &gt; startPos)\n        {\n            <span class=\"code-keyword\">return</span> pos;\n        }\n        \n        <span class=\"code-comment\">// must look <span class=\"code-keyword\">for</span> the first whitespace chearacter after startPos \n</span>        <span class=\"code-comment\">// + width\n</span>        pos = startPos + width;\n\n        <span class=\"code-keyword\">while</span> ((pos &lt;= text.length()) &amp;&amp; ((c = text.charAt(pos)) != <span class=\"code-quote\">' '</span>)\n               &amp;&amp; (c != <span class=\"code-quote\">'\\n'</span>) &amp;&amp; (c != <span class=\"code-quote\">'\\r'</span>))\n        {\n            ++pos;\n        }\n\n        <span class=\"code-keyword\">return</span> (pos == text.length())        ? (-1) : pos;\n    }\n</pre>\n</div></div>\n</div>\n"}