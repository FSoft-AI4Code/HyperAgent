{"issue_id": "MATH-554", "title": "Vector3D.crossProduct is sensitive to numerical cancellation", "description": "\n<div class=\"user-content-block\">\n<p>Cross product implementation uses the naive formulas (y1 z2 - y2 z1, ...). These formulas fail when vectors are almost colinear, like in the following example:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">Vector3D v1 = <span class=\"code-keyword\">new</span> Vector3D(9070467121.0, 4535233560.0, 1);\nVector3D v2 = <span class=\"code-keyword\">new</span> Vector3D(9070467123.0, 4535233561.0, 1);\n<span class=\"code-object\">System</span>.out.println(Vector3D.crossProduct(v1, v2));\n</pre>\n</div></div>\n<p>The previous code displays </p>\n{ -1, 2, 0 }\n<p> instead of the correct answer </p>\n{ -1, 2, 1 }\n            </div>\n"}