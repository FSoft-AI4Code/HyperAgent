{"issue_id": "873", "title": "Converting from an interface type to a constructor which @implements itself causes stack overflow.", "description": "// Options: --externs externs/es3.js --property_renaming OFF --variable_renaming OFF --jscomp_warning=checkTypes --js=t.js\r\n\r\n\r\n// File: t.js\r\n/**\r\n * @interface\r\n */\r\nvar OtherType = function() {}\r\n\r\n/**\r\n * @implements {MyType}\r\n * @constructor\r\n */\r\nvar MyType = function() {}\r\n\r\n/**\r\n * @type {MyType}\r\n */\r\nvar x = /** @type {!OtherType} */ (new Object());\r\n\r\nGet Infinite recursion in:\r\n\r\nPrototypeObjectType.isSubtype @ 350\r\n\r\nOptions:\r\n\r\n- prevent cycles in the inheritance/implements graph\r\n- detect cycles after they are created and exit compilation before any subsequent passes run\r\n- detect and remove cycles after they are created but before any subsequent passes run\r\n- make every subsequent pass robust against cycles in that graph"}