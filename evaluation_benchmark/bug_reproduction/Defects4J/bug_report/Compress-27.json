{"issue_id": "COMPRESS-278", "title": "Incorrect handling of NUL username and group Tar.gz entries", "description": "\n<div class=\"user-content-block\">\n<p>With version 1.8 of commons-compress it's no longer possible to decompress  files from an archive if the archive contains entries having null (or being empty?) set as username and/or usergroup. With version 1.7 this still worked now I get this exception:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">java.io.IOException: Error detected parsing the header\n\tat org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:249)\n\tat TestBed.AppTest.extractNoFileOwner(AppTest.java:30)\nCaused by: java.lang.IllegalArgumentException: Invalid <span class=\"code-object\">byte</span> 32 at offset 7 in <span class=\"code-quote\">'       {NUL}'</span> len=8\n\tat org.apache.commons.compress.archivers.tar.TarUtils.parseOctal(TarUtils.java:134)\n\tat org.apache.commons.compress.archivers.tar.TarUtils.parseOctalOrBinary(TarUtils.java:173)\n\tat org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(TarArchiveEntry.java:953)\n\tat org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(TarArchiveEntry.java:940)\n\tat org.apache.commons.compress.archivers.tar.TarArchiveEntry.&lt;init&gt;(TarArchiveEntry.java:324)\n\tat org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(TarArchiveInputStream.java:247)\n\t... 27 more\n\n</pre>\n</div></div>\n<p>This exception leads to my suspision that the regression was introduced with the fix for this ticket <a class=\"issue-link\" data-issue-key=\"COMPRESS-262\" href=\"https://issues.apache.org/jira/browse/COMPRESS-262\" title=\"TarArchiveInputStream fails to read entry with big user-id value\"><del>COMPRESS-262</del></a>, which has a nearly identical exception provided.</p>\n<p>Some test code you can run to verify it:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">package</span> TestBed;\n\n<span class=\"code-keyword\">import</span> java.io.File;\n<span class=\"code-keyword\">import</span> java.io.FileInputStream;\n<span class=\"code-keyword\">import</span> java.io.FileNotFoundException;\n<span class=\"code-keyword\">import</span> java.io.IOException;\n\n<span class=\"code-keyword\">import</span> org.apache.commons.compress.archivers.tar.TarArchiveEntry;\n<span class=\"code-keyword\">import</span> org.apache.commons.compress.archivers.tar.TarArchiveInputStream;\n<span class=\"code-keyword\">import</span> org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\n<span class=\"code-keyword\">import</span> org.junit.Test;\n\n/**\n * Unit test <span class=\"code-keyword\">for</span> simple App.\n */\n<span class=\"code-keyword\">public</span> <span class=\"code-keyword\">class </span>AppTest\n{\n\n    @Test\n    <span class=\"code-keyword\">public</span> void extractNoFileOwner()\n    {\n        TarArchiveInputStream tarInputStream = <span class=\"code-keyword\">null</span>;\n\n        <span class=\"code-keyword\">try</span>\n        {\n            tarInputStream =\n                <span class=\"code-keyword\">new</span> TarArchiveInputStream( <span class=\"code-keyword\">new</span> GzipCompressorInputStream( <span class=\"code-keyword\">new</span> FileInputStream( <span class=\"code-keyword\">new</span> File(\n                    <span class=\"code-quote\">\"/home/pknobel/redis-dist-2.8.3_1-linux.tar.gz\"</span> ) ) ) );\n            TarArchiveEntry entry;\n            <span class=\"code-keyword\">while</span> ( ( entry = tarInputStream.getNextTarEntry() ) != <span class=\"code-keyword\">null</span> )\n            {\n                <span class=\"code-object\">System</span>.out.println( entry.getName() );\n                <span class=\"code-object\">System</span>.out.println(entry.getUserName()+<span class=\"code-quote\">\"/\"</span>+entry.getGroupName());\n            }\n\n        }\n        <span class=\"code-keyword\">catch</span> ( FileNotFoundException e )\n        {\n            e.printStackTrace();\n        }\n        <span class=\"code-keyword\">catch</span> ( IOException e )\n        {\n            e.printStackTrace();\n        }\n    }\n\n}\n</pre>\n</div></div>\n<p>With 1.7 the TestCase outputed this:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">redis-dist-2.8.3_1/bin/\n/\nredis-dist-2.8.3_1/bin/redis-server\njenkins/jenkins\nredis-dist-2.8.3_1/bin/redis-cli\njenkins/jenkins\n</pre>\n</div></div>\n<p>With 1.8 it's failing once it reaches the null valued entry, which is the first. The archive is created using maven assembly plugin, and I tried the same with maven ant task. Both generating an archive with not set username and groups for at least some entries.</p>\n<p>You can download the archive from <a class=\"external-link\" href=\"http://heli0s.darktech.org/redis/2.8.3_1/redis-dist-2.8.3_1-linux.tar.gz\" rel=\"nofollow noopener\" target=\"_blank\">http://heli0s.darktech.org/redis/2.8.3_1/redis-dist-2.8.3_1-linux.tar.gz</a></p>\n<p>If you run a tar -tvzf on the file you see this report:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">drwxr-xr-x 0/0               0 2014-04-18 09:43 redis-dist-2.8.3_1-SNAPSHOT/bin/\n-rwxr-xr-x pknobel/pknobel 3824588 2014-01-02 14:58 redis-dist-2.8.3_1-SNAPSHOT/bin/redis-cli\n-rwxr-xr-x pknobel/pknobel 5217234 2014-01-02 14:58 redis-dist-2.8.3_1-SNAPSHOT/bin/redis-server\n</pre>\n</div></div>\n<p>The user 0/0 probably indicates that it's not set although it's the root user id. A correctly root user file would show up as root/root</p>\n</div>\n"}