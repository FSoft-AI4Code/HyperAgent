{"issue_id": "1445", "title": "Map key deserializerModifiers ignored", "description": "\n<p dir=\"auto\">We have a module that extends simple model to allow us to accept enum names in lower case in a fairly generic manner<br/>\nInside that we add the <code class=\"notranslate\">modifyKeyDeserializer</code></p>\n<p dir=\"auto\">The incoming class (using immutables) is mapped to a guava immutable map.<br/>\nWalking through the code:</p>\n<blockquote>\n<p dir=\"auto\">com.fasterxml.jackson.datatype.guava.deser.ImmutableMapDeserializer.createContextual<br/>\ncalls DeserializationContext.findKeyDeserializer<br/>\ncalls DeserializerCache.findKeyDeserializer<br/>\ncalls BasicDeserializerFactory.createKeyDeserializer</p>\n</blockquote>\n<p dir=\"auto\">which has the code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        // the only non-standard thing is this:\n        if (deser == null) {\n            if (type.isEnumType()) {\n                return _createEnumKeyDeserializer(ctxt, type);\n            }\n            deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);\n        }\"><pre>        <span class=\"pl-c\">// the only non-standard thing is this:</span>\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">deser</span> == <span class=\"pl-c1\">null</span>) {\n            <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">type</span>.<span class=\"pl-en\">isEnumType</span>()) {\n                <span class=\"pl-k\">return</span> <span class=\"pl-en\">_createEnumKeyDeserializer</span>(<span class=\"pl-s1\">ctxt</span>, <span class=\"pl-s1\">type</span>);\n            }\n            <span class=\"pl-s1\">deser</span> = <span class=\"pl-s1\">StdKeyDeserializers</span>.<span class=\"pl-en\">findStringBasedKeyDeserializer</span>(<span class=\"pl-s1\">config</span>, <span class=\"pl-s1\">type</span>);\n        }</pre></div>\n<p dir=\"auto\">Since we are an enum type, it returns the value in the <code class=\"notranslate\">_createEnumKeyDeserializer</code>, which is the standard enum deserializer.<br/>\nBelow that block is the check for the hasDeserializerModifiers, but since we have returned already, it is never called, so we can't override the behaviour.</p>\n<p dir=\"auto\">Module fragment:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='    setDeserializerModifier(new BeanDeserializerModifier() {\n                @Override\n                @SuppressWarnings(\"unchecked\")\n                public JsonDeserializer&lt;Enum&gt; modifyEnumDeserializer(\n                        DeserializationConfig config,\n                        final JavaType type,\n                        BeanDescription beanDesc,\n                        final JsonDeserializer&lt;?&gt; deserializer) {\n                    return new JsonDeserializer&lt;Enum&gt;() {\n                        @Override\n                        public Enum deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {\n                            Class&lt;? extends Enum&gt; rawClass = (Class&lt;Enum&lt;?&gt;&gt;) type.getRawClass();\n                            return Enum.valueOf(rawClass, jp.getValueAsString().toUpperCase());\n                        }\n                    };\n                }\n\n                @Override\n                public KeyDeserializer modifyKeyDeserializer(\n                        DeserializationConfig config,\n                        JavaType type,\n                        KeyDeserializer deserializer) {\n                    if (!type.isEnumType()) {\n                        return super.modifyKeyDeserializer(config, type, deserializer);\n                    }\n                    return new KeyDeserializer() {\n                        @Override\n                        @SuppressWarnings(\"unchecked\")\n                        public Object deserializeKey(String key, DeserializationContext ctxt)\n                                throws IOException, JsonProcessingException {\n                            Class&lt;? extends Enum&gt; rawClass = (Class&lt;Enum&lt;?&gt;&gt;) type.getRawClass();\n                            return Enum.valueOf(rawClass, key.toUpperCase());\n                        }\n                    };\n                }\n            });'><pre>    <span class=\"pl-en\">setDeserializerModifier</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">BeanDeserializerModifier</span>() {\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"unchecked\"</span>)\n                <span class=\"pl-k\">public</span> <span class=\"pl-smi\">JsonDeserializer</span>&lt;<span class=\"pl-smi\">Enum</span>&gt; <span class=\"pl-en\">modifyEnumDeserializer</span>(\n                        <span class=\"pl-smi\">DeserializationConfig</span> <span class=\"pl-s1\">config</span>,\n                        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">JavaType</span> <span class=\"pl-s1\">type</span>,\n                        <span class=\"pl-smi\">BeanDescription</span> <span class=\"pl-s1\">beanDesc</span>,\n                        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">JsonDeserializer</span>&lt;?&gt; <span class=\"pl-s1\">deserializer</span>) {\n                    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JsonDeserializer</span>&lt;<span class=\"pl-smi\">Enum</span>&gt;() {\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Enum</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">JsonParser</span> <span class=\"pl-s1\">jp</span>, <span class=\"pl-smi\">DeserializationContext</span> <span class=\"pl-s1\">ctxt</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n                            <span class=\"pl-smi\">Class</span>&lt;? <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Enum</span>&gt; <span class=\"pl-s1\">rawClass</span> = (<span class=\"pl-smi\">Class</span>&lt;<span class=\"pl-smi\">Enum</span>&lt;?&gt;&gt;) <span class=\"pl-s1\">type</span>.<span class=\"pl-en\">getRawClass</span>();\n                            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">Enum</span>.<span class=\"pl-en\">valueOf</span>(<span class=\"pl-s1\">rawClass</span>, <span class=\"pl-s1\">jp</span>.<span class=\"pl-en\">getValueAsString</span>().<span class=\"pl-en\">toUpperCase</span>());\n                        }\n                    };\n                }\n\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-k\">public</span> <span class=\"pl-smi\">KeyDeserializer</span> <span class=\"pl-en\">modifyKeyDeserializer</span>(\n                        <span class=\"pl-smi\">DeserializationConfig</span> <span class=\"pl-s1\">config</span>,\n                        <span class=\"pl-smi\">JavaType</span> <span class=\"pl-s1\">type</span>,\n                        <span class=\"pl-smi\">KeyDeserializer</span> <span class=\"pl-s1\">deserializer</span>) {\n                    <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">type</span>.<span class=\"pl-en\">isEnumType</span>()) {\n                        <span class=\"pl-k\">return</span> <span class=\"pl-en\">super</span>.<span class=\"pl-en\">modifyKeyDeserializer</span>(<span class=\"pl-s1\">config</span>, <span class=\"pl-s1\">type</span>, <span class=\"pl-s1\">deserializer</span>);\n                    }\n                    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">KeyDeserializer</span>() {\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"unchecked\"</span>)\n                        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">deserializeKey</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">key</span>, <span class=\"pl-smi\">DeserializationContext</span> <span class=\"pl-s1\">ctxt</span>)\n                                <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span>, <span class=\"pl-smi\">JsonProcessingException</span> {\n                            <span class=\"pl-smi\">Class</span>&lt;? <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Enum</span>&gt; <span class=\"pl-s1\">rawClass</span> = (<span class=\"pl-smi\">Class</span>&lt;<span class=\"pl-smi\">Enum</span>&lt;?&gt;&gt;) <span class=\"pl-s1\">type</span>.<span class=\"pl-en\">getRawClass</span>();\n                            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">Enum</span>.<span class=\"pl-en\">valueOf</span>(<span class=\"pl-s1\">rawClass</span>, <span class=\"pl-s1\">key</span>.<span class=\"pl-en\">toUpperCase</span>());\n                        }\n                    };\n                }\n            });</pre></div>\n<p dir=\"auto\">I appreciate the code around here is fairly complex.</p>\n<p dir=\"auto\">Related issues (possibly):<br/>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/749/hovercard\" data-id=\"66147465\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/749\" href=\"https://github.com/FasterXML/jackson-databind/issues/749\">#749</a><br/>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/1313/hovercard\" data-id=\"167636473\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/1313\" href=\"https://github.com/FasterXML/jackson-databind/issues/1313\">#1313</a></p>\n"}