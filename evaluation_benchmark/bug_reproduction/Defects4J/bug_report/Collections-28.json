{"issue_id": "COLLECTIONS-586", "title": "PatriciaTrie prefixMap clear throws NullPointerException", "description": "\n<div class=\"user-content-block\">\n<p>Clearing all entries of a prefixMap returned by PatriciaTrie using the <tt>clear</tt> method throws a NullPointerException. The workaround of removing each entry using the <tt>remove</tt> method seems to work.</p>\n<p>Here are the test cases for the bug and the workaround:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">public</span> <span class=\"code-keyword\">class </span>PatriciaTrieTest {\n\n    <span class=\"code-keyword\">private</span> Trie&lt;<span class=\"code-object\">String</span>, <span class=\"code-object\">Integer</span>&gt; trie;\n\n    @Before\n    <span class=\"code-keyword\">public</span> void setUp() {\n        trie = <span class=\"code-keyword\">new</span> PatriciaTrie&lt;<span class=\"code-object\">Integer</span>&gt;();\n        trie.put(<span class=\"code-quote\">\"Anna\"</span>, 1);\n        trie.put(<span class=\"code-quote\">\"Anael\"</span>, 2);\n        trie.put(<span class=\"code-quote\">\"Analu\"</span>, 3);\n        trie.put(<span class=\"code-quote\">\"Andreas\"</span>, 4);\n        trie.put(<span class=\"code-quote\">\"Andrea\"</span>, 5);\n        trie.put(<span class=\"code-quote\">\"Andres\"</span>, 6);\n        trie.put(<span class=\"code-quote\">\"Anatole\"</span>, 7);\n    }\n\n    @Test\n    <span class=\"code-keyword\">public</span> void testPrefixMapClear() {\n        SortedMap&lt;<span class=\"code-object\">String</span>, <span class=\"code-object\">Integer</span>&gt; prefixMap = trie.prefixMap(<span class=\"code-quote\">\"And\"</span>);\n        assertEquals(<span class=\"code-keyword\">new</span> HashSet&lt;&gt;(Arrays.asList(<span class=\"code-quote\">\"Andrea\"</span>, <span class=\"code-quote\">\"Andreas\"</span>, <span class=\"code-quote\">\"Andres\"</span>)), prefixMap.keySet());\n        assertEquals(Arrays.asList(5, 4, 6), <span class=\"code-keyword\">new</span> ArrayList&lt;&gt;(prefixMap.values()));\n\n        prefixMap.clear();\n        assertTrue(prefixMap.keySet().isEmpty());\n        assertTrue(prefixMap.values().isEmpty());\n        assertEquals(<span class=\"code-keyword\">new</span> HashSet&lt;&gt;(Arrays.asList(<span class=\"code-quote\">\"Anael\"</span>, <span class=\"code-quote\">\"Analu\"</span>, <span class=\"code-quote\">\"Anatole\"</span>, <span class=\"code-quote\">\"Anna\"</span>)), trie.keySet());\n        assertEquals(Arrays.asList(2, 3, 7, 1), <span class=\"code-keyword\">new</span> ArrayList&lt;&gt;(trie.values()));\n    }\n\n    @Test\n    <span class=\"code-keyword\">public</span> void testPrefixMapClearUsingRemove() {\n        SortedMap&lt;<span class=\"code-object\">String</span>, <span class=\"code-object\">Integer</span>&gt; prefixMap = trie.prefixMap(<span class=\"code-quote\">\"And\"</span>);\n        assertEquals(<span class=\"code-keyword\">new</span> HashSet&lt;&gt;(Arrays.asList(<span class=\"code-quote\">\"Andrea\"</span>, <span class=\"code-quote\">\"Andreas\"</span>, <span class=\"code-quote\">\"Andres\"</span>)), prefixMap.keySet());\n        assertEquals(Arrays.asList(5, 4, 6), <span class=\"code-keyword\">new</span> ArrayList&lt;&gt;(prefixMap.values()));\n\n        Set&lt;<span class=\"code-object\">String</span>&gt; keys = <span class=\"code-keyword\">new</span> HashSet&lt;<span class=\"code-object\">String</span>&gt;(prefixMap.keySet());\n        <span class=\"code-keyword\">for</span> (<span class=\"code-keyword\">final</span> <span class=\"code-object\">String</span> key : keys) {\n            prefixMap.remove(key);\n        }\n        assertTrue(prefixMap.keySet().isEmpty());\n        assertTrue(prefixMap.values().isEmpty());\n        assertEquals(<span class=\"code-keyword\">new</span> HashSet&lt;&gt;(Arrays.asList(<span class=\"code-quote\">\"Anael\"</span>, <span class=\"code-quote\">\"Analu\"</span>, <span class=\"code-quote\">\"Anatole\"</span>, <span class=\"code-quote\">\"Anna\"</span>)), trie.keySet());\n        assertEquals(Arrays.asList(2, 3, 7, 1), <span class=\"code-keyword\">new</span> ArrayList&lt;&gt;(trie.values()));\n    }\n\n}\n</pre>\n</div></div>\n<p>The stacktrace of the NullPointerException thrown by the <tt>testPrefixMapClear</tt> test case is:</p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>java.lang.NullPointerException\n\tat org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.remove(AbstractPatriciaTrie.java:2370)\n\tat java.util.AbstractCollection.clear(AbstractCollection.java:432)\n\tat java.util.AbstractMap.clear(AbstractMap.java:288)\n\tat PatriciaTrieTest.testPrefixMapClear(PatriciaTrieTest.java:39)\n</pre>\n</div></div>\n</div>\n"}