{"issue_id": "MATH-280", "title": "bug in inverseCumulativeProbability() for Normal Distribution", "description": "\n<div class=\"user-content-block\">\n<ul>\n<li>@version $Revision: 617953 $ $Date: 2008-02-02 22:54:00 -0700 (Sat, 02 Feb 2008) $<br/>\n */<br/>\npublic class NormalDistributionImpl extends AbstractContinuousDistribution </li>\n</ul>\n<ul>\n<li>@version $Revision: 506600 $ $Date: 2007-02-12 12:35:59 -0700 (Mon, 12 Feb 2007) $<br/>\n */<br/>\npublic abstract class AbstractContinuousDistribution</li>\n</ul>\n<p>This code:</p>\n<p>        \tDistributionFactory factory = app.getDistributionFactory();<br/>\n        \tNormalDistribution normal = factory.createNormalDistribution(0,1);<br/>\n        \tdouble result = normal.inverseCumulativeProbability(0.9772498680518209);</p>\n<p>gives the exception below. It should return (approx) 2.0000...</p>\n<p>normal.inverseCumulativeProbability(0.977249868051820); works fine</p>\n<p>These also give errors:<br/>\n0.9986501019683698 (should return 3.0000...)<br/>\n0.9999683287581673 (should return 4.0000...)</p>\n<p>org.apache.commons.math.MathException: Number of iterations=1, maximum iterations=2,147,483,647, initial=1, lower bound=0, upper bound=179,769,313,486,231,570,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000, final a value=0, final b value=2, f(a)=-0.477, f(b)=0<br/>\n\tat org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:103)<br/>\n\tat org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(NormalDistributionImpl.java:145)</p>\n</div>\n"}