{"issue_id": "744", "title": "Custom deserializer with parent object update", "description": "\n<p dir=\"auto\">Hi, I have custom deserializer for <code class=\"notranslate\">DataA</code>. An instance of <code class=\"notranslate\">DataA</code> is contained in <code class=\"notranslate\">DataB</code>, when updating an existing instance of <code class=\"notranslate\">DataB</code> (as opposed to creating a new one) I get an exception when deserializing via a <code class=\"notranslate\">JsonNode</code> object (deserializing via a <code class=\"notranslate\">String</code> object works).</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import java.io.IOException;\n\nimport org.junit.Assert;\nimport org.junit.Test;\n\nimport com.fasterxml.jackson.core.JsonParser;\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.core.JsonToken;\nimport com.fasterxml.jackson.databind.DeserializationContext;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.deser.std.StdDeserializer;\nimport com.fasterxml.jackson.databind.module.SimpleModule;\n\npublic class TestDeserTest {\n    static class DataA {\n        public int i = 1;\n        public int j = 2;\n\n    }\n\n    static class DataB {\n        public DataA da = new DataA();\n        public int k = 3;\n    }\n\n    static class DataADeserializer extends StdDeserializer&lt;DataA&gt; {\n        private static final long serialVersionUID = 1L;\n\n        DataADeserializer() {\n            super(DataA.class);\n        }\n\n        public DataA deserialize(JsonParser jp, DeserializationContext ctxt)\n                throws JsonProcessingException, IOException {\n            assert (jp.getCurrentToken() == JsonToken.START_OBJECT);\n            JsonNode node = jp.getCodec().readTree(jp);\n\n            DataA da = new DataA();\n            da.i = 5;\n            return da;\n        }\n    }\n\n    @Test\n    public void test() throws IOException {\n        ObjectMapper mapper = new ObjectMapper();\n        SimpleModule module = new SimpleModule();\n        module.addDeserializer(DataA.class, new DataADeserializer());\n        mapper.registerModule(module);\n\n        DataB db = new DataB();\n        db.da.i = 11;\n        db.k = 13;\n        String jsonBString = mapper.writeValueAsString(db);\n        JsonNode jsonBNode = mapper.valueToTree(db);\n\n        // create parent\n        DataB dbNewViaString = mapper.readValue(jsonBString, DataB.class);\n        Assert.assertEquals(5, dbNewViaString.da.i);\n        Assert.assertEquals(13, dbNewViaString.k);\n\n        DataB dbNewViaNode = mapper.treeToValue(jsonBNode, DataB.class);\n        Assert.assertEquals(5, dbNewViaNode.da.i);\n        Assert.assertEquals(13, dbNewViaNode.k);\n\n        // update parent\n        DataB dbUpdViaString = new DataB();\n        DataB dbUpdViaNode = new DataB();\n\n        Assert.assertEquals(1, dbUpdViaString.da.i);\n        Assert.assertEquals(3, dbUpdViaString.k);\n        mapper.readerForUpdating(dbUpdViaString).readValue(jsonBString);\n        Assert.assertEquals(5, dbUpdViaString.da.i);\n        Assert.assertEquals(13, dbUpdViaString.k);\n\n        Assert.assertEquals(1, dbUpdViaNode.da.i);\n        Assert.assertEquals(3, dbUpdViaNode.k);\n        // FAILS HERE:\n        mapper.readerForUpdating(dbUpdViaNode).readValue(jsonBNode);\n        Assert.assertEquals(5, dbUpdViaNode.da.i);\n        Assert.assertEquals(13, dbUpdViaNode.k);\n    }\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-c1\">IOException</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Assert</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">JsonParser</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">JsonProcessingException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">JsonToken</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">DeserializationContext</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">JsonNode</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectMapper</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">std</span>.<span class=\"pl-s1\">StdDeserializer</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">module</span>.<span class=\"pl-s1\">SimpleModule</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">TestDeserTest</span> {\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DataA</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">1</span>;\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">j</span> = <span class=\"pl-c1\">2</span>;\n\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DataB</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">DataA</span> <span class=\"pl-s1\">da</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataA</span>();\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">k</span> = <span class=\"pl-c1\">3</span>;\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DataADeserializer</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">StdDeserializer</span>&lt;<span class=\"pl-smi\">DataA</span>&gt; {\n        <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">serialVersionUID</span> = <span class=\"pl-c1\">1L</span>;\n\n        <span class=\"pl-smi\">DataADeserializer</span>() {\n            <span class=\"pl-en\">super</span>(<span class=\"pl-smi\">DataA</span>.<span class=\"pl-s1\">class</span>);\n        }\n\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">DataA</span> <span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">JsonParser</span> <span class=\"pl-s1\">jp</span>, <span class=\"pl-smi\">DeserializationContext</span> <span class=\"pl-s1\">ctxt</span>)\n                <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">JsonProcessingException</span>, <span class=\"pl-smi\">IOException</span> {\n            <span class=\"pl-k\">assert</span> (<span class=\"pl-s1\">jp</span>.<span class=\"pl-en\">getCurrentToken</span>() == <span class=\"pl-smi\">JsonToken</span>.<span class=\"pl-c1\">START_OBJECT</span>);\n            <span class=\"pl-smi\">JsonNode</span> <span class=\"pl-s1\">node</span> = <span class=\"pl-s1\">jp</span>.<span class=\"pl-en\">getCodec</span>().<span class=\"pl-en\">readTree</span>(<span class=\"pl-s1\">jp</span>);\n\n            <span class=\"pl-smi\">DataA</span> <span class=\"pl-s1\">da</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataA</span>();\n            <span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">5</span>;\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">da</span>;\n        }\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n        <span class=\"pl-smi\">SimpleModule</span> <span class=\"pl-s1\">module</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleModule</span>();\n        <span class=\"pl-s1\">module</span>.<span class=\"pl-en\">addDeserializer</span>(<span class=\"pl-smi\">DataA</span>.<span class=\"pl-s1\">class</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataADeserializer</span>());\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">registerModule</span>(<span class=\"pl-s1\">module</span>);\n\n        <span class=\"pl-smi\">DataB</span> <span class=\"pl-s1\">db</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataB</span>();\n        <span class=\"pl-s1\">db</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">11</span>;\n        <span class=\"pl-s1\">db</span>.<span class=\"pl-s1\">k</span> = <span class=\"pl-c1\">13</span>;\n        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">jsonBString</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-s1\">db</span>);\n        <span class=\"pl-smi\">JsonNode</span> <span class=\"pl-s1\">jsonBNode</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">valueToTree</span>(<span class=\"pl-s1\">db</span>);\n\n        <span class=\"pl-c\">// create parent</span>\n        <span class=\"pl-smi\">DataB</span> <span class=\"pl-s1\">dbNewViaString</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">jsonBString</span>, <span class=\"pl-smi\">DataB</span>.<span class=\"pl-s1\">class</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-s1\">dbNewViaString</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">13</span>, <span class=\"pl-s1\">dbNewViaString</span>.<span class=\"pl-s1\">k</span>);\n\n        <span class=\"pl-smi\">DataB</span> <span class=\"pl-s1\">dbNewViaNode</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">treeToValue</span>(<span class=\"pl-s1\">jsonBNode</span>, <span class=\"pl-smi\">DataB</span>.<span class=\"pl-s1\">class</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-s1\">dbNewViaNode</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">13</span>, <span class=\"pl-s1\">dbNewViaNode</span>.<span class=\"pl-s1\">k</span>);\n\n        <span class=\"pl-c\">// update parent</span>\n        <span class=\"pl-smi\">DataB</span> <span class=\"pl-s1\">dbUpdViaString</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataB</span>();\n        <span class=\"pl-smi\">DataB</span> <span class=\"pl-s1\">dbUpdViaNode</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DataB</span>();\n\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">dbUpdViaString</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-s1\">dbUpdViaString</span>.<span class=\"pl-s1\">k</span>);\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readerForUpdating</span>(<span class=\"pl-s1\">dbUpdViaString</span>).<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">jsonBString</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-s1\">dbUpdViaString</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">13</span>, <span class=\"pl-s1\">dbUpdViaString</span>.<span class=\"pl-s1\">k</span>);\n\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">dbUpdViaNode</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-s1\">dbUpdViaNode</span>.<span class=\"pl-s1\">k</span>);\n        <span class=\"pl-c\">// FAILS HERE:</span>\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readerForUpdating</span>(<span class=\"pl-s1\">dbUpdViaNode</span>).<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">jsonBNode</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-s1\">dbUpdViaNode</span>.<span class=\"pl-s1\">da</span>.<span class=\"pl-s1\">i</span>);\n        <span class=\"pl-s1\">Assert</span>.<span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">13</span>, <span class=\"pl-s1\">dbUpdViaNode</span>.<span class=\"pl-s1\">k</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">The trace:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"i\" (class myorg.TestDeserTest$DataB), not marked as ignorable (2 known properties: \"da\", \"k\"])\n at [Source: N/A; line: -1, column: -1] (through reference chain: myorg.DataB[\"da\"]-&gt;myorg.DataB[\"i\"])\n    at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:51)\n    at com.fasterxml.jackson.databind.DeserializationContext.reportUnknownProperty(DeserializationContext.java:817)\n    at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:954)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1324)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1302)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:249)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:136)\n    at com.fasterxml.jackson.databind.ObjectReader._bindAsTree(ObjectReader.java:1478)\n    at com.fasterxml.jackson.databind.ObjectReader.readTree(ObjectReader.java:1020)\n    at myorg.TestDeserTest$DataADeserializer.deserialize(TestDeserTest.java:39)\n    at myorg.TestDeserTest$DataADeserializer.deserialize(TestDeserTest.java:1)\n    at com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:523)\n    at com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:101)\n    at com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(BeanPropertyMap.java:285)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:220)\n    at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1443)\n    at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1154)\n    at myorg.TestDeserTest.test(TestDeserTest.java:81)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\n'><pre><span class=\"pl-smi\">com</span>.<span class=\"pl-smi\">fasterxml</span>.<span class=\"pl-smi\">jackson</span>.<span class=\"pl-smi\">databind</span>.<span class=\"pl-smi\">exc</span>.<span class=\"pl-smi\">UnrecognizedPropertyException</span>: <span class=\"pl-s1\">Unrecognized</span> <span class=\"pl-s1\">field</span> <span class=\"pl-s\">\"i\"</span> (<span class=\"pl-k\">class</span> <span class=\"pl-s1\">myorg</span>.<span class=\"pl-s1\">TestDeserTest$DataB</span>), <span class=\"pl-s1\">not</span> <span class=\"pl-smi\">marked</span> <span class=\"pl-s1\">as</span> <span class=\"pl-en\">ignorable</span> (<span class=\"pl-c1\">2</span> <span class=\"pl-s1\">known</span> <span class=\"pl-s1\">properties</span>: <span class=\"pl-s\">\"da\"</span>, <span class=\"pl-s\">\"k\"</span>])\n <span class=\"pl-s1\">at</span> [<span class=\"pl-s1\">Source</span>: <span class=\"pl-s1\">N</span>/<span class=\"pl-s1\">A</span>; <span class=\"pl-s1\">line</span>: -<span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">column</span>: -<span class=\"pl-c1\">1</span>] (<span class=\"pl-smi\">through</span> <span class=\"pl-s1\">reference</span> <span class=\"pl-s1\">chain</span>: <span class=\"pl-s1\">myorg</span>.<span class=\"pl-s1\">DataB</span>[<span class=\"pl-s\">\"da\"</span>]-&gt;<span class=\"pl-s1\">myorg</span>.<span class=\"pl-s1\">DataB</span>[<span class=\"pl-s\">\"i\"</span>])\n    <span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">exc</span>.<span class=\"pl-s1\">UnrecognizedPropertyException</span>.<span class=\"pl-s1\">from</span>(<span class=\"pl-smi\">UnrecognizedPropertyException</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">51</span>)\n    <span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">DeserializationContext</span>.<span class=\"pl-en\">reportUnknownProperty</span>(<span class=\"pl-smi\">DeserializationContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">817</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">std</span>.<span class=\"pl-s1\">StdDeserializer</span>.<span class=\"pl-en\">handleUnknownProperty</span>(<span class=\"pl-smi\">StdDeserializer</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">954</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">BeanDeserializerBase</span>.<span class=\"pl-en\">handleUnknownProperty</span>(<span class=\"pl-smi\">BeanDeserializerBase</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1324</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">BeanDeserializerBase</span>.<span class=\"pl-en\">handleUnknownVanilla</span>(<span class=\"pl-smi\">BeanDeserializerBase</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1302</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">BeanDeserializer</span>.<span class=\"pl-en\">vanillaDeserialize</span>(<span class=\"pl-smi\">BeanDeserializer</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">249</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">BeanDeserializer</span>.<span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">BeanDeserializer</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">136</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectReader</span>.<span class=\"pl-en\">_bindAsTree</span>(<span class=\"pl-smi\">ObjectReader</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1478</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectReader</span>.<span class=\"pl-en\">readTree</span>(<span class=\"pl-smi\">ObjectReader</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1020</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">myorg</span>.<span class=\"pl-s1\">TestDeserTest$DataADeserializer</span>.<span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">TestDeserTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">39</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">myorg</span>.<span class=\"pl-s1\">TestDeserTest$DataADeserializer</span>.<span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">TestDeserTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">SettableBeanProperty</span>.<span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">SettableBeanProperty</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">523</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">impl</span>.<span class=\"pl-s1\">FieldProperty</span>.<span class=\"pl-en\">deserializeAndSet</span>(<span class=\"pl-smi\">FieldProperty</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">101</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">impl</span>.<span class=\"pl-s1\">BeanPropertyMap</span>.<span class=\"pl-en\">findDeserializeAndSet</span>(<span class=\"pl-smi\">BeanPropertyMap</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">285</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">deser</span>.<span class=\"pl-s1\">BeanDeserializer</span>.<span class=\"pl-en\">deserialize</span>(<span class=\"pl-smi\">BeanDeserializer</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">220</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectReader</span>.<span class=\"pl-en\">_bindAndClose</span>(<span class=\"pl-smi\">ObjectReader</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1443</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectReader</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-smi\">ObjectReader</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1154</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">myorg</span>.<span class=\"pl-s1\">TestDeserTest</span>.<span class=\"pl-en\">test</span>(<span class=\"pl-smi\">TestDeserTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">81</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">sun</span>.<span class=\"pl-s1\">reflect</span>.<span class=\"pl-s1\">NativeMethodAccessorImpl</span>.<span class=\"pl-en\">invoke0</span>(<span class=\"pl-smi\">Native</span> <span class=\"pl-s1\">Method</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">sun</span>.<span class=\"pl-s1\">reflect</span>.<span class=\"pl-s1\">NativeMethodAccessorImpl</span>.<span class=\"pl-en\">invoke</span>(<span class=\"pl-smi\">NativeMethodAccessorImpl</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">57</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">sun</span>.<span class=\"pl-s1\">reflect</span>.<span class=\"pl-s1\">DelegatingMethodAccessorImpl</span>.<span class=\"pl-en\">invoke</span>(<span class=\"pl-smi\">DelegatingMethodAccessorImpl</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">43</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">reflect</span>.<span class=\"pl-s1\">Method</span>.<span class=\"pl-en\">invoke</span>(<span class=\"pl-smi\">Method</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">606</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">model</span>.<span class=\"pl-s1\">FrameworkMethod$1</span>.<span class=\"pl-en\">runReflectiveCall</span>(<span class=\"pl-smi\">FrameworkMethod</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">50</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">model</span>.<span class=\"pl-s1\">ReflectiveCallable</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">ReflectiveCallable</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">12</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">model</span>.<span class=\"pl-s1\">FrameworkMethod</span>.<span class=\"pl-en\">invokeExplosively</span>(<span class=\"pl-smi\">FrameworkMethod</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">47</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">statements</span>.<span class=\"pl-s1\">InvokeMethod</span>.<span class=\"pl-en\">evaluate</span>(<span class=\"pl-smi\">InvokeMethod</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">17</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner</span>.<span class=\"pl-en\">runLeaf</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">325</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">BlockJUnit4ClassRunner</span>.<span class=\"pl-en\">runChild</span>(<span class=\"pl-smi\">BlockJUnit4ClassRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">78</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">BlockJUnit4ClassRunner</span>.<span class=\"pl-en\">runChild</span>(<span class=\"pl-smi\">BlockJUnit4ClassRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">57</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner$3</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">290</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner$1</span>.<span class=\"pl-en\">schedule</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">71</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner</span>.<span class=\"pl-en\">runChildren</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">288</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner</span>.<span class=\"pl-en\">access$000</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">58</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner$2</span>.<span class=\"pl-en\">evaluate</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">268</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">ParentRunner</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">ParentRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">363</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">eclipse</span>.<span class=\"pl-s1\">jdt</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">junit4</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-c1\">JUnit4TestReference</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">JUnit4TestReference</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">50</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">eclipse</span>.<span class=\"pl-s1\">jdt</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">TestExecution</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">TestExecution</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">38</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">eclipse</span>.<span class=\"pl-s1\">jdt</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RemoteTestRunner</span>.<span class=\"pl-en\">runTests</span>(<span class=\"pl-smi\">RemoteTestRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">459</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">eclipse</span>.<span class=\"pl-s1\">jdt</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RemoteTestRunner</span>.<span class=\"pl-en\">runTests</span>(<span class=\"pl-smi\">RemoteTestRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">675</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">eclipse</span>.<span class=\"pl-s1\">jdt</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RemoteTestRunner</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">RemoteTestRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">382</span>)\n    <span class=\"pl-s1\">at</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">eclipse</span>.<span class=\"pl-s1\">jdt</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RemoteTestRunner</span>.<span class=\"pl-en\">main</span>(<span class=\"pl-smi\">RemoteTestRunner</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">192</span>)</pre></div>\n"}