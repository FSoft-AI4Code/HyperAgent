{"issue_id": "145", "title": "Entity whose name is made up of letters and digits is not retained", "description": "\n<p dir=\"auto\">At about line 136 Tokenizer.java, reader.consumeLetterSequence() is called. This is fine until it an entity such as &amp;sup1; is encountered - just the letter part of the entity name will be read causing the Entities.isNamedEntity(nameRef) call at about line 140 to fail.</p>\n<p dir=\"auto\">I have fixed this quickly locally by replacing reader.consumerLetterSequence() with a call to a new consumeLetterDigitSequence() in the CharacterReader.java - there may be a better way of doing this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"String consumeLetterDigitSequence() {\n    String letters = consumeLetterSequence();\n    String digits = consumeDigitSequence();\n    return letters + digits;\n}\"><pre class=\"notranslate\"><code>String consumeLetterDigitSequence() {\n    String letters = consumeLetterSequence();\n    String digits = consumeDigitSequence();\n    return letters + digits;\n}\n</code></pre></div>\n<p dir=\"auto\">The following is a sample  unit test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='@Test public void letterDigitEntities() {\n    String html = \"&lt;p&gt;&amp;sup1;&amp;sup2;&amp;sup3;&amp;frac14;&amp;frac12;&amp;frac34;&lt;/p&gt;\";\n    Whitelist whitelist = Whitelist.none();\n    whitelist\n        .addTags(\"p\");\n    String html = Jsoup.clean(html, whitelist);\n    assertEquals(\"&lt;p&gt;&amp;sup1;&amp;sup2;&amp;sup3;&amp;frac14;&amp;frac12;&amp;frac34;&lt;/p&gt;\", html);\n}'><pre class=\"notranslate\"><code>@Test public void letterDigitEntities() {\n    String html = \"&lt;p&gt;&amp;sup1;&amp;sup2;&amp;sup3;&amp;frac14;&amp;frac12;&amp;frac34;&lt;/p&gt;\";\n    Whitelist whitelist = Whitelist.none();\n    whitelist\n        .addTags(\"p\");\n    String html = Jsoup.clean(html, whitelist);\n    assertEquals(\"&lt;p&gt;&amp;sup1;&amp;sup2;&amp;sup3;&amp;frac14;&amp;frac12;&amp;frac34;&lt;/p&gt;\", html);\n}\n</code></pre></div>\n"}