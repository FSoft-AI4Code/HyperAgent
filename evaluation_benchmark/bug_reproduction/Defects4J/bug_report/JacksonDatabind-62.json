{"issue_id": "1392", "title": "Custom UnmodifiableSetMixin Fails in Jackson 2.7+ but works in Jackson 2.6", "description": "\n<p dir=\"auto\">I'd like to be able to deserialize an <code class=\"notranslate\">UnmodifiableSet</code> with default typing enabled. To do this I have created an <code class=\"notranslate\">UnmodifiableSetMixin</code> as shown below:</p>\n<p dir=\"auto\"><strong>NOTE</strong>: You can find a minimal project with all the source code to reproduce this issue at <a href=\"https://github.com/rwinch/jackson-unmodifiableset-mixin\">https://github.com/rwinch/jackson-unmodifiableset-mixin</a></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonTypeInfo;\n\nimport java.util.Set;\n\n@JsonTypeInfo(use = JsonTypeInfo.Id.CLASS, include = JsonTypeInfo.As.PROPERTY)\npublic abstract class UnmodifiableSetMixin {\n\n    @JsonCreator\n    public UnmodifiableSetMixin(Set&lt;?&gt; s) {}\n}\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">JsonCreator</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">JsonTypeInfo</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Set</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonTypeInfo</span>(<span class=\"pl-s1\">use</span> = <span class=\"pl-smi\">JsonTypeInfo</span>.<span class=\"pl-c1\">Id</span>.<span class=\"pl-c1\">CLASS</span>, <span class=\"pl-s1\">include</span> = <span class=\"pl-smi\">JsonTypeInfo</span>.<span class=\"pl-s1\">As</span>.<span class=\"pl-c1\">PROPERTY</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">UnmodifiableSetMixin</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonCreator</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">UnmodifiableSetMixin</span>(<span class=\"pl-smi\">Set</span>&lt;?&gt; <span class=\"pl-s1\">s</span>) {}\n}</pre></div>\n<p dir=\"auto\">I then try to use this to deserialize an empty set.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='public class UnmodifiableSetMixinTest {\n    static final String EXPECTED_JSON = \"[\\\"java.util.Collections$UnmodifiableSet\\\",[]]\";\n\n    ObjectMapper mapper;\n\n    @Before\n    public void setup() {\n        mapper = new ObjectMapper();\n        mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);\n        mapper.addMixIn(Collections.unmodifiableSet(Collections.&lt;String&gt;emptySet()).getClass(), UnmodifiableSetMixin.class);\n    }    \n    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void read() throws Exception {\n        Set&lt;String&gt; foo = mapper.readValue(EXPECTED_JSON, Set.class);\n        assertThat(foo).isEmpty();\n    }\n}'><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">UnmodifiableSetMixinTest</span> {\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">EXPECTED_JSON</span> = <span class=\"pl-s\">\"[\\\"java.util.Collections$UnmodifiableSet\\\",[]]\"</span>;\n\n    <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">mapper</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Before</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setup</span>() {\n        <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">enableDefaultTyping</span>(<span class=\"pl-smi\">ObjectMapper</span>.<span class=\"pl-s1\">DefaultTyping</span>.<span class=\"pl-c1\">NON_FINAL</span>, <span class=\"pl-smi\">JsonTypeInfo</span>.<span class=\"pl-s1\">As</span>.<span class=\"pl-c1\">PROPERTY</span>);\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">addMixIn</span>(<span class=\"pl-s1\">Collections</span>.<span class=\"pl-en\">unmodifiableSet</span>(<span class=\"pl-s1\">Collections</span>.&lt;<span class=\"pl-smi\">String</span>&gt;<span class=\"pl-en\">emptySet</span>()).<span class=\"pl-en\">getClass</span>(), <span class=\"pl-smi\">UnmodifiableSetMixin</span>.<span class=\"pl-s1\">class</span>);\n    }    \n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"unchecked\"</span>)\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">read</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n        <span class=\"pl-smi\">Set</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">foo</span> = <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-c1\">EXPECTED_JSON</span>, <span class=\"pl-smi\">Set</span>.<span class=\"pl-s1\">class</span>);\n        <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">foo</span>).<span class=\"pl-en\">isEmpty</span>();\n    }\n}</pre></div>\n<p dir=\"auto\">The test passes with Jackson 2.6, but fails using Jackson 2.7+ (including Jackson 2.8.3) with the following stack trace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.IllegalStateException: No default constructor for [collection type; class java.util.Collections$UnmodifiableSet, contains [simple type, class java.lang.Object]]\n    at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefault(StdValueInstantiator.java:240)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:249)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:26)\n    at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:110)\n    at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:50)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserializeWithType(CollectionDeserializer.java:310)\n    at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:42)\n    at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3788)\n    at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2779)\n    at sample.UnmodifiableSetMixinTest.read(UnmodifiableSetMixinTest.java:36)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\"><pre class=\"notranslate\"><code>java.lang.IllegalStateException: No default constructor for [collection type; class java.util.Collections$UnmodifiableSet, contains [simple type, class java.lang.Object]]\n    at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefault(StdValueInstantiator.java:240)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:249)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:26)\n    at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(AsArrayTypeDeserializer.java:110)\n    at com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.deserializeTypedFromArray(AsArrayTypeDeserializer.java:50)\n    at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserializeWithType(CollectionDeserializer.java:310)\n    at com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.deserialize(TypeWrappedDeserializer.java:42)\n    at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3788)\n    at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2779)\n    at sample.UnmodifiableSetMixinTest.read(UnmodifiableSetMixinTest.java:36)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\n</code></pre></div>\n<p dir=\"auto\">This seems like a passivity issue. Is there a workaround for this problem?</p>\n"}