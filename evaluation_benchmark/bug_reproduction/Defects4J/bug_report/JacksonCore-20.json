{"issue_id": "318", "title": "Add support for writing <code>byte[]</code> via <code>JsonGenerator.writeEmbeddedObject()</code>", "description": "\n<p dir=\"auto\">(note: should be safe for patch, that is, 2.8.3)</p>\n<p dir=\"auto\">Default implementation of 2.8-added <code class=\"notranslate\">writeEmbeddedObject()</code> throws exception (unsupported operation) for all values, since JSON does not have any native object types.<br/>\nThis is different from handling of <code class=\"notranslate\">writeObject()</code>, which tries to either delegate to <code class=\"notranslate\">ObjectCodec</code> (if one registered), or even encode \"simple\" values.</p>\n<p dir=\"auto\">However: since support for binary data is already handled in some cases using <code class=\"notranslate\">VALUE_EMBEDDED_OBJECT</code>, it would actually make sense to handle case of <code class=\"notranslate\">byte[]</code> (and, if feasible, perhaps <code class=\"notranslate\">ByteBuffer</code> for extra points), and also ensure <code class=\"notranslate\">null</code> can be written.</p>\n<p dir=\"auto\">This is likely necessary to support <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/1361/hovercard\" data-id=\"174594388\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/1361\" href=\"https://github.com/FasterXML/jackson-databind/issues/1361\">FasterXML/jackson-databind#1361</a> and should in general make system more robust.</p>\n"}