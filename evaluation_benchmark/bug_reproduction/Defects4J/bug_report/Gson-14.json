{"issue_id": "1074", "title": "$Gson$Types.resolve() shall collapse chains of super/extends type bounds to avoid StackOverflowError", "description": "\n<p dir=\"auto\">While resolving recursive generic types, $Gson$Types.resolve() sometimes starts to generate chains of type bounds like  \"super ? extends ? .... ? extends A\" , causing infinite recursion and thus StackOverflowError's like<br/>\n<code class=\"notranslate\">java.lang.StackOverflowError at com.google.gson.internal.$Gson$Types.resolveTypeVariable($Gson$Types.java:407) at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:330) at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:384) at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:379) at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:384) at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:379) at com.google.gson.internal.$Gson$Types.resolve($Gson$Types.java:384) ... </code><br/>\nThis can be reproduced on the following simple ccde:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  private static class Foo1&lt;A&gt; {\n    Foo2&lt;? extends A&gt; foo2;\n  }\n  private static class Foo2&lt;B&gt; {\n    Foo1&lt;? super B&gt; foo1;\n  }\n  public void testRecursiveResolveSimple() {\n    new Gson().getAdapter(Foo1.class);\n  }\"><pre>  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo1</span>&lt;<span class=\"pl-s1\">A</span>&gt; {\n    <span class=\"pl-smi\">Foo2</span>&lt;? <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">A</span>&gt; <span class=\"pl-s1\">foo2</span>;\n  }\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo2</span>&lt;<span class=\"pl-s1\">B</span>&gt; {\n    <span class=\"pl-smi\">Foo1</span>&lt;? <span class=\"pl-en\">super</span> <span class=\"pl-smi\">B</span>&gt; <span class=\"pl-s1\">foo1</span>;\n  }\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">testRecursiveResolveSimple</span>() {\n    <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Gson</span>().<span class=\"pl-en\">getAdapter</span>(<span class=\"pl-smi\">Foo1</span>.<span class=\"pl-s1\">class</span>);\n  }</pre></div>\n<p dir=\"auto\">This is the root cause of StackOverflowError's described in Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/gson/issues/440/hovercard\" data-id=\"63059346\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/gson/issues/440\" href=\"https://github.com/google/gson/issues/440\">#440</a> and Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/gson/issues/603/hovercard\" data-id=\"63060143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/gson/issues/603\" href=\"https://github.com/google/gson/issues/603\">#603</a>.</p>\n<p dir=\"auto\">In order to fix them, such chains need to be collapsed using the following rules:</p>\n<ul dir=\"auto\">\n<li>supertypeOf(supertypeOf(X)) == supertypeOf(X)</li>\n<li>subtypeOf(subtypeOf(X)) == subtypeOf(X)</li>\n<li>supertypeOf(subtypeOf(X)) == subtypeOf(Object.class)</li>\n<li>subtypeOf(supertypeOf(X)) == subtypeOf(Object.class)</li>\n</ul>\n"}