{"issue_id": "1403", "title": "Reference-chain hints use incorrect class-name for inner classes", "description": "\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import com.fasterxml.jackson.annotation.JsonCreator;\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport com.fasterxml.jackson.databind.JsonMappingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.IOException;\n\nimport static com.google.common.truth.Truth.assertThat;\nimport static org.junit.jupiter.api.Assertions.expectThrows;\n\npublic class ReferenceChainTest {\n    // illustrates that jackson's &quot;reference chain&quot; help-text uses incorrect class-names for inner classes\n    @Test public void incorrectReferenceChain() throws IOException {\n        JsonMappingException jsonMappingException = expectThrows(JsonMappingException.class, () -&gt; {\n            ObjectMapper objectMapper = new ObjectMapper();\n            objectMapper.readValue(objectMapper.writeValueAsBytes(new Outer()), Outer.class);\n        });\n        JsonMappingException.Reference reference = jsonMappingException.getPath().get(0);\n        assertThat(reference.toString()).isEqualTo(&quot;ReferenceChainTest$Outer[\\&quot;inner\\&quot;]&quot;);\n    }\n\n    static class Outer {\n        public Inner inner = new Inner();\n    }\n\n    static class Inner {\n        public int x;\n\n        @JsonCreator public static Inner create(@JsonProperty(&quot;x&quot;) int x) {\n            throw new RuntimeException(&quot;test-exception&quot;);\n        }\n    }\n}\n\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">JsonCreator</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">JsonProperty</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">JsonMappingException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">fasterxml</span>.<span class=\"pl-s1\">jackson</span>.<span class=\"pl-s1\">databind</span>.<span class=\"pl-s1\">ObjectMapper</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-c1\">IOException</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">truth</span>.<span class=\"pl-s1\">Truth</span>.<span class=\"pl-s1\">assertThat</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Assertions</span>.<span class=\"pl-s1\">expectThrows</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ReferenceChainTest</span> {\n    <span class=\"pl-c\">// illustrates that jackson's \"reference chain\" help-text uses incorrect class-names for inner classes</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">incorrectReferenceChain</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">JsonMappingException</span> <span class=\"pl-s1\">jsonMappingException</span> = <span class=\"pl-en\">expectThrows</span>(<span class=\"pl-smi\">JsonMappingException</span>.<span class=\"pl-s1\">class</span>, () -&gt; {\n            <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">objectMapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n            <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">writeValueAsBytes</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Outer</span>()), <span class=\"pl-smi\">Outer</span>.<span class=\"pl-s1\">class</span>);\n        });\n        <span class=\"pl-smi\">JsonMappingException</span>.<span class=\"pl-smi\">Reference</span> <span class=\"pl-s1\">reference</span> = <span class=\"pl-s1\">jsonMappingException</span>.<span class=\"pl-en\">getPath</span>().<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>);\n        <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">reference</span>.<span class=\"pl-en\">toString</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"ReferenceChainTest$Outer[\\\"inner\\\"]\"</span>);\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Outer</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Inner</span> <span class=\"pl-s1\">inner</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Inner</span>();\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Inner</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">x</span>;\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonCreator</span> <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Inner</span> <span class=\"pl-en\">create</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonProperty</span>(<span class=\"pl-s\">\"x\"</span>) <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">x</span>) {\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\">\"test-exception\"</span>);\n        }\n    }\n}</pre></div>\n"}