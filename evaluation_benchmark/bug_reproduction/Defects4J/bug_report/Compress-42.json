{"issue_id": "COMPRESS-379", "title": "isUnixSymlink returns true for Zip entries with Unix permissions 177777", "description": "\n<div class=\"user-content-block\">\n<p>This issue was originally reported in <a class=\"issue-link\" data-issue-key=\"MASSEMBLY-842\" href=\"https://issues.apache.org/jira/browse/MASSEMBLY-842\" title=\"Incorrect entries created in MANIFEST/maven\"><del>MASSEMBLY-842</del></a>, but it seems the root cause in inside Commons Compress.</p>\n<p>Consider the attached <tt>invalid-entry.jar</tt>, whose contents, as shown by the <tt>zipinfo</tt> utility, is:</p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>?rwsrwsrwt  2.0 unx        0 b- stor 17-Jan-15 16:06 META-INF/maven/\ndrwxr-xr-x  2.0 unx        0 b- stor 17-Jan-15 16:06 META-INF/\n</pre>\n</div></div>\n<p>There are some JAR files created by the Maven Assembly Plugin with content similar to this, and the entry <tt>META-INF/maven/</tt> has permissions 177777 (octal). Constructing a <tt>ZipFile</tt> from this file, the method <tt>isUnixSymlink</tt> incorrectly returns <tt>true</tt> for the entry <tt>META-INF/maven/</tt> (and it correctly returns <tt>false</tt> for the entry <tt>META-INF/</tt>.</p>\n<p>Here is a sample Java code that can be used to see the behaviour:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">public</span> <span class=\"code-keyword\">static</span> void main(<span class=\"code-object\">String</span>[] args) <span class=\"code-keyword\">throws</span> IOException {\n    <span class=\"code-keyword\">try</span> (ZipFile zipFile = <span class=\"code-keyword\">new</span> ZipFile(<span class=\"code-keyword\">new</span> File(<span class=\"code-quote\">\"invalid-entry.jar\"</span>))) {\n        printAttributes(zipFile, <span class=\"code-quote\">\"META-INF/\"</span>);\n        printAttributes(zipFile, <span class=\"code-quote\">\"META-INF/maven/\"</span>);\n    }\n}\n\n<span class=\"code-keyword\">private</span> <span class=\"code-keyword\">static</span> void printAttributes(ZipFile zipFile, <span class=\"code-object\">String</span> name) {\n    ZipArchiveEntry entry = zipFile.getEntriesInPhysicalOrder(name).iterator().next();\n    <span class=\"code-object\">System</span>.out.printf(<span class=\"code-quote\">\"%-17s: symlink:%-5s - unixMode:%s%n\"</span>, name, entry.isUnixSymlink(), entry.getUnixMode());\n}\n</pre>\n</div></div>\n<p>This code outputs:</p>\n<div class=\"preformatted panel\" style=\"border-width: 1px;\"><div class=\"preformattedContent panelContent\">\n<pre>META-INF/        : symlink:false - unixMode:16877\nMETA-INF/maven/  : symlink:true  - unixMode:65535\n</pre>\n</div></div>\n<p>The <tt>?rwsrwsrwt</tt> permissions show that the Zip entry is broken in the first place, but I think <tt>isUnixSymlink</tt> should still return <tt>false</tt> in that case, and not consider this entry to be a symlink.</p>\n<p>It seems the fix would be to update <tt>isUnixSymlink</tt> and check whether the unix mode is equal to <tt>SHORT_MASK</tt>, and return <tt>false</tt> in that case as it would indicate a broken entry. This change does not break any existing tests, but I'm not sure if this is the proper fix.</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\"><span class=\"code-keyword\">public</span> <span class=\"code-object\">boolean</span> isUnixSymlink() {\n    <span class=\"code-object\">int</span> unixMode = getUnixMode();\n    <span class=\"code-keyword\">return</span> unixMode == SHORT_MASK ? <span class=\"code-keyword\">false</span> : (unixMode &amp; UnixStat.LINK_FLAG) == UnixStat.LINK_FLAG;\n}\n</pre>\n</div></div>\n</div>\n"}