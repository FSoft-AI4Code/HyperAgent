{"issue_id": "669", "title": "assignment to object in conditional causes type error on function w/ record type return type", "description": "slightly dodgy code :)\r\n\r\n/** @returns {{prop1: (Object|undefined), prop2: (string|undefined), prop3: (string|undefined)}} */\r\nfunction func(a, b) {\r\n  var results;\r\n  if (a) {\r\n    results = {};\r\n    results.prop1 = {a: 3};\r\n  }\r\n  if (b) {\r\n    results = results || {};\r\n    results.prop2 = 'prop2';\r\n  } else {\r\n    results = results || {};\r\n    results.prop3 = 'prop3';\r\n  }\r\n  return results;\r\n}\r\nresults in this error:\r\n\r\n\r\nJSC_TYPE_MISMATCH: inconsistent return type\r\nfound   : ({prop1: {a: number}}|{})\r\nrequired: {prop1: (Object|null|undefined), prop2: (string|undefined), prop3: (string|undefined)} at line 18 character 7\r\nreturn results;\r\n\r\n\r\n\r\ndefining results on the first line on the function causes it the world.\r\nthe still dodgy, but slightly less so, use of this is if the function return type were that record type|undefined and not all branches were guaranteed to be executed."}