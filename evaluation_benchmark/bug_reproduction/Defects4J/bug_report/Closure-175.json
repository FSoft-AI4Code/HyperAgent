{"issue_id": "1101", "title": "Erroneous optimization in ADVANCED_OPTIMIZATIONS mode", "description": "\r\n<b>What steps will reproduce the problem?</b>\n\r\n1. Create a file input.js with the following &quot;minimal&quot; test case:\r\n\r\n    window[&quot;anchor&quot;] = function (obj, modifiesProp) {\r\n        return (function (saved) {\r\n            return modifiesProp(obj) + saved;\r\n        })(obj[&quot;prop&quot;]);\r\n    }\r\n\r\n2. Compile it with:\r\n\r\n    java -jar .../build/compiler.jar                    \\\r\n        --compilation_level ADVANCED_OPTIMIZATIONS      \\\r\n        --warning_level VERBOSE                         \\\r\n        --externs window.js                             \\\r\n        --js input.js                                   \\\r\n        --js_output_file output.js\r\n\r\n3. That's all!\r\n\r\nWhat is the expected output?\r\n\r\n    window.foo=function(a,b){var HOLD=a.prop;return b(a)+HOLD};\r\n\r\nWhat do you see instead?\r\n\r\n    window.foo=function(a,b){return b(a)+a.prop};\r\n\r\nNote how this is semantically very different if modifiesProp/b (whose\r\nsemantics are unknown to the compiler) side-effects a.prop.\r\n\r\nThe evaluation order of + is well-defined in EcmaScript 5, but even\r\nthen, this happens even if one substitutes the , (comma) operator.\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n\r\nGit HEAD\r\n\r\n    commit 4a62ee4bca02169dd77a6f26ed64a624b3f05f95\r\n    Author: Chad Killingsworth &lt;chadkillingsworth@missouristate.edu&gt;\r\n    Date:   Wed Sep 25 14:52:28 2013 -0500\r\n    \r\n        Add history.state to html5 externs\r\n\r\non Linux."}