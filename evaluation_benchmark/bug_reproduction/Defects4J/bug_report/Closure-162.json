{"issue_id": "548", "title": "Type aliases cannot be used in type annotations before their definitions", "description": "<b>What steps will reproduce the problem?</b>\n1. Compile the following with full warnings:\r\n\r\ngoog.provide('foo.Foo');\r\ngoog.provide('foo.Foo.Bar');\r\n\r\ngoog.scope(function() {\r\n  /**\r\n   * @param {Foo.Bar} bar\r\n   * @constructor\r\n   */\r\n  foo.Foo = function(bar) {\r\n    this.bar = bar;\r\n  };\r\n  var Foo = foo.Foo;\r\n\r\n  /** @type {Foo.Bar} */\r\n  Foo.prototype.bar = null;\r\n\r\n  /** @constructor */\r\n  Foo.Bar = function() {};\r\n});\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThis should work, but instead I get an error:\r\n\r\nERROR - Bad type annotation. Unknown type Foo.Bar\r\n   * @param {Foo.Bar} bar\r\n                    ^\r\n\r\nThis can be worked around by writing explicitly foo.Foo.Bar, but this leads to strange inconsistencies in the code before vs. after the alias definition.\r\n\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nr1346 in Linux\r\n\r\n<b>Please provide any additional information below.</b>\n"}