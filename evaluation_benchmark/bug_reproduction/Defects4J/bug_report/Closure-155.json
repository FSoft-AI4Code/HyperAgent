{"issue_id": "378", "title": "Overzealous arguments optimisation", "description": "Consider the following JavaScript code:\r\n\r\nfunction d3_call(callback) {\r\n  var f = callback;\r\n  arguments[0] = this;\r\n  f.apply(this, arguments);\r\n  return this;\r\n}\r\n\r\nThis is optimised to:\r\n\r\nfunction d3_call(a){arguments[0]=this;a.apply(this,arguments);return this};\r\n\r\nHowever, the use of a temporary variable `f` is necessary to avoid `arguments[0] = this` from overwriting the first argument.\r\n\r\nIn the above optimised code, `arguments[0] = this` causes `this` to be assigned to `a`.\r\n\r\nVerified on latest SVN r878.\r\n\r\nSee also: https://github.com/mbostock/d3/issues/closed#issue/68"}