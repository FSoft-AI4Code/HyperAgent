{"issue_id": "941", "title": "Deserialization from \"{}\" to ObjectNode field causes \"out of END_OBJECT token\" error", "description": "\n<p dir=\"auto\">I found that deserializing from an empty object (<code class=\"notranslate\">{}</code>) to ObjectNode field in a class field fails.</p>\n<p dir=\"auto\">Here is the minimum code to reproduce:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='public class Main\n{\n    public static class MyValue\n    {\n        private final ObjectNode object;\n\n        @JsonCreator\n        public MyValue(ObjectNode object) { this.object = object; }\n\n        @JsonValue\n        public ObjectNode getObject() { return object; }\n    }\n\n    public static void main(String[] args)\n            throws Exception\n    {\n        ObjectMapper om = new ObjectMapper();\n\n        ObjectNode object = new ObjectNode(JsonNodeFactory.instance);\n\n        String json = om.writeValueAsString(object);\n        System.out.println(\"json: \"+json);\n\n        ObjectNode de1 = om.readValue(json, ObjectNode.class);  // this works\n        System.out.println(\"Deserialized to ObjectNode: \"+de1);\n\n        MyValue de2 = om.readValue(json, MyValue.class);  // but this throws exception\n        System.out.println(\"Deserialized to MyValue: \"+de2);\n    }\n}'><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Main</span>\n{\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyValue</span>\n    {\n        <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-s1\">object</span>;\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonCreator</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyValue</span>(<span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-s1\">object</span>) { <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">object</span> = <span class=\"pl-s1\">object</span>; }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonValue</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-en\">getObject</span>() { <span class=\"pl-k\">return</span> <span class=\"pl-s1\">object</span>; }\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>)\n            <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span>\n    {\n        <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">om</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n\n        <span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-s1\">object</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectNode</span>(<span class=\"pl-smi\">JsonNodeFactory</span>.<span class=\"pl-s1\">instance</span>);\n\n        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">json</span> = <span class=\"pl-s1\">om</span>.<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-s1\">object</span>);\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"json: \"</span>+<span class=\"pl-s1\">json</span>);\n\n        <span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-s1\">de1</span> = <span class=\"pl-s1\">om</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">json</span>, <span class=\"pl-smi\">ObjectNode</span>.<span class=\"pl-s1\">class</span>);  <span class=\"pl-c\">// this works</span>\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Deserialized to ObjectNode: \"</span>+<span class=\"pl-s1\">de1</span>);\n\n        <span class=\"pl-smi\">MyValue</span> <span class=\"pl-s1\">de2</span> = <span class=\"pl-s1\">om</span>.<span class=\"pl-en\">readValue</span>(<span class=\"pl-s1\">json</span>, <span class=\"pl-smi\">MyValue</span>.<span class=\"pl-s1\">class</span>);  <span class=\"pl-c\">// but this throws exception</span>\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Deserialized to MyValue: \"</span>+<span class=\"pl-s1\">de2</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">Result is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='json: {}\nDeserialized to ObjectNode: {}\nException in thread \"main\" com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of com.fasterxml.jackson.databind.node.ObjectNode out of END_OBJECT token\n at [Source: {}; line: 1, column: 2]\n        at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)\n        at com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:854)\n        at com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:850)\n        at com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.deserialize(JsonNodeDeserializer.java:104)\n        at com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.deserialize(JsonNodeDeserializer.java:83)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1095)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:294)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:131)\n        at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3731)\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2724)\n        at Main.main(Main.java:35)'><pre class=\"notranslate\"><code>json: {}\nDeserialized to ObjectNode: {}\nException in thread \"main\" com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of com.fasterxml.jackson.databind.node.ObjectNode out of END_OBJECT token\n at [Source: {}; line: 1, column: 2]\n        at com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)\n        at com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:854)\n        at com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:850)\n        at com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.deserialize(JsonNodeDeserializer.java:104)\n        at com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.deserialize(JsonNodeDeserializer.java:83)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1095)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:294)\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:131)\n        at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3731)\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2724)\n        at Main.main(Main.java:35)\n</code></pre></div>\n<p dir=\"auto\">If the object is not empty (e.g. <code class=\"notranslate\">{\"k\":\"v\"}</code>), it works:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='        ...\n        ObjectNode object = new ObjectNode(JsonNodeFactory.instance);\n        object.put(\"k\", \"v\");  // added\n        ...'><pre>        ...\n        <span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-s1\">object</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectNode</span>(<span class=\"pl-smi\">JsonNodeFactory</span>.<span class=\"pl-s1\">instance</span>);\n        <span class=\"pl-s1\">object</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-s\">\"k\"</span>, <span class=\"pl-s\">\"v\"</span>);  <span class=\"pl-c\">// added</span>\n        ...</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='json: {\"k\":\"v\"}\nDeserialized to ObjectNode: {\"k\":\"v\"}\nDeserialized to MyValue: io.digdag.cli.Main$MyValue@17550481'><pre class=\"notranslate\"><code>json: {\"k\":\"v\"}\nDeserialized to ObjectNode: {\"k\":\"v\"}\nDeserialized to MyValue: io.digdag.cli.Main$MyValue@17550481\n</code></pre></div>\n<p dir=\"auto\">Environment:</p>\n<ul dir=\"auto\">\n<li>jackson-core 2.6.2</li>\n<li>jackson-databind 2.6.2</li>\n<li>Java 8 (<code class=\"notranslate\">Java(TM) SE Runtime Environment (build 1.8.0_20-b26)</code>)</li>\n</ul>\n"}