{"issue_id": "315", "title": "<code>OutOfMemoryError</code> when writing BigDecimal", "description": "\n<p dir=\"auto\">(note: moved from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/1316/hovercard\" data-id=\"168218468\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/1316\" href=\"https://github.com/FasterXML/jackson-databind/issues/1316\">FasterXML/jackson-databind#1316</a> reported by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/gmethvin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gmethvin\">@gmethvin</a>)</p>\n<p dir=\"auto\">When I've enabled the <code class=\"notranslate\">WRITE_BIGDECIMAL_AS_PLAIN</code> setting on Jackson 2.7.5, Jackson will attempt to write out the whole number, no matter how large the exponent.</p>\n<p dir=\"auto\">For example, the following code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='ObjectMapper mapper = new ObjectMapper().enable(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\nmapper.writeValueAsString(new java.math.BigDecimal(\"9.223372E+1010671858\"));'><pre><span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>().<span class=\"pl-en\">enable</span>(<span class=\"pl-smi\">JsonGenerator</span>.<span class=\"pl-s1\">Feature</span>.<span class=\"pl-c1\">WRITE_BIGDECIMAL_AS_PLAIN</span>);\n<span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">math</span>.<span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-s\">\"9.223372E+1010671858\"</span>));</pre></div>\n<p dir=\"auto\">triggers the exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.OutOfMemoryError: Java heap space\n  at java.lang.AbstractStringBuilder.&lt;init&gt;(AbstractStringBuilder.java:68)\n  at java.lang.StringBuilder.&lt;init&gt;(StringBuilder.java:101)\n  at java.math.BigDecimal.toPlainString(BigDecimal.java:2964)\n  at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(WriterBasedJsonGenerator.java:690)\n  at com.fasterxml.jackson.databind.ser.std.NumberSerializer.serialize(NumberSerializer.java:45)\n  at com.fasterxml.jackson.databind.ser.std.NumberSerializer.serialize(NumberSerializer.java:19)\n  at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:130)\n  at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3612)\n  at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:2980)\n  ... 23 elided\"><pre class=\"notranslate\"><code>java.lang.OutOfMemoryError: Java heap space\n  at java.lang.AbstractStringBuilder.&lt;init&gt;(AbstractStringBuilder.java:68)\n  at java.lang.StringBuilder.&lt;init&gt;(StringBuilder.java:101)\n  at java.math.BigDecimal.toPlainString(BigDecimal.java:2964)\n  at com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(WriterBasedJsonGenerator.java:690)\n  at com.fasterxml.jackson.databind.ser.std.NumberSerializer.serialize(NumberSerializer.java:45)\n  at com.fasterxml.jackson.databind.ser.std.NumberSerializer.serialize(NumberSerializer.java:19)\n  at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:130)\n  at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3612)\n  at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:2980)\n  ... 23 elided\n</code></pre></div>\n<p dir=\"auto\">I know technically Jackson is doing what you're telling it to do (so if you don't feel this is an issue feel free to close it). But it would be nice if <code class=\"notranslate\">WRITE_BIGDECIMAL_AS_PLAIN</code> set a reasonable length on the number, so as not to leave users open to denial of service vulnerabilities.</p>\n<p dir=\"auto\">(Actually, I think this might technically be an issue in jackson-core; let me know if I should resubmit.)</p>\n"}