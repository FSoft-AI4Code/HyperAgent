{"issue_id": "MATH-198", "title": "java.lang.StringIndexOutOfBoundsException in ComplexFormat.parse(String source, ParsePosition pos)", "description": "\n<div class=\"user-content-block\">\n<p>The parse(String source, ParsePosition pos) method in the ComplexFormat class does not check whether the imaginary character is set or not which produces StringIndexOutOfBoundsException in the substring method :</p>\n<p>(line 375 of ComplexFormat)<br/>\n...<br/>\n        // parse imaginary character<br/>\n        int n = getImaginaryCharacter().length();</p>\n<p>        startIndex = pos.getIndex();<br/>\n        int endIndex = startIndex + n;<br/>\n        if (source.substring(startIndex, endIndex).compareTo(<br/>\n            getImaginaryCharacter()) != 0) {<br/>\n...<br/>\nI encoutered this exception typing in a JTextFied with ComplexFormat set to look up an AbstractFormatter.<br/>\nIf only the user types the imaginary part of the complex number first, he gets this exception.</p>\n<p>Solution: Before setting to n length of the imaginary character, check if the source contains it. My proposal:<br/>\n...<br/>\n        int n = 0;<br/>\n        if (source.contains(getImaginaryCharacter()))<br/>\n        n = getImaginaryCharacter().length();<br/>\n...\t\t </p>\n<p>F.S.</p>\n</div>\n"}