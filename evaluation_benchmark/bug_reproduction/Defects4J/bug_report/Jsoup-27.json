{"issue_id": "215", "title": "Invalid HTTP-Response header leads to exception", "description": "\n<p dir=\"auto\">In particular case a HTTP-Webpage responses with a invalid HTTP-Charset field (delivered UFT8 instead of UTF8).<br/>\nThis leads to an UnsupportedCharsetException in org.jsoup.helper.DataUtil at around Line 93(?) where :</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='  Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\");\n  docData = Charset.forName(charsetName).decode(byteData).toString();'><pre>  <span class=\"pl-s1\">Validate</span>.<span class=\"pl-en\">notEmpty</span>(<span class=\"pl-s1\">charsetName</span>, <span class=\"pl-s\">\"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\"</span>);\n  <span class=\"pl-s1\">docData</span> = <span class=\"pl-s1\">Charset</span>.<span class=\"pl-en\">forName</span>(<span class=\"pl-s1\">charsetName</span>).<span class=\"pl-en\">decode</span>(<span class=\"pl-s1\">byteData</span>).<span class=\"pl-en\">toString</span>();</pre></div>\n<p dir=\"auto\">I fixed it by wrapping a try catch statement around these two lines such that:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='try{\n  Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\");\n  docData = Charset.forName(charsetName).decode(byteData).toString();\n} catch(UnsupportedCharsetException e){\n  return parseByteData(byteData,(String)null,baseUri,parser);\n}'><pre><span class=\"pl-k\">try</span>{\n  <span class=\"pl-s1\">Validate</span>.<span class=\"pl-en\">notEmpty</span>(<span class=\"pl-s1\">charsetName</span>, <span class=\"pl-s\">\"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\"</span>);\n  <span class=\"pl-s1\">docData</span> = <span class=\"pl-s1\">Charset</span>.<span class=\"pl-en\">forName</span>(<span class=\"pl-s1\">charsetName</span>).<span class=\"pl-en\">decode</span>(<span class=\"pl-s1\">byteData</span>).<span class=\"pl-en\">toString</span>();\n} <span class=\"pl-k\">catch</span>(<span class=\"pl-smi\">UnsupportedCharsetException</span> <span class=\"pl-s1\">e</span>){\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">parseByteData</span>(<span class=\"pl-s1\">byteData</span>,(<span class=\"pl-smi\">String</span>)<span class=\"pl-c1\">null</span>,<span class=\"pl-s1\">baseUri</span>,<span class=\"pl-s1\">parser</span>);\n}</pre></div>\n<p dir=\"auto\">It now falls back to the none charset argument assigned clause, and tries to detect the character set via HTML.</p>\n"}