{"issue_id": "889", "title": "Configuring an ObjectMapper's DateFormat changes time zone when serialising Joda DateTime", "description": "\n<p dir=\"auto\">The serialisation of Joda <code class=\"notranslate\">DateTime</code> instances behaves differently in 2.6.0 vs 2.5.4 when the <code class=\"notranslate\">ObjectMapper</code>'s had its <code class=\"notranslate\">DateFormat</code> configured. The behaviour change is illustrated by the following code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='public static void main(String[] args) throws JsonProcessingException {\n    System.out.println(createObjectMapper()\n            .writeValueAsString(new DateTime(1988, 6, 25, 20, 30, DateTimeZone.UTC)));\n}\n\nprivate static ObjectMapper createObjectMapper() {\n    ObjectMapper mapper = new ObjectMapper();\n    mapper.registerModule(createJodaModule());\n    mapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n    System.out.println(mapper.getSerializationConfig().getTimeZone());\n    mapper.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"));\n    System.out.println(mapper.getSerializationConfig().getTimeZone());\n    return mapper;\n}\n\nprivate static SimpleModule createJodaModule() {\n    SimpleModule module = new SimpleModule();\n    module.addSerializer(DateTime.class, new DateTimeSerializer(\n            new JacksonJodaDateFormat(DateTimeFormat.forPattern(\"yyyy-MM-dd HH:mm:ss\")\n                    .withZoneUTC())));\n        return module;\n    }'><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">JsonProcessingException</span> {\n    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-en\">createObjectMapper</span>()\n            .<span class=\"pl-en\">writeValueAsString</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">DateTime</span>(<span class=\"pl-c1\">1988</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">25</span>, <span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">30</span>, <span class=\"pl-smi\">DateTimeZone</span>.<span class=\"pl-c1\">UTC</span>)));\n}\n\n<span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">createObjectMapper</span>() {\n    <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n    <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">registerModule</span>(<span class=\"pl-en\">createJodaModule</span>());\n    <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-smi\">SerializationFeature</span>.<span class=\"pl-c1\">WRITE_DATES_AS_TIMESTAMPS</span>, <span class=\"pl-c1\">false</span>);\n    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">getSerializationConfig</span>().<span class=\"pl-en\">getTimeZone</span>());\n    <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">setDateFormat</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleDateFormat</span>(<span class=\"pl-s\">\"yyyy-MM-dd HH:mm:ss\"</span>));\n    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">getSerializationConfig</span>().<span class=\"pl-en\">getTimeZone</span>());\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">mapper</span>;\n}\n\n<span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">SimpleModule</span> <span class=\"pl-s1\">createJodaModule</span>() {\n    <span class=\"pl-smi\">SimpleModule</span> <span class=\"pl-s1\">module</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleModule</span>();\n    <span class=\"pl-s1\">module</span>.<span class=\"pl-en\">addSerializer</span>(<span class=\"pl-smi\">DateTime</span>.<span class=\"pl-s1\">class</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DateTimeSerializer</span>(\n            <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JacksonJodaDateFormat</span>(<span class=\"pl-s1\">DateTimeFormat</span>.<span class=\"pl-en\">forPattern</span>(<span class=\"pl-s\">\"yyyy-MM-dd HH:mm:ss\"</span>)\n                    .<span class=\"pl-en\">withZoneUTC</span>())));\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">module</span>;\n    }</pre></div>\n<p dir=\"auto\">When run with Jackson 2.5.4 the output is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\nsun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\n\"1988-06-25 20:30:00\"'><pre class=\"notranslate\"><code>sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\nsun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\n\"1988-06-25 20:30:00\"\n</code></pre></div>\n<p dir=\"auto\">When run with Jackson 2.6.0 the output is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\nsun.util.calendar.ZoneInfo[id=\"Europe/London\",offset=0,dstSavings=3600000,useDaylight=true,transitions=242,lastRule=java.util.SimpleTimeZone[id=Europe/London,offset=0,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]]\n\"1988-06-25 21:30:00\"'><pre class=\"notranslate\"><code>sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\nsun.util.calendar.ZoneInfo[id=\"Europe/London\",offset=0,dstSavings=3600000,useDaylight=true,transitions=242,lastRule=java.util.SimpleTimeZone[id=Europe/London,offset=0,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]]\n\"1988-06-25 21:30:00\"\n</code></pre></div>\n<p dir=\"auto\">It looks like the fix for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/824/hovercard\" data-id=\"87624693\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/824\" href=\"https://github.com/FasterXML/jackson-databind/issues/824\">#824</a> is the cause. In 2.6, the call to <code class=\"notranslate\">mapper.setDateFormat</code> causes the <code class=\"notranslate\">ObjectMapper</code>'s time zone to be set to the JVM's default time zone. In 2.5.x, calling <code class=\"notranslate\">mapper.setDateFormat</code> has no effect on its time zone.</p>\n"}