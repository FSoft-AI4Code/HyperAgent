{"issue_id": "LANG-775", "title": "TypeUtils.getTypeArguments() misses type arguments for partially-assigned classes", "description": "\n<div class=\"user-content-block\">\n<p>failing test code to add to TypeUtilsTest.testGetTypeArguments():</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">typeVarAssigns = TypeUtils.getTypeArguments(Other.class, This.class);\nAssert.assertEquals(2, typeVarAssigns.size());\nAssert.assertEquals(<span class=\"code-object\">String</span>.class, typeVarAssigns.get(This.<span class=\"code-keyword\">class.</span>getTypeParameters()[0]));\nAssert.assertEquals(Other.<span class=\"code-keyword\">class.</span>getTypeParameters()[0], typeVarAssigns.get(This.<span class=\"code-keyword\">class.</span>getTypeParameters()[1]));\n</pre>\n</div></div>\n<p>These should pass based on:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">\n<span class=\"code-keyword\">public</span> <span class=\"code-keyword\">interface</span> This&lt;K, V&gt; {\n}\n\n<span class=\"code-keyword\">public</span> <span class=\"code-keyword\">class </span>Other&lt;T&gt; <span class=\"code-keyword\">implements</span> This&lt;<span class=\"code-object\">String</span>, T&gt; {\n}\n</pre>\n</div></div>\n<p>This case fails because the current code ignores the Other class due to its specifying its own type variables, which is obviously incorrect.  This report is extrapolated from an offline report received by Hen.</p>\n</div>\n"}