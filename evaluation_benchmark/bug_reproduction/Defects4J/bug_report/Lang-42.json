{"issue_id": "LANG-480", "title": "StringEscapeUtils.escapeHtml incorrectly converts unicode characters above U+00FFFF into 2 characters", "description": "\n<div class=\"user-content-block\">\n<p>Characters that are represented as a 2 characters internaly by java are incorrectly converted by the function. The following test displays the problem quite nicely:</p>\n<p>import org.apache.commons.lang.*;</p>\n<p>public class J2 {<br/>\n    public static void main(String[] args) throws Exception {<br/>\n        // this is the utf8 representation of the character:<br/>\n        // COUNTING ROD UNIT DIGIT THREE<br/>\n        // in unicode<br/>\n        // codepoint: U+1D362<br/>\n        byte[] data = new byte[] </p>\n{ (byte)0xF0, (byte)0x9D, (byte)0x8D, (byte)0xA2 }\n<p>;</p>\n<p>        //output is: &amp;#55348;&amp;#57186;<br/>\n        // should be: &amp;#119650;<br/>\n        System.out.println(\"'\" + StringEscapeUtils.escapeHtml(new String(data, \"UTF8\")) + \"'\");<br/>\n    }<br/>\n}</p>\n<p>Should be very quick to fix, feel free to drop me an email if you want a patch.</p>\n</div>\n"}