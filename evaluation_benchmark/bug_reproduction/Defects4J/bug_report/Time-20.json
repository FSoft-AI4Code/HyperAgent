{"issue_id": "126", "title": "#126 Errors creating/parsing dates with specific time zones.\n\n<small>\n<a class=\"icon\" href=\"feed.rss\" rel=\"nofollow\" title=\"Follow this Ticket\"><i class=\"fa fa-rss\"></i></a>\n</small>\n", "description": "\n<div><div class=\"markdown_content\"><p>Consider the following test code using Joda 2.0</p>\n<p>import org.joda.time.DateTime;<br/>\nimport org.joda.time.DateTimeZone;<br/>\nimport org.joda.time.format.DateTimeFormat;<br/>\nimport org.joda.time.format.DateTimeFormatter;</p>\n<p>import java.util.Set;</p>\n<p>public class JodaDateTimeZoneTester {</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">DateTimeFormatter</span> <span class=\"nt\">formatter</span> <span class=\"o\">=</span> <span class=\"nt\">DateTimeFormat</span><span class=\"p\">.</span><span class=\"nc\">forPattern</span><span class=\"o\">(</span><span class=\"s2\">\"MM/dd/yyyy HH:mm:ss.SSS ZZZ\"</span><span class=\"o\">);</span>\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">int</span> <span class=\"nt\">numTimeZonesTested</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">int</span> <span class=\"nt\">numTimeZonesPassed</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">int</span> <span class=\"nt\">numTimeZonesFailed</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">int</span> <span class=\"nt\">numTimeZonesException</span> <span class=\"o\">=</span> <span class=\"nt\">0</span><span class=\"o\">;</span>\n\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">String</span> <span class=\"nt\">convertDateTimeToFormattedString</span><span class=\"o\">(</span><span class=\"nt\">DateTime</span> <span class=\"nt\">dateTime</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n    <span class=\"err\">return</span> <span class=\"err\">formatter.print(dateTime)</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">DateTime</span> <span class=\"nt\">parseStringToDateTime</span><span class=\"o\">(</span><span class=\"nt\">String</span> <span class=\"nt\">formattedDateTime</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n    <span class=\"err\">return</span> <span class=\"err\">formatter.parseDateTime(formattedDateTime)</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"nt\">private</span> <span class=\"nt\">static</span> <span class=\"nt\">void</span> <span class=\"nt\">testDateTimeFormatter</span><span class=\"o\">(</span><span class=\"nt\">DateTime</span> <span class=\"nt\">dateTime</span><span class=\"o\">,</span> <span class=\"nt\">String</span> <span class=\"nt\">timeZone</span><span class=\"o\">)</span> <span class=\"p\">{</span>\n    <span class=\"err\">numTimeZonesTested++</span><span class=\"p\">;</span>\n\n    <span class=\"err\">final</span> <span class=\"err\">String</span> <span class=\"err\">dateTimeZoneId</span> <span class=\"err\">=</span> <span class=\"err\">dateTime.getZone().getID()</span><span class=\"p\">;</span>\n\n    <span class=\"err\">if</span> <span class=\"err\">(!timeZone.equals(dateTimeZoneId))</span> <span class=\"err\">{</span>\n        <span class=\"err\">numTimeZonesFailed++</span><span class=\"p\">;</span>\n        <span class=\"err\">System.out.println(timeZone</span> <span class=\"err\">+</span> <span class=\"err\">\"</span> <span class=\"err\">failed</span> <span class=\"err\">to</span> <span class=\"err\">construct</span> <span class=\"err\">into</span> <span class=\"err\">the</span> <span class=\"err\">proper</span> <span class=\"err\">date</span> <span class=\"err\">time</span> <span class=\"err\">zone</span> <span class=\"err\">-</span> <span class=\"err\">constructed</span> <span class=\"err\">time</span> <span class=\"err\">zone</span> <span class=\"err\">=</span> <span class=\"err\">\"</span> <span class=\"err\">+</span> <span class=\"err\">dateTimeZoneId)</span><span class=\"p\">;</span>\n        <span class=\"err\">return</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"nt\">try</span> <span class=\"p\">{</span>\n        <span class=\"err\">DateTime</span> <span class=\"err\">convertedDateTime</span> <span class=\"err\">=</span> <span class=\"err\">parseStringToDateTime(convertDateTimeToFormattedString(dateTime))</span><span class=\"p\">;</span>\n\n        <span class=\"err\">if</span> <span class=\"err\">(dateTime.equals(convertedDateTime))</span> <span class=\"err\">{</span>\n            <span class=\"err\">numTimeZonesPassed++</span><span class=\"p\">;</span>\n            <span class=\"err\">//System.out.println(dateTime.getZone().getID()</span> <span class=\"err\">+</span> <span class=\"err\">\"</span> <span class=\"err\">passed.\")</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span> <span class=\"nt\">else</span> <span class=\"p\">{</span>\n            <span class=\"err\">numTimeZonesFailed++</span><span class=\"p\">;</span>\n            <span class=\"err\">System.out.println(\"Formatter</span> <span class=\"err\">failed</span> <span class=\"err\">for</span> <span class=\"err\">time</span> <span class=\"err\">zone</span> <span class=\"n\">ID</span><span class=\"p\">:</span> <span class=\"s2\">\" + dateTimeZoneId + \"</span>    <span class=\"n\">converted</span> <span class=\"n\">it</span> <span class=\"kc\">to</span><span class=\"o\">:</span> <span class=\"s2\">\" + convertedDateTime.getZone().getID());</span>\n<span class=\"s2\">        }</span>\n<span class=\"s2\">    } catch (IllegalArgumentException iae) {</span>\n<span class=\"s2\">        numTimeZonesException++;</span>\n<span class=\"s2\">        System.out.println(\"</span><span class=\"n\">Formatter</span> <span class=\"n\">threw</span> <span class=\"n\">exception</span> <span class=\"n\">for</span> <span class=\"n\">time</span> <span class=\"n\">zone</span> <span class=\"n\">id</span><span class=\"o\">:</span> <span class=\"s2\">\" + dateTimeZoneId);</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">}</span>\n\n<span class=\"s2\">public static void main(String</span><span class=\"cp\">[]</span><span class=\"s2\"> args) {</span>\n<span class=\"s2\">    Set&lt;String&gt; timeZones = DateTimeZone.getAvailableIDs();</span>\n\n<span class=\"s2\">    for (String timeZone : timeZones) {</span>\n<span class=\"s2\">        testDateTimeFormatter(DateTime.now().withZone(DateTimeZone.forID(timeZone)), timeZone);</span>\n<span class=\"s2\">    }</span>\n\n<span class=\"s2\">    System.out.println();</span>\n<span class=\"s2\">    System.out.println(\"</span><span class=\"n\">Number</span> <span class=\"n\">of</span> <span class=\"n\">Time</span> <span class=\"n\">Zones</span> <span class=\"n\">tested</span><span class=\"o\">:</span> <span class=\"s2\">\" + numTimeZonesTested);</span>\n<span class=\"s2\">    System.out.println(\"</span><span class=\"n\">Number</span> <span class=\"n\">passed</span><span class=\"o\">:</span>     <span class=\"s2\">\" + numTimeZonesPassed);</span>\n<span class=\"s2\">    System.out.println(\"</span><span class=\"n\">Number</span> <span class=\"n\">failed</span><span class=\"o\">:</span>     <span class=\"s2\">\" + numTimeZonesFailed);</span>\n<span class=\"s2\">    System.out.println(\"</span><span class=\"n\">Number</span> <span class=\"n\">exceptions</span><span class=\"o\">:</span> <span class=\"err\">\"</span> <span class=\"o\">+</span> <span class=\"n\">numTimeZonesException</span><span class=\"p\">);</span>\n    <span class=\"err\">System.out.println()</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n<p>}</p>\n<p>The results are out of 572 time zones 130 fail and 30 throw exceptions. </p>\n<p>The failures are the most interesting. When I query DateTimeZone to get its time zone ids I will get a time zone like America/Atka. When I take that id and create a date time with it its time zone id is America/Adak. It is like there are multiple list of time zones in Joda time and they are out of sync. </p>\n<p>Source code is attached. </p></div></div>\n"}