{"issue_id": "1053", "title": "Negative zero", "description": "\n<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I have been cross testing various json parsers looking for those that expose the lexical of json numbers and not only their bound java.lang.Number. Because of the lazy parsing done by gson with <code class=\"notranslate\">LazilyParsedNumber</code>,  that keeps the lexical, all my roundtrip tests pass apart one: the lexical  <code class=\"notranslate\">-0</code> that is treated as it were <code class=\"notranslate\">0</code></p>\n<p dir=\"auto\">I read some threads about negative zero:<br/>\n<a href=\"https://www.ietf.org/mail-archive/web/json/current/msg03668.html\" rel=\"nofollow\">https://www.ietf.org/mail-archive/web/json/current/msg03668.html</a><br/>\n<a href=\"https://www.ietf.org/mail-archive/web/json/current/msg01520.html\" rel=\"nofollow\">https://www.ietf.org/mail-archive/web/json/current/msg01520.html</a><br/>\n<a href=\"https://www.ietf.org/mail-archive/web/json/current/msg01523.html\" rel=\"nofollow\">https://www.ietf.org/mail-archive/web/json/current/msg01523.html</a><br/>\n<a href=\"https://www.ietf.org/mail-archive/web/json/current/msg01525.html\" rel=\"nofollow\">https://www.ietf.org/mail-archive/web/json/current/msg01525.html</a></p>\n<p dir=\"auto\">I created this issue thinking that <code class=\"notranslate\">-0</code> is a float, the same as <code class=\"notranslate\">-0.0</code>, since a signed zero makes sense only in floating point numbers and also because in Java only Double/Float preserve sign of zero.  This would have the implication that <code class=\"notranslate\">-0</code> could not be validated by jsonschema <code class=\"notranslate\">type</code> <code class=\"notranslate\">integer</code> , and that a jsonschema implementation would have the need to know if a <code class=\"notranslate\">-0</code> is present in json data, but probably this is not the case.</p>\n<p dir=\"auto\">After I started to (re)consider that <code class=\"notranslate\">-0</code> could be an integer, only that seems that in no programming language there is an integer that preserves sign for zero.</p>\n<p dir=\"auto\">In any case, differentiating between <code class=\"notranslate\">0</code> and <code class=\"notranslate\">-0</code>  at lexical level would allow a client of gson to be able to refuse the value <code class=\"notranslate\">-0</code>.</p>\n<p dir=\"auto\">Gson could easily support differentiating between <code class=\"notranslate\">0</code> and <code class=\"notranslate\">-0</code>: in code <code class=\"notranslate\">-0</code> is <a href=\"https://github.com/google/gson/blob/master/gson/src/main/java/com/google/gson/stream/JsonReader.java#L731\">treated as an integer (PEEKED_LONG) in JsonReader</a> so its value is stored in a Java <code class=\"notranslate\">long</code> that cannot represent negative zero. I noted that <code class=\"notranslate\">-0.0</code> roundtrips correctly because is treated as a PEEKED_NUMBER that is kept as a Java String. So the case of <code class=\"notranslate\">-0</code> could be trapped and treated as <code class=\"notranslate\">-0.0</code>, as a PEEKED_NUMBER, in this way the <code class=\"notranslate\">toString()</code> method of <code class=\"notranslate\">LazilyParsedNumber</code> will return <code class=\"notranslate\">-0</code> and gson will be able to roundtrip any valid number value found in source, only clients using <code class=\"notranslate\">Number.toString()</code> will notice any difference.</p>\n<p dir=\"auto\">My proposal is to change <a href=\"https://github.com/google/gson/blob/master/gson/src/main/java/com/google/gson/stream/JsonReader.java#L731\">this code</a>  from</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      if (last == NUMBER_CHAR_DIGIT &amp;&amp; fitsInLong &amp;&amp; (value != Long.MIN_VALUE || negative)) {\"><pre class=\"notranslate\"><code>      if (last == NUMBER_CHAR_DIGIT &amp;&amp; fitsInLong &amp;&amp; (value != Long.MIN_VALUE || negative)) {\n</code></pre></div>\n<p dir=\"auto\">to</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      if (last == NUMBER_CHAR_DIGIT &amp;&amp; fitsInLong &amp;&amp; (value!=0 || false==negative) &amp;&amp; (value != Long.MIN_VALUE || negative)) {\"><pre class=\"notranslate\"><code>      if (last == NUMBER_CHAR_DIGIT &amp;&amp; fitsInLong &amp;&amp; (value!=0 || false==negative) &amp;&amp; (value != Long.MIN_VALUE || negative)) {\n</code></pre></div>\n<p dir=\"auto\">Thanks,<br/>\nMichele</p>\n"}