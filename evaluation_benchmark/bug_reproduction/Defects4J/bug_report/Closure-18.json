{"issue_id": "768", "title": "Dependency sorting with closurePass set to false no longer works.", "description": "<b>What steps will reproduce the problem?</b>\n\r\n1. Instantiate new instance of Compiler\r\n\r\n2. Set closurePass to false to prevent goog.require/goog.provide removal.\r\ncompilerOptions.setClosurePass(false);\r\n\r\n3. Turn dependency sorting on.\r\nDependencyOptions dependencyOptions = new DependencyOptions();\r\ndependencyOptions.setDependencySorting(true);\r\n\r\n4. Compile js code\r\n\r\n\r\nWhat is the expected output? \r\nDependent files should be sorted and concatenated in their dependent order.\r\n\r\nWhat do you see instead?\r\nDependent files are not sorted.\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n&gt; r1824\r\nmac OS 10.7\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nThis worked in the r1810 release. However, it looks like this was changed in r1824. The compiler now expects closurePass to be true for dependency sorting to work.\r\nhttp://code.google.com/p/closure-compiler/source/detail?path=/trunk/src/com/google/javascript/jscomp/Compiler.java&amp;r=1824\r\n\r\nWhat we are looking for is a way to sort dependencies and concatenate all files in their dependent order without removing the goog.require/goog.provide js calls. Turning closurePass to true causes the goog calls to be replaced. We use this methodology in local development to test our JS code.\r\n\r\nThanks!\r\n"}