{"issue_id": "815", "title": "Presence of PropertyNamingStrategy Makes Deserialization Fail", "description": "\n<p dir=\"auto\">I originally came across this issue using Dropwizard - <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-hovercard-type=\"issue\" data-hovercard-url=\"/dropwizard/dropwizard/issues/1095/hovercard\" data-id=\"84880543\" data-permission-text=\"Title is private\" data-url=\"https://github.com/dropwizard/dropwizard/issues/1095\" href=\"https://github.com/dropwizard/dropwizard/issues/1095\">dropwizard/dropwizard#1095</a>.  But it looks like this is a Jackson issue.  Here's the rerproducer:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content='public class TestPropertyNamingStrategyIssue {\n  public static class ClassWithObjectNodeField {\n    public String id;\n    public ObjectNode json;\n  }\n\n  @Test\n  public void reproducer() throws Exception {\n    ObjectMapper mapper = new ObjectMapper();\n    mapper.setPropertyNamingStrategy(PropertyNamingStrategy.LOWER_CASE);\n    ClassWithObjectNodeField deserialized =\n        mapper.readValue(\n            \"{ \\\"id\\\": \\\"1\\\", \\\"json\\\": { \\\"foo\\\": \\\"bar\\\", \\\"baz\\\": \\\"bing\\\" } }\",\n            ClassWithObjectNodeField.class);\n  }\n}'><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">TestPropertyNamingStrategyIssue</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ClassWithObjectNodeField</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">id</span>;\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">ObjectNode</span> <span class=\"pl-s1\">json</span>;\n  }\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">reproducer</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n    <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">mapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n    <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">setPropertyNamingStrategy</span>(<span class=\"pl-smi\">PropertyNamingStrategy</span>.<span class=\"pl-c1\">LOWER_CASE</span>);\n    <span class=\"pl-smi\">ClassWithObjectNodeField</span> <span class=\"pl-s1\">deserialized</span> =\n        <span class=\"pl-s1\">mapper</span>.<span class=\"pl-en\">readValue</span>(\n            <span class=\"pl-s\">\"{ \\\"id\\\": \\\"1\\\", \\\"json\\\": { \\\"foo\\\": \\\"bar\\\", \\\"baz\\\": \\\"bing\\\" } }\"</span>,\n            <span class=\"pl-smi\">ClassWithObjectNodeField</span>.<span class=\"pl-s1\">class</span>);\n  }\n}</pre></div>\n<p dir=\"auto\">Looks like the presence of any PropertyNamingStrategy make deserialization to ObjectNode fail.  This works fine if I remove the property naming strategy.</p>\n"}