{"issue_id": "COMPRESS-160", "title": "TarArchiveOutputStream.getBytesWritten() returns invalid value", "description": "\n<div class=\"user-content-block\">\n<p>It appears the TarArchiveOutputStream.getBytesWritten()returns zero or invalid value when queried.<br/>\nIn the code sample below, it returns zero, even after an sizeable file was processed.<br/>\nI've printed it twice, once before closing the output stream, and once after, just for the reference.<br/>\nIt is also demonstrable on multiple processed files.</p>\n<p>Within the TarArchiveOutputStream.getBytesWritten() implementation, it appears the call for count(numToWrite) is made after the numToWrite is depleted in the process of actual byte writing. When call for count(numToWrite); is moved up, the returned values for TarArchiveOutputStream.getBytesWritten() are getting equal to the sum of the sizes of processed files. This is much closer to expected value (\"Returns the current number of bytes written to this stream.\") but still not correct, for that number should include the tar header sizes as well.</p>\n<p>At any rate, please find the proposed patch below, merely moving count(numToWrite); up a few lines. This makes TarArchiveOutputStream.getBytesWritten() closer to true value.</p>\n<p>Test code:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">@Test\n\t<span class=\"code-keyword\">public</span> void tartest() <span class=\"code-keyword\">throws</span> Exception {\n\t\t\n\t\tFileOutputStream myOutputStream = <span class=\"code-keyword\">new</span> FileOutputStream(<span class=\"code-quote\">\"C:/temp/tartest.tar\"</span>);\n\t\t\n\t\tArchiveOutputStream sTarOut = <span class=\"code-keyword\">new</span> ArchiveStreamFactory().createArchiveOutputStream(ArchiveStreamFactory.TAR, myOutputStream);\n\t\t\n\t\tFile sSource = <span class=\"code-keyword\">new</span> File(<span class=\"code-quote\">\"C:/share/od_l.txt\"</span>);\n\t\tTarArchiveEntry sEntry = <span class=\"code-keyword\">new</span> TarArchiveEntry(sSource);\n\t\tsTarOut.putArchiveEntry(sEntry);\n\t\t\n\t\tFileInputStream sInput = <span class=\"code-keyword\">new</span> FileInputStream(sSource);\n\t\t<span class=\"code-object\">byte</span>[] cpRead = <span class=\"code-keyword\">new</span> <span class=\"code-object\">byte</span>[8192];\n\t\t\n\t\t<span class=\"code-object\">int</span> iRead = 0;\n\t\t<span class=\"code-keyword\">while</span> ((iRead = sInput.read(cpRead)) &gt; 0) {\n\t\t\tsTarOut.write(cpRead, 0, iRead);\n\t\t}\n\t\t\n\t\tsLog.info(<span class=\"code-quote\">\"Processed: \"</span>+sTarOut.getBytesWritten()+<span class=\"code-quote\">\" bytes. File Len: \"</span>+sSource.length());\n\t\t\n\t\tsInput.close();\n\t\tsTarOut.closeArchiveEntry();\n\t\tsTarOut.close();\n\n\t\tsLog.info(<span class=\"code-quote\">\"Processed: \"</span>+sTarOut.getBytesWritten()+<span class=\"code-quote\">\" bytes. File Len: \"</span>+sSource.length());\n\n\t\t\n\t\t<span class=\"code-keyword\">return</span>;\n\t\t\t\n\t}\n</pre>\n</div></div>\n<p>Test Output:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">Oct 21, 2011 9:09:28 AM com.cronsult.jndmpd.test.Backup tartest\nINFO: Processed: 0 bytes. File Len: 186974208\nOct 21, 2011 9:09:28 AM com.cronsult.jndmpd.test.Backup tartest\nINFO: Processed: 0 bytes. File Len: 186974208\n</pre>\n</div></div>\n<p>Proposed Patch:</p>\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">Index: src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\n===================================================================\n--- src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\t(revision 1187150)\n+++ src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java\t(working copy)\n@@ -276,6 +276,8 @@\n             <span class=\"code-comment\">// eliminate some of the buffer copying.\n</span>             <span class=\"code-comment\">//\n</span>         }\n+        \n+        count(numToWrite);\n \n         <span class=\"code-keyword\">if</span> (assemLen &gt; 0) {\n             <span class=\"code-keyword\">if</span> ((assemLen + numToWrite) &gt;= recordBuf.length) {\n@@ -325,7 +327,7 @@\n             wOffset += num;\n         }\n         \n-        count(numToWrite);\n+        \n     }\n \n     /**\n\n</pre>\n</div></div>\n</div>\n"}