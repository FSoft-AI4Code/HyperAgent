{"issue_id": "LANG-662", "title": "org.apache.commons.lang3.math.Fraction does not reduce (Integer.MIN_VALUE, 2^k)", "description": "\n<div class=\"user-content-block\">\n<p>The greatestCommonDivisor method in class Fraction does not find the gcd of Integer.MIN_VALUE and 2^k, and this case can be triggered by taking Integer.MIN_VALUE as the numerator. Note that the case of taking Integer.MIN_VALUE as the denominator is handled explicitly in the getReducedFraction factory method.</p>\n<div class=\"code panel\" style=\"border-style: solid;border-width: 1px;\"><div class=\"codeHeader panelHeader\" style=\"border-bottom-width: 1px;border-bottom-style: solid;\"><b>FractionTest.java</b></div><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">\t<span class=\"code-comment\">// additional test cases\n</span>\t<span class=\"code-keyword\">public</span> void testReducedFactory_int_int() {\n\t\t<span class=\"code-comment\">// ...\n</span>\t\tf = Fraction.getReducedFraction(<span class=\"code-object\">Integer</span>.MIN_VALUE, 2);\n\t\tassertEquals(<span class=\"code-object\">Integer</span>.MIN_VALUE / 2, f.getNumerator());\n\t\tassertEquals(1, f.getDenominator());\n\n\t<span class=\"code-keyword\">public</span> void testReduce() {\n\t\t<span class=\"code-comment\">// ...\n</span>\t\tf = Fraction.getFraction(<span class=\"code-object\">Integer</span>.MIN_VALUE, 2);\n\t\tresult = f.reduce();\n\t\tassertEquals(<span class=\"code-object\">Integer</span>.MIN_VALUE / 2, result.getNumerator());\n\t\tassertEquals(1, result.getDenominator());\n</pre>\n</div></div>\n</div>\n"}