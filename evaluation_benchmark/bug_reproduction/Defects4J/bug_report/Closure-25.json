{"issue_id": "729", "title": "anonymous object type inference behavior is different when calling constructors", "description": "The following compiles fine with:\r\njava -jar build/compiler.jar --compilation_level=ADVANCED_OPTIMIZATIONS --jscomp_error=accessControls --jscomp_error=checkTypes --jscomp_error=checkVars --js ~/Desktop/reverse.js\r\n\r\nreverse.js:\r\n/**\r\n * @param {{prop1: string, prop2: (number|undefined)}} parry\r\n */\r\nfunction callz(parry) {\r\n  if (parry.prop2 &amp;&amp; parry.prop2 &lt; 5) alert('alright!');\r\n  alert(parry.prop1);\r\n}\r\n\r\ncallz({prop1: 'hi'});\r\n\r\n\r\n\r\nHowever, the following does not:\r\n/**\r\n * @param {{prop1: string, prop2: (number|undefined)}} parry\r\n * @constructor\r\n */\r\nfunction callz(parry) {\r\n  if (parry.prop2 &amp;&amp; parry.prop2 &lt; 5) alert('alright!');\r\n  alert(parry.prop1);\r\n}\r\n\r\nnew callz({prop1: 'hi'});\r\n\r\n\r\n/Users/dolapo/Desktop/reverse.js:10: ERROR - actual parameter 1 of callz does not match formal parameter\r\nfound   : {prop1: string}\r\nrequired: {prop1: string, prop2: (number|undefined)}\r\nnew callz({prop1: 'hi'});\r\n\r\n\r\n\r\nThanks!\r\n"}